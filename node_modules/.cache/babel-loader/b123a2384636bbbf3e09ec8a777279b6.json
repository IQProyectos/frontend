{"ast":null,"code":"import axios from 'axios';\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n  }\n};\nconst placesURL = 'https://backend-ic7841.herokuapp.com/api/private/place';\nexport const getPlaces = async id => {\n  id = id || '';\n\n  try {\n    return await axios.get(`${placesURL}/${id}`, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const addPlace = async places => {\n  try {\n    return await axios.post(`${placesURL}/`, places, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const deletePlace = async id => {\n  try {\n    return await axios.delete(`${placesURL}/${id}`, config);\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    throw Error(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error);\n  }\n};\nexport const editPlace = async (id, places) => {\n  try {\n    return await axios.patch(`${placesURL}/${id}`, places, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};","map":{"version":3,"sources":["/Users/luiscb/Documents/TEC/Verano 2021/Proyecto/Github/frontend/src/services/placeService.js"],"names":["axios","config","headers","Authorization","localStorage","getItem","placesURL","getPlaces","id","get","error","TypeError","addPlace","places","post","deletePlace","delete","Error","response","data","editPlace","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAEPC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFpD;AADE,CAAf;AAMA,MAAMC,SAAS,GAAG,wDAAlB;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAOC,EAAP,IAAc;AACnCA,EAAAA,EAAE,GAAGA,EAAE,IAAI,EAAX;;AACA,MAAG;AACC,WAAO,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAEH,SAAU,IAAGE,EAAG,EAA7B,EAAgCP,MAAhC,CAAb;AACH,GAFD,CAGA,OAAMS,KAAN,EAAY;AACR,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CARM;AAUP,OAAO,MAAMC,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AACtC,MAAG;AACC,WAAO,MAAMb,KAAK,CAACc,IAAN,CAAY,GAAER,SAAU,GAAxB,EAA4BO,MAA5B,EAAoCZ,MAApC,CAAb;AACH,GAFD,CAEC,OAAMS,KAAN,EAAY;AACT,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM;AAQP,OAAO,MAAMI,WAAW,GAAG,MAAOP,EAAP,IAAc;AACrC,MAAG;AACC,WAAO,MAAMR,KAAK,CAACgB,MAAN,CAAc,GAAEV,SAAU,IAAGE,EAAG,EAAhC,EAAmCP,MAAnC,CAAb;AACH,GAFD,CAEC,OAAMS,KAAN,EAAY;AAAA;;AACT,UAAMO,KAAK,CAACP,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEQ,QAAR,4EAAC,gBAAiBC,IAAlB,yDAAC,qBAAuBT,KAAxB,CAAX;AACH;AACJ,CANM;AAQP,OAAO,MAAMU,SAAS,GAAG,OAAOZ,EAAP,EAAWK,MAAX,KAAsB;AAC3C,MAAG;AACC,WAAO,MAAMb,KAAK,CAACqB,KAAN,CAAa,GAAEf,SAAU,IAAGE,EAAG,EAA/B,EAAkCK,MAAlC,EAA0CZ,MAA1C,CAAb;AACH,GAFD,CAEC,OAAMS,KAAN,EAAY;AACT,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM","sourcesContent":["import axios from 'axios';\r\n\r\nconst config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    }\r\n  };\r\nconst placesURL = 'https://backend-ic7841.herokuapp.com/api/private/place';\r\n\r\n\r\nexport const getPlaces = async (id) => {\r\n    id = id || '';\r\n    try{\r\n        return await axios.get(`${placesURL}/${id}`, config);\r\n    }    \r\n    catch(error){\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const addPlace = async (places) => {\r\n    try{\r\n        return await axios.post(`${placesURL}/`, places, config);\r\n    }catch(error){\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const deletePlace = async (id) => {\r\n    try{\r\n        return await axios.delete(`${placesURL}/${id}`, config);\r\n    }catch(error){\r\n        throw Error(error?.response?.data?.error);\r\n    }\r\n}\r\n\r\nexport const editPlace = async (id, places) => {\r\n    try{\r\n        return await axios.patch(`${placesURL}/${id}`, places, config)\r\n    }catch(error){\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}