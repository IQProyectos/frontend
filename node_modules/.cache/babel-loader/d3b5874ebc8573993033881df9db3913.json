{"ast":null,"code":"import axios from 'axios';\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n  }\n};\nconst bioprocessURL = 'https://backend-ic7841.herokuapp.com/api/private/bioprocess';\nexport const getBioprocesses = async id => {\n  try {\n    id = id || '';\n    return await axios.get(`${bioprocessURL}/${id}`, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const addBioprocess = async bioprocess => {\n  try {\n    return await axios.post(`${bioprocessURL}/`, bioprocess, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const deleteBioprocess = async id => {\n  try {\n    return await axios.delete(`https://backend-ic7841.herokuapp.com/api/private/bioprocess/${id}`, config);\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    throw Error(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error);\n  }\n};\nexport const editBioprocess = async (id, bioprocess) => {\n  try {\n    return await axios.patch(`${bioprocessURL}/${id}`, bioprocess, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};","map":{"version":3,"sources":["/Users/luiscb/Documents/TEC/Verano 2021/Proyecto/Github/frontend/src/services/bioprocessService.js"],"names":["axios","config","headers","Authorization","localStorage","getItem","bioprocessURL","getBioprocesses","id","get","error","TypeError","addBioprocess","bioprocess","post","deleteBioprocess","delete","Error","response","data","editBioprocess","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACL,oBAAgB,kBADX;AAELC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFtD;AADE,CAAf;AAMA,MAAMC,aAAa,GAAG,6DAAtB;AAGA,OAAO,MAAMC,eAAe,GAAG,MAAOC,EAAP,IAAc;AACzC,MAAI;AACAA,IAAAA,EAAE,GAAGA,EAAE,IAAI,EAAX;AACA,WAAO,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAEH,aAAc,IAAGE,EAAG,EAAjC,EAAoCP,MAApC,CAAb;AACH,GAHD,CAGE,OAAOS,KAAP,EAAc;AACZ,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CAPM;AASP,OAAO,MAAMC,aAAa,GAAG,MAAOC,UAAP,IAAsB;AAC/C,MAAI;AACA,WAAO,MAAMb,KAAK,CAACc,IAAN,CAAY,GAAER,aAAc,GAA5B,EAAgCO,UAAhC,EAA4CZ,MAA5C,CAAb;AACH,GAFD,CAEE,OAAOS,KAAP,EAAc;AACZ,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM;AAQP,OAAO,MAAMI,gBAAgB,GAAG,MAAOP,EAAP,IAAc;AAC1C,MAAI;AACA,WAAO,MAAMR,KAAK,CAACgB,MAAN,CAAc,+DAA8DR,EAAG,EAA/E,EAAkFP,MAAlF,CAAb;AACH,GAFD,CAEE,OAAOS,KAAP,EAAc;AAAA;;AACZ,UAAMO,KAAK,CAACP,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEQ,QAAR,4EAAC,gBAAiBC,IAAlB,yDAAC,qBAAuBT,KAAxB,CAAX;AACH;AACJ,CANM;AAQP,OAAO,MAAMU,cAAc,GAAG,OAAOZ,EAAP,EAAWK,UAAX,KAA0B;AACpD,MAAI;AACA,WAAO,MAAMb,KAAK,CAACqB,KAAN,CAAa,GAAEf,aAAc,IAAGE,EAAG,EAAnC,EAAsCK,UAAtC,EAAkDZ,MAAlD,CAAb;AACH,GAFD,CAEE,OAAOS,KAAP,EAAc;AACZ,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM","sourcesContent":["import axios from 'axios';\r\n\r\nconst config = {\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    }\r\n};\r\nconst bioprocessURL = 'https://backend-ic7841.herokuapp.com/api/private/bioprocess';\r\n\r\n\r\nexport const getBioprocesses = async (id) => {\r\n    try {\r\n        id = id || '';\r\n        return await axios.get(`${bioprocessURL}/${id}`, config);\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const addBioprocess = async (bioprocess) => {\r\n    try {\r\n        return await axios.post(`${bioprocessURL}/`, bioprocess, config);\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const deleteBioprocess = async (id) => {\r\n    try {\r\n        return await axios.delete(`https://backend-ic7841.herokuapp.com/api/private/bioprocess/${id}`, config);\r\n    } catch (error) {\r\n        throw Error(error?.response?.data?.error);\r\n    }\r\n}\r\n\r\nexport const editBioprocess = async (id, bioprocess) => {\r\n    try {\r\n        return await axios.patch(`${bioprocessURL}/${id}`, bioprocess, config)\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}