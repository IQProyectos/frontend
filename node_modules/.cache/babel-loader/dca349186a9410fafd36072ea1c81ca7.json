{"ast":null,"code":"import axios from 'axios';\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n  }\n};\nconst dataURL = 'https://backend-ic7841.herokuapp.com/api/private/record';\nexport const getData = async (pid, bid) => {\n  try {\n    pid = pid || '';\n    bid = bid || '';\n    return await axios.get(`${dataURL}/${bid}/${pid}`, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const addData = async data => {\n  try {\n    return await axios.post(`${dataURL}/`, data, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\n/*\r\nexport const deleteFactor = async (id) => {\r\n    try {\r\n        return await axios.delete(`${dataURL}/${id}`, config);\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const editFactor = async (id, Factor) => {\r\n    try {\r\n        return await axios.patch(`${FactorURL}/${id}`, Factor, config)\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}*/","map":{"version":3,"sources":["/Users/luiscb/Documents/TEC/Verano 2021/Proyecto/Github/frontend/src/services/dataService.js"],"names":["axios","config","headers","Authorization","localStorage","getItem","dataURL","getData","pid","bid","get","error","TypeError","addData","data","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACL,oBAAgB,kBADX;AAELC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFtD;AADE,CAAf;AAMA,MAAMC,OAAO,GAAG,yDAAhB;AAGA,OAAO,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvC,MAAI;AACAD,IAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AACAC,IAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AACA,WAAO,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAEJ,OAAQ,IAAGG,GAAI,IAAGD,GAAI,EAAnC,EAAsCP,MAAtC,CAAb;AACH,GAJD,CAIE,OAAOU,KAAP,EAAc;AACZ,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CARM;AAUP,OAAO,MAAMC,OAAO,GAAG,MAAOC,IAAP,IAAgB;AACnC,MAAI;AACA,WAAO,MAAMd,KAAK,CAACe,IAAN,CAAY,GAAET,OAAQ,GAAtB,EAA0BQ,IAA1B,EAAgCb,MAAhC,CAAb;AACH,GAFD,CAEE,OAAOU,KAAP,EAAc;AACZ,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM;AAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\r\n\r\nconst config = {\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    }\r\n};\r\nconst dataURL = 'https://backend-ic7841.herokuapp.com/api/private/record';\r\n\r\n\r\nexport const getData = async (pid, bid) => {\r\n    try {\r\n        pid = pid || '';\r\n        bid = bid || '';\r\n        return await axios.get(`${dataURL}/${bid}/${pid}`, config);\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const addData = async (data) => {\r\n    try {\r\n        return await axios.post(`${dataURL}/`, data, config);\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\n/*\r\nexport const deleteFactor = async (id) => {\r\n    try {\r\n        return await axios.delete(`${dataURL}/${id}`, config);\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const editFactor = async (id, Factor) => {\r\n    try {\r\n        return await axios.patch(`${FactorURL}/${id}`, Factor, config)\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}*/"]},"metadata":{},"sourceType":"module"}