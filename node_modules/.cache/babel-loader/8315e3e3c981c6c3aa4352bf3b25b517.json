{"ast":null,"code":"import axios from 'axios';\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n  }\n};\nconst userURL = 'http://localhost:3000/api/private/users';\nexport const getUsers = async id => {\n  try {\n    id = id || '';\n    return await axios.get(`${userURL}/${id}`, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const getAllUsers = async id => {\n  try {\n    id = id || '';\n    return await axios.get('http://localhost:3000/api/private/allUsers', config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const addUser = async user => {\n  try {\n    return await axios.post(`${userURL}/`, user, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    return await axios.delete(`${userURL}/${id}`, config);\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    throw Error(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error);\n  }\n};\nexport const editUser = async (id, user) => {\n  try {\n    return await axios.patch(`${userURL}/${id}`, user, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const getPermissions = async (uid, bid) => {\n  try {\n    return await axios.get(`http://localhost:3000/api/private/permissions/${uid}/${bid}`, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const editRoles = async (uid, newRoles) => {\n  try {\n    return await axios.post(`http://localhost:3000/api/private/userRole/${uid}`, {\n      \"roles\": newRoles\n    }, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};","map":{"version":3,"sources":["/Users/luiscb/Documents/TEC/Verano 2021/Proyecto/Github/frontend/src/services/userService.js"],"names":["axios","config","headers","Authorization","localStorage","getItem","userURL","getUsers","id","get","error","TypeError","getAllUsers","addUser","user","post","deleteUser","delete","Error","response","data","editUser","patch","getPermissions","uid","bid","editRoles","newRoles"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACL,oBAAgB,kBADX;AAELC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFtD;AADE,CAAf;AAMA,MAAMC,OAAO,GAAG,yCAAhB;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAClC,MAAI;AACAA,IAAAA,EAAE,GAAGA,EAAE,IAAI,EAAX;AACA,WAAO,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAEH,OAAQ,IAAGE,EAAG,EAA3B,EAA8BP,MAA9B,CAAb;AACH,GAHD,CAGE,OAAOS,KAAP,EAAc;AACZ,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CAPM;AASP,OAAO,MAAMC,WAAW,GAAG,MAAOJ,EAAP,IAAc;AACrC,MAAI;AACAA,IAAAA,EAAE,GAAGA,EAAE,IAAI,EAAX;AACA,WAAO,MAAMR,KAAK,CAACS,GAAN,CAAU,4CAAV,EAAwDR,MAAxD,CAAb;AACH,GAHD,CAGE,OAAOS,KAAP,EAAc;AACZ,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CAPM;AASP,OAAO,MAAME,OAAO,GAAG,MAAOC,IAAP,IAAgB;AACnC,MAAI;AACA,WAAO,MAAMd,KAAK,CAACe,IAAN,CAAY,GAAET,OAAQ,GAAtB,EAA0BQ,IAA1B,EAAgCb,MAAhC,CAAb;AACH,GAFD,CAEE,OAAOS,KAAP,EAAc;AACZ,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM;AAQP,OAAO,MAAMK,UAAU,GAAG,MAAOR,EAAP,IAAc;AACpC,MAAI;AACA,WAAO,MAAMR,KAAK,CAACiB,MAAN,CAAc,GAAEX,OAAQ,IAAGE,EAAG,EAA9B,EAAiCP,MAAjC,CAAb;AACH,GAFD,CAEE,OAAOS,KAAP,EAAc;AAAA;;AACZ,UAAMQ,KAAK,CAACR,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAES,QAAR,4EAAC,gBAAiBC,IAAlB,yDAAC,qBAAuBV,KAAxB,CAAX;AACH;AACJ,CANM;AAQP,OAAO,MAAMW,QAAQ,GAAG,OAAOb,EAAP,EAAWM,IAAX,KAAoB;AACxC,MAAI;AACA,WAAO,MAAMd,KAAK,CAACsB,KAAN,CAAa,GAAEhB,OAAQ,IAAGE,EAAG,EAA7B,EAAgCM,IAAhC,EAAsCb,MAAtC,CAAb;AACH,GAFD,CAEE,OAAOS,KAAP,EAAc;AACZ,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM;AAQP,OAAO,MAAMY,cAAc,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC9C,MAAG;AACC,WAAO,MAAMzB,KAAK,CAACS,GAAN,CAAW,iDAAgDe,GAAI,IAAGC,GAAI,EAAtE,EAAwExB,MAAxE,CAAb;AACH,GAFD,CAEC,OAAMS,KAAN,EAAa;AACV,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM;AAQP,OAAO,MAAMe,SAAS,GAAG,OAAOF,GAAP,EAAYG,QAAZ,KAAyB;AAC9C,MAAG;AACC,WAAO,MAAM3B,KAAK,CAACe,IAAN,CAAY,8CAA6CS,GAAI,EAA7D,EAAgE;AAAC,eAASG;AAAV,KAAhE,EAAqF1B,MAArF,CAAb;AACH,GAFD,CAEC,OAAMS,KAAN,EAAa;AACV,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM","sourcesContent":["import axios from 'axios';\r\n\r\nconst config = {\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    }\r\n};\r\nconst userURL = 'http://localhost:3000/api/private/users';\r\n\r\n\r\nexport const getUsers = async (id) => {\r\n    try {\r\n        id = id || '';\r\n        return await axios.get(`${userURL}/${id}`, config);\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const getAllUsers = async (id) => {\r\n    try {\r\n        id = id || '';\r\n        return await axios.get('http://localhost:3000/api/private/allUsers', config);\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const addUser = async (user) => {\r\n    try {\r\n        return await axios.post(`${userURL}/`, user, config);\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n        return await axios.delete(`${userURL}/${id}`, config);\r\n    } catch (error) {\r\n        throw Error(error?.response?.data?.error);\r\n    }\r\n}\r\n\r\nexport const editUser = async (id, user) => {\r\n    try {\r\n        return await axios.patch(`${userURL}/${id}`, user, config)\r\n    } catch (error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const getPermissions = async (uid, bid) => {\r\n    try{\r\n        return await axios.get(`http://localhost:3000/api/private/permissions/${uid}/${bid}`,config);\r\n    }catch(error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const editRoles = async (uid, newRoles) => {\r\n    try{\r\n        return await axios.post(`http://localhost:3000/api/private/userRole/${uid}`, {\"roles\": newRoles}, config);\r\n    }catch(error) {\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}