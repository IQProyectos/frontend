{"ast":null,"code":"import axios from 'axios';\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n  }\n};\nconst programsURL = 'http://localhost:5000/api/private/program';\nexport const getPrograms = async id => {\n  id = id || '';\n\n  try {\n    return await axios.get(`${programsURL}/${id}`, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const addProgram = async programs => {\n  try {\n    return await axios.post(`${programsURL}/`, programs, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};\nexport const deleteProgram = async id => {\n  try {\n    return await axios.delete(`${programsURL}/${id}`, config);\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    throw Error(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error);\n  }\n};\nexport const editProgram = async (id, programs) => {\n  try {\n    return await axios.patch(`${programsURL}/${id}`, programs, config);\n  } catch (error) {\n    return new TypeError(\"Authentication failed!\");\n  }\n};","map":{"version":3,"sources":["C:/Users/Usuario WTK/Desktop/zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2/frontend/src/services/programService.js"],"names":["axios","config","headers","Authorization","localStorage","getItem","programsURL","getPrograms","id","get","error","TypeError","addProgram","programs","post","deleteProgram","delete","Error","response","data","editProgram","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAEPC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFpD;AADE,CAAf;AAMA,MAAMC,WAAW,GAAG,2CAApB;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAOC,EAAP,IAAc;AACrCA,EAAAA,EAAE,GAAGA,EAAE,IAAI,EAAX;;AACA,MAAG;AACC,WAAO,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAEH,WAAY,IAAGE,EAAG,EAA/B,EAAkCP,MAAlC,CAAb;AACH,GAFD,CAGA,OAAMS,KAAN,EAAY;AACR,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CARM;AAUP,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB;AAC1C,MAAG;AACC,WAAO,MAAMb,KAAK,CAACc,IAAN,CAAY,GAAER,WAAY,GAA1B,EAA8BO,QAA9B,EAAwCZ,MAAxC,CAAb;AACH,GAFD,CAEC,OAAMS,KAAN,EAAY;AACT,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM;AAQP,OAAO,MAAMI,aAAa,GAAG,MAAOP,EAAP,IAAc;AACvC,MAAG;AACC,WAAO,MAAMR,KAAK,CAACgB,MAAN,CAAc,GAAEV,WAAY,IAAGE,EAAG,EAAlC,EAAqCP,MAArC,CAAb;AACH,GAFD,CAEC,OAAMS,KAAN,EAAY;AAAA;;AACT,UAAMO,KAAK,CAACP,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEQ,QAAR,4EAAC,gBAAiBC,IAAlB,yDAAC,qBAAuBT,KAAxB,CAAX;AACH;AACJ,CANM;AAQP,OAAO,MAAMU,WAAW,GAAG,OAAOZ,EAAP,EAAWK,QAAX,KAAwB;AAC/C,MAAG;AACC,WAAO,MAAMb,KAAK,CAACqB,KAAN,CAAa,GAAEf,WAAY,IAAGE,EAAG,EAAjC,EAAoCK,QAApC,EAA8CZ,MAA9C,CAAb;AACH,GAFD,CAEC,OAAMS,KAAN,EAAY;AACT,WAAO,IAAIC,SAAJ,CAAc,wBAAd,CAAP;AACH;AACJ,CANM","sourcesContent":["import axios from 'axios';\r\n\r\nconst config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    }\r\n  };\r\nconst programsURL = 'http://localhost:5000/api/private/program';\r\n\r\n\r\nexport const getPrograms = async (id) => {\r\n    id = id || '';\r\n    try{\r\n        return await axios.get(`${programsURL}/${id}`, config);\r\n    }    \r\n    catch(error){\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const addProgram = async (programs) => {\r\n    try{\r\n        return await axios.post(`${programsURL}/`, programs, config);\r\n    }catch(error){\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}\r\n\r\nexport const deleteProgram = async (id) => {\r\n    try{\r\n        return await axios.delete(`${programsURL}/${id}`, config);\r\n    }catch(error){\r\n        throw Error(error?.response?.data?.error);\r\n    }\r\n}\r\n\r\nexport const editProgram = async (id, programs) => {\r\n    try{\r\n        return await axios.patch(`${programsURL}/${id}`, programs, config)\r\n    }catch(error){\r\n        return new TypeError(\"Authentication failed!\");\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}