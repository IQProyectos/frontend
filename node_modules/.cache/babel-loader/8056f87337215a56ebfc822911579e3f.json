{"ast":null,"code":"var _jsxFileName = \"/Users/luiscb/Documents/TEC/Verano 2021/Proyecto/Github/frontend/src/pages/Predictor/BioprocessSelector.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckIcon from '@mui/icons-material/Check';\nimport axios from \"axios\";\nimport AlertMessage from '../../components/AlertMessage';\nimport Controls from \"../../components/controls/Controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: '90%',\n    margin: '50px 0 0 0'\n  },\n  thead: {\n    '& > *': {\n      fontSize: 20,\n      background: '#8ade8f',\n      color: '#FFFFFF'\n    }\n  },\n  head: {\n    fontSize: 20,\n    background: '#8ade8f',\n    color: '#FFFFFF'\n  },\n  row: {\n    '& > *': {\n      fontSize: 18\n    }\n  },\n  placeholder: {\n    height: 40,\n    textAlign: 'center'\n  },\n  placeholderLoading: {\n    height: 40,\n    textAlign: 'center',\n    width: '90%'\n  },\n  button: {\n    background: '#4287f5',\n    color: '#FFFFFF',\n    justifyContent: 'center'\n  },\n  paper: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'white',\n    padding: 8\n  }\n}));\nexport default function BioprocessSelector({\n  setBioprocess,\n  setBioprocessName\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleParentData = (bio, bioName) => {\n    setBioprocess(bio);\n    setBioprocessName(bioName);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [bioprocesses, setBioprocesses] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = React.useState(true);\n  const [bioprocessId, setBioprocessId] = React.useState('');\n\n  function wrapValues(bioprocesses) {\n    setBioprocesses(bioprocesses);\n    setLoading(false);\n  }\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleAccept = () => {\n    setOpenDialog(false);\n  };\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n    }\n  };\n\n  async function getAllBioprocesses() {\n    try {\n      setLoading(true);\n      const bioprocesses = await axios.get(\"http://localhost:3000/api/private/bioprocess\", config);\n      wrapValues(bioprocesses.data.bioprocesses);\n    } catch (error) {\n      setLoading(false);\n      setTimeout(() => {\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n      }, 5000);\n      setLoading(false);\n      return setError(\"Authentication failed!\");\n    }\n  }\n\n  useEffect(() => {\n    let unmounted = false;\n    getAllBioprocesses();\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.table,\n      children: [/*#__PURE__*/_jsxDEV(AlertMessage, {\n        errorMessage: error,\n        successMessage: \"\",\n        openMessage: open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          className: classes.container,\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              className: classes.thead,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Nombre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"\\xBFEs serie temporal?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Tipo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: classes.placeholder,\n                children: \"Acciones\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: bioprocesses.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(bioprocess => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              className: classes.row,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: bioprocess.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n                  name: \"isTimeSeries\",\n                  label: \"\",\n                  value: bioprocess.isTimeSeries,\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: bioprocess.type === 'regresion' ? 'Regresión' : 'Clasificación'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"row\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Seleccionar\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"primary\",\n                      variant: \"contained\",\n                      style: {\n                        marginRight: 10\n                      },\n                      onClick: () => handleParentData(bioprocess._id, bioprocess.name),\n                      children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 186\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Informaci\\xF3n\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: classes.button,\n                      variant: \"contained\",\n                      style: {\n                        marginRight: 10\n                      },\n                      component: Link,\n                      to: `/bioprocess/show/${bioprocess._id}`,\n                      children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 191\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this)]\n            }, bioprocess.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: bioprocesses.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BioprocessSelector, \"zpljtzTreScEuFiOqrdic965Hqw=\", false, function () {\n  return [useStyles];\n});\n\n_c = BioprocessSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"BioprocessSelector\");","map":{"version":3,"sources":["/Users/luiscb/Documents/TEC/Verano 2021/Proyecto/Github/frontend/src/pages/Predictor/BioprocessSelector.js"],"names":["React","useState","useEffect","Table","TableHead","TableCell","Paper","TableRow","TableBody","Button","makeStyles","CssBaseline","Grid","Link","TableContainer","TablePagination","Tooltip","InfoIcon","CheckIcon","axios","AlertMessage","Controls","useStyles","theme","table","width","margin","thead","fontSize","background","color","head","row","placeholder","height","textAlign","placeholderLoading","button","justifyContent","paper","backgroundColor","padding","BioprocessSelector","setBioprocess","setBioprocessName","classes","page","setPage","rowsPerPage","setRowsPerPage","handleParentData","bio","bioName","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","bioprocesses","setBioprocesses","open","setOpen","openDialog","setOpenDialog","error","setError","loading","setLoading","bioprocessId","setBioprocessId","wrapValues","handleClose","handleAccept","config","headers","Authorization","localStorage","getItem","getAllBioprocesses","get","data","setTimeout","unmounted","container","slice","map","bioprocess","name","isTimeSeries","type","marginRight","_id","id","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport axios from \"axios\";\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport Controls from \"../../components/controls/Controls\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            fontSize: 20,\r\n            background: '#8ade8f',\r\n            color: '#FFFFFF'\r\n        }\r\n    },\r\n    head: {\r\n        fontSize: 20,\r\n        background: '#8ade8f',\r\n        color: '#FFFFFF'\r\n\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    placeholder: {\r\n        height: 40,\r\n        textAlign: 'center'\r\n    },\r\n    placeholderLoading: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        background: '#4287f5',\r\n        color: '#FFFFFF',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        padding: 8\r\n    },\r\n\r\n}));\r\n\r\nexport default function BioprocessSelector({setBioprocess, setBioprocessName}) {\r\n\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleParentData = (bio, bioName) => {\r\n        setBioprocess(bio);\r\n        setBioprocessName(bioName);\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    const [bioprocesses, setBioprocesses] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [bioprocessId, setBioprocessId] = React.useState('');\r\n\r\n    function wrapValues(bioprocesses) {\r\n        setBioprocesses(bioprocesses);\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const handleAccept = () => {\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    async function getAllBioprocesses() {\r\n        try {\r\n            setLoading(true);\r\n            const bioprocesses = await axios.get(\r\n                \"http://localhost:3000/api/private/bioprocess\",\r\n                config\r\n            );\r\n            wrapValues(bioprocesses.data.bioprocesses);\r\n\r\n\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            setLoading(false);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        getAllBioprocesses();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.table}>\r\n                <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\r\n                <TableContainer >\r\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\r\n                        <TableHead>\r\n                            <TableRow className={classes.thead}>\r\n                                <TableCell>Nombre</TableCell>\r\n                                <TableCell>¿Es serie temporal?</TableCell>\r\n                                <TableCell>Tipo</TableCell>\r\n                                <TableCell className={classes.placeholder}>Acciones</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {bioprocesses.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((bioprocess) => (\r\n                                <TableRow hover className={classes.row} key={bioprocess.id}>\r\n                                    <TableCell>{bioprocess.name}</TableCell>\r\n                                    <TableCell>\r\n                                        <Controls.Checkbox\r\n                                            name=\"isTimeSeries\"\r\n                                            label=\"\"\r\n                                            value={bioprocess.isTimeSeries}\r\n                                            disabled={true}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{bioprocess.type === 'regresion' ? 'Regresión' : 'Clasificación'}</TableCell>\r\n                                    <TableCell>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justifyContent=\"center\"\r\n                                            alignItems=\"center\"\r\n                                        >\r\n                                            <Tooltip title=\"Seleccionar\">\r\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }}onClick={() => handleParentData(bioprocess._id, bioprocess.name)}><CheckIcon /></Button>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Información\">\r\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/bioprocess/show/${bioprocess._id}`}><InfoIcon /></Button>\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={bioprocesses.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}