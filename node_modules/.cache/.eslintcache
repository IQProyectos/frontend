[{"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\index.js":"1","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\App.js":"2","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\Header.js":"4","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\SideMenu.js":"5","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Home.js":"6","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\AboutUs.js":"7","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\Register.js":"8","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\Login.js":"9","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\AssignRole.js":"10","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\ViewUsers.js":"11","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\Profile.js":"12","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\routing\\RequireAuth.js":"13","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Factors\\CreateFactor.js":"14","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Factors\\UpdateFactor.js":"15","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Data\\CreateData.js":"16","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Data\\UploadCSV.js":"17","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Data\\ViewData.js":"18","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Predictor\\Predictor.js":"19","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Graphics\\ShowGraphics.js":"20","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\FileManager.js":"21","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\AlertMessage.js":"22","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\useForm.js":"23","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Graphics\\ShowHistogram.js":"24","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Graphics\\ShowBoxplot.js":"25","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Predictor\\DateRangeSelector.js":"26","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\PageHeader.js":"27","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\Controls.js":"28","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\getFileService.js":"29","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\userService.js":"30","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\predictionService.js":"31","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\dataService.js":"32","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\InputButton.js":"33","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\DatePicker.js":"34","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\Button.js":"35","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\Select.js":"36","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\Checkbox.js":"37","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\RadioGroup.js":"38","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\Input.js":"39","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\ImageComponent.js":"40","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\CircularStatic.js":"41","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\ScrollToTop.js":"42","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Factors\\ViewFactors.js":"43","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\factorService.js":"44","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\Test.js":"45","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\AssignPermission.js":"46","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Predictor\\ProjectSelector.js":"47","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Project\\ShowProject.js":"48","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Project\\ViewProjects.js":"49","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Project\\ProjectForm.js":"50","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\projectService.js":"51","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Predictor\\ProgramSelector.js":"52","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Program\\ViewProgram.js":"53","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Program\\ShowProgram.js":"54","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Program\\ProgramForm.js":"55","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\programService.js":"56","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Blog\\ShowBlog.js":"57","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Blog\\ViewBlog.js":"58","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\blogService.js":"59","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Blog\\BlogForm.js":"60"},{"size":470,"mtime":1640449562388,"results":"61","hashOfConfig":"62"},{"size":6723,"mtime":1640506542797,"results":"63","hashOfConfig":"62"},{"size":375,"mtime":1640449562407,"results":"64","hashOfConfig":"62"},{"size":4099,"mtime":1640509678622,"results":"65","hashOfConfig":"62"},{"size":5062,"mtime":1640507246452,"results":"66","hashOfConfig":"62"},{"size":736,"mtime":1640460295461,"results":"67","hashOfConfig":"62"},{"size":1533,"mtime":1640449562389,"results":"68","hashOfConfig":"62"},{"size":8832,"mtime":1640472783038,"results":"69","hashOfConfig":"62"},{"size":4671,"mtime":1640472783038,"results":"70","hashOfConfig":"62"},{"size":9425,"mtime":1640472783039,"results":"71","hashOfConfig":"62"},{"size":11213,"mtime":1640509284960,"results":"72","hashOfConfig":"62"},{"size":12775,"mtime":1640472783038,"results":"73","hashOfConfig":"62"},{"size":977,"mtime":1640449562387,"results":"74","hashOfConfig":"62"},{"size":5614,"mtime":1640472783054,"results":"75","hashOfConfig":"62"},{"size":5909,"mtime":1640472783053,"results":"76","hashOfConfig":"62"},{"size":28606,"mtime":1640475408737,"results":"77","hashOfConfig":"62"},{"size":140,"mtime":1640449562393,"results":"78","hashOfConfig":"62"},{"size":32410,"mtime":1640474617807,"results":"79","hashOfConfig":"62"},{"size":6693,"mtime":1640474617806,"results":"80","hashOfConfig":"62"},{"size":2548,"mtime":1640449737969,"results":"81","hashOfConfig":"62"},{"size":3328,"mtime":1640449562380,"results":"82","hashOfConfig":"62"},{"size":995,"mtime":1640449562379,"results":"83","hashOfConfig":"62"},{"size":1929,"mtime":1640449562387,"results":"84","hashOfConfig":"62"},{"size":2588,"mtime":1640449562396,"results":"85","hashOfConfig":"62"},{"size":1235,"mtime":1640449562396,"results":"86","hashOfConfig":"62"},{"size":2657,"mtime":1640449562400,"results":"87","hashOfConfig":"62"},{"size":1507,"mtime":1640508062330,"results":"88","hashOfConfig":"62"},{"size":409,"mtime":1640449562384,"results":"89","hashOfConfig":"62"},{"size":1207,"mtime":1640449562409,"results":"90","hashOfConfig":"62"},{"size":1894,"mtime":1640449737942,"results":"91","hashOfConfig":"62"},{"size":736,"mtime":1640449737944,"results":"92","hashOfConfig":"62"},{"size":1174,"mtime":1640449737945,"results":"93","hashOfConfig":"62"},{"size":874,"mtime":1640449562385,"results":"94","hashOfConfig":"62"},{"size":814,"mtime":1640449562384,"results":"95","hashOfConfig":"62"},{"size":739,"mtime":1640449562383,"results":"96","hashOfConfig":"62"},{"size":920,"mtime":1640449562386,"results":"97","hashOfConfig":"62"},{"size":1033,"mtime":1640449562383,"results":"98","hashOfConfig":"62"},{"size":802,"mtime":1640449562386,"results":"99","hashOfConfig":"62"},{"size":476,"mtime":1640449562384,"results":"100","hashOfConfig":"62"},{"size":4147,"mtime":1640449562381,"results":"101","hashOfConfig":"62"},{"size":1787,"mtime":1640472783057,"results":"102","hashOfConfig":"62"},{"size":1733,"mtime":1640508162026,"results":"103","hashOfConfig":"62"},{"size":7607,"mtime":1640579374724,"results":"104","hashOfConfig":"62"},{"size":1156,"mtime":1640449737944,"results":"105","hashOfConfig":"62"},{"size":345,"mtime":1640449562406,"results":"106","hashOfConfig":"62"},{"size":9293,"mtime":1640472783041,"results":"107","hashOfConfig":"62"},{"size":7087,"mtime":1640472783045,"results":"108","hashOfConfig":"62"},{"size":26668,"mtime":1640579442976,"results":"109","hashOfConfig":"62"},{"size":16493,"mtime":1640579070639,"results":"110","hashOfConfig":"62"},{"size":11401,"mtime":1640579567564,"results":"111","hashOfConfig":"62"},{"size":1180,"mtime":1640456595126,"results":"112","hashOfConfig":"62"},{"size":7887,"mtime":1640474803966,"results":"113","hashOfConfig":"62"},{"size":12758,"mtime":1640508885271,"results":"114","hashOfConfig":"62"},{"size":6730,"mtime":1640475241731,"results":"115","hashOfConfig":"62"},{"size":8815,"mtime":1640474803965,"results":"116","hashOfConfig":"62"},{"size":1149,"mtime":1640473218240,"results":"117","hashOfConfig":"62"},{"size":5997,"mtime":1640576741401,"results":"118","hashOfConfig":"62"},{"size":12230,"mtime":1640576742770,"results":"119","hashOfConfig":"62"},{"size":1107,"mtime":1640503619374,"results":"120","hashOfConfig":"62"},{"size":7625,"mtime":1640576737455,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"s8itrl",{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"124"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":3,"source":"239","usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"124"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"124"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"124"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"124"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"124"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"124"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"124"},"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\index.js",[],["276","277"],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\App.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\Header.js",["278","279","280"],"import React from 'react'\r\nimport { AppBar, Toolbar, makeStyles, CssBaseline } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        \r\n    },\r\n    toolbarButtons: {\r\n        marginLeft: 'auto',\r\n    },\r\n\r\n}));\r\n\r\nexport default function Header() {\r\n    const history = useHistory();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const image = localStorage.getItem(\"image\");\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        localStorage.removeItem(\"authToken\");\r\n        history.push(\"/login\");\r\n    };\r\n    const classes = useStyles();\r\n\r\n    const profileHandler = () =>{\r\n        const uid = localStorage.getItem(\"uid\");\r\n        history.push(`/profile/${uid}`);\r\n    }\r\n\r\n    const home= () =>{\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <div onClick={home}>\r\n                        <IconButton \r\n                            color=\"inherit\"    \r\n                        >\r\n                            <Typography variant=\"h6\" noWrap >\r\n                                Gestor de proyectos de investigación\r\n                            </Typography>\r\n                        </IconButton>\r\n                        \r\n                    </div>\r\n                    <div className={classes.toolbarButtons}>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMenu}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <Avatar\r\n                            src={image? image: \"\"}\r\n                            alt=\"\"                            \r\n                            >\r\n\r\n                            </Avatar>\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            getContentAnchorEl={null}\r\n                            anchorEl={anchorEl}\r\n                            anchorOrigin={{\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"center\",\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: \"top\",\r\n                                horizontal: \"center\",\r\n                            }}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <MenuItem onClick={profileHandler}>Ver Perfil</MenuItem>\r\n                            <MenuItem onClick={logoutHandler}>Salir</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\SideMenu.js",["281","282","283","284"],"// withStyles & makeStyles\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport NoteAddIcon from '@mui/icons-material/NoteAdd';\r\nimport BiotechIcon from '@mui/icons-material/Biotech';\r\nimport BeenhereIcon from '@mui/icons-material/Beenhere';\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n      overflow: 'auto',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\n\r\n\r\n\r\n  \r\nexport default function SideMenu() {\r\n\r\n  const [value, setValue] = useState(localStorage.getItem(\"type\"));\r\n\r\n  useEffect(() => {\r\n    console.log(value);\r\n  }, [value])  \r\n\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  function moveRoute(route) {\r\n    history.push(route);\r\n  }\r\n\r\n  function test(){\r\n    const type = localStorage.getItem(\"type\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      \r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            <ListItem button key={'principal'} onClick={() => moveRoute('/')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <HomeIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Página Principal'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            <ListItem button key={'proyecto'} onClick={() => moveRoute('/project/')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <EcoIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Proyectos'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          {value === 'admin' &&\r\n            <div> \r\n              <List>\r\n            <ListItem button key={'register'} onClick={() => moveRoute('/register')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <PersonAddIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Registrar Usuario'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            <ListItem button key={'assignRole'} onClick={() => moveRoute('/assignRole')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <AssignmentIndIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Asignar rol'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            <ListItem button key={'usuarios'} onClick={() => moveRoute('/users')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <PersonIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Usuarios'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n            </div>\r\n          }\r\n          \r\n          <List>\r\n            <ListItem button key={'programa'} onClick={() => moveRoute('/program')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <BeenhereIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Programas'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n\r\n          <List>\r\n            <ListItem button key={'programa'} onClick={() => moveRoute('/blog')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <NoteAddIcon/>}</ListItemIcon>\r\n              <ListItemText primary={'Blog'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          \r\n          <List>\r\n            <ListItem button key={'predictor'} onClick={() => moveRoute('/predictor')}>\r\n              <ListItemIcon>{1 % 2 === 0 ? <InboxIcon /> : <BiotechIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Hacer predicción'}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n        </div>\r\n      </Drawer>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Home.js",["285"],"import FileManager from '../components/FileManager';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport React from 'react'\r\n\r\nconst Home = ({ history }) => {    \r\n    return (\r\n        <div>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <h1>Gestor de proyectos de investigación</h1>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <h2>Prototipo: Sprint 1</h2>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\AboutUs.js",["286"],"import React from 'react'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport logo from \"../assets/img/logo.png\";\r\nimport Controls from \"../components/controls/Controls\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport default function AboutUs() {\r\n    const history = useHistory();\r\n    const handleGoBack = () => {\r\n        history.push(\"/\");\r\n      };\r\n    return (\r\n        <div>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                <Controls.Button\r\n              variant=\"contained\"\r\n              onClick={handleGoBack}\r\n              style={{\r\n                borderRadius: 0,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n              }}\r\n              text=\"Atrás\"\r\n            />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <h1>Acerca del equipo:</h1>\r\n                    <br/>\r\n                    <h2>Desarrolladores:</h2>\r\n                    <p>Erick Elizondo Ramirez</p>\r\n                    <p>Mauricio Gamboa Godinez</p>\r\n                    <p>Daniel Macías Reynaud</p>\r\n                    <br/>\r\n                    <h2>Diseñadora:</h2>\r\n                    <p>Karina Perez Gonzalez</p>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                <img className=\"login-image\" src={logo}></img>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\Register.js",["287","288","289"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Register.css\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport Grid from '@mui/material/Grid'\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport AlertMessage from '../../components/AlertMessage';\r\n\r\nconst initialValues = {\r\n  username: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  type: 'user',\r\n  roles: [],\r\n}\r\n\r\nconst useStyles = makeStyles(({\r\n  inputField: {\r\n    width:\"100%\",\r\n    marginBottom: \"20px\"\r\n  },\r\n  programholder: {\r\n    height: 40,\r\n    textAlign: 'center'\r\n  }\r\n}))\r\n\r\nconst Register = ({ }) => {\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  // const [items, setItems] = React.useState([{ name: \"\" }]);\r\n  // const [selected, setSelected] = React.useState(false);  \r\n  // const [inputProject, setInputProject] = React.useState('');\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    },\r\n  };\r\n  // function wrapValues(projects) {\r\n  //   setItems(projects);\r\n  //   setLoading(false);\r\n\r\n  // }\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    // async function getBio() {\r\n    //   try {\r\n    //     const projects = await axios.get(\r\n    //       \"http://localhost:5000/api/private/project\",\r\n    //       config\r\n    //     );\r\n    //     wrapValues(projects.data.projects);\r\n\r\n\r\n    //   } catch (error) {\r\n    //     setTimeout(() => {\r\n    //       setError(\"\");\r\n    //     }, 5000);\r\n    //     return setError(\"Authentication failed!\");\r\n    //   }\r\n    // }\r\n    //getBio();\r\n    return () => { unmounted = true; };\r\n  }, []);\r\n\r\n  // const [value, setValue] = React.useState(items[0]);\r\n  // const [inputValue, setInputValue] = React.useState('');\r\n\r\n  // const roleItems = [\r\n  //   { id: 'investigador', title: 'Investigador' },\r\n  //   { id: 'asistente', title: 'Asistente' },\r\n  // ]\r\n\r\n  const typeItems = [\r\n    { id: 'user', title: 'Usuario' },\r\n    { id: 'admin', title: 'Administrador' },\r\n  ]\r\n\r\n  const registerHandler = async (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n      setLoading(true);\r\n      if (values.password !== values.confirmPassword) {\r\n        setValues({...values, password: \"\", confirmPassword: \"\"});\r\n        setTimeout(() => {\r\n          setError(\"\");\r\n        }, 5000);\r\n        setLoading(false);\r\n        return setError(\"Las contraseñas no coinciden\");\r\n      }\r\n    // if (selected === false && type === 'user') {\r\n\r\n    //   setTimeout(() => {\r\n    //     setError(\"\");\r\n    //   }, 5000);\r\n    //   setLoading(false);\r\n    //   return setError(\"Seleccione un proyecto\");\r\n    // }\r\n\r\n\r\n      try {\r\n        // const role = {\r\n        //   projectId: value.id,\r\n        //   role: roleType\r\n        // }\r\n        console.log(values);\r\n        const { data } = await axios.post(\r\n          \"http://localhost:5000/api/private/register\",values,config\r\n        );\r\n        setLoading(false);\r\n        setOpen(true);\r\n        resetForm({})\r\n        setTimeout(function () {\r\n          setOpen(false);\r\n        }, 6000);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setError(error.response.data.error);\r\n        setTimeout(() => {\r\n          setError(\"\");\r\n        }, 5000);\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('username' in fieldValues)\r\n      temp.username = fieldValues.username ? \"\" : \"Este campo es obligatorio.\"\r\n    if ('email' in fieldValues)\r\n      temp.email = fieldValues.email ? \"\" : \"Este campo es obligatorio.\"\r\n    if ('password' in fieldValues)\r\n      temp.password = fieldValues.password ? \"\" : \"Este campo es obligatorio.\"\r\n    if ('confirmPassword' in fieldValues)\r\n      temp.confirmPassword = fieldValues.confirmPassword ? \"\" : \"Este campo es obligatorio.\"\r\n    setErrors({\r\n      ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  } = useForm(initialValues, true, validate);\r\n\r\n  return (\r\n    <div className=\"register-screen\" style={{width:'90%'}}>\r\n      {/* <form onSubmit={registerHandler} className=\"register-screen__form\"> */}\r\n      <Form onSubmit={registerHandler} className=\"register-screen__form\">\r\n        <div className={classes.programholder} hidden={!loading}>\r\n          <Fade\r\n            in={loading}\r\n            style={{\r\n              transitionDelay: '0m',\r\n            }}\r\n            unmountOnExit\r\n          >\r\n            <CircularProgress />\r\n          </Fade>\r\n          <br />\r\n        </div>\r\n        <AlertMessage errorMessage={error} successMessage={\"Se ha creado un nuevo usuario!\"} openMessage={open}/>\r\n        <h3 className=\"register-screen__title\">Crear una cuenta</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <Grid item xs={12}>\r\n          <Controls.Input\r\n            name=\"username\"\r\n            label=\"Usuario\"\r\n            type=\"text\"\r\n            value={values.username}\r\n            onChange={handleInputChange}\r\n            className={classes.inputField}\r\n            error={errors.username}\r\n          />\r\n          <Controls.Input\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            value={values.email}\r\n            onChange={handleInputChange}\r\n            className={classes.inputField}\r\n            error={errors.email}\r\n          />\r\n          <Controls.Input\r\n            name=\"password\"\r\n            label=\"Contraseña\"\r\n            type=\"password\"\r\n            value={values.password}\r\n            onChange={handleInputChange}\r\n            className={classes.inputField}\r\n            error={errors.password}\r\n          />\r\n          <Controls.Input\r\n            name=\"confirmPassword\"\r\n            label=\"Confirmar Contraseña\"\r\n            type=\"password\"\r\n            value={values.confirmPassword}\r\n            onChange={handleInputChange}\r\n            className={classes.inputField}\r\n            error={errors.confirmPassword}\r\n          />\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item>\r\n            <Controls.RadioGroup\r\n              name=\"type\"\r\n              label=\"Tipo de usuario\"\r\n              value={values.type}\r\n              // onChange={(e) => {\r\n              //   setType(e.target.value);\r\n              //   if (type === 'admin')\r\n              //     setUser(false);\r\n              //   else\r\n              //     setUser(true);\r\n              // }}\r\n              onChange={handleInputChange}\r\n              items={typeItems}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Tooltip title=\"El administrador tiene acceso a todas las funcionalidades del sistema, mientras un usuario tiene acceso limitado asociado a un proyecto.\">\r\n              <HelpIcon color={\"success\"} />\r\n            </Tooltip>\r\n\r\n          </Grid>\r\n        </Grid>\r\n        {/* <br />\r\n        <div hidden={isUser}>\r\n          <Autocomplete\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n              setValue(newValue);\r\n              setSelected(true);\r\n            }}\r\n            inputValue={inputValue}\r\n            onInputChange={(event, newInputValue) => {\r\n              setInputValue(newInputValue);\r\n            }}\r\n            id=\"combo-box-demo\"\r\n            options={items}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"Proyectos\" variant=\"outlined\" />}\r\n            disabled={loading}\r\n            disableClearable\r\n            inputValue={inputProject}\r\n            onInputChange={(event, newInputValue) => {\r\n              setInputProject(newInputValue);\r\n            }}\r\n          />\r\n          <br />\r\n          <Controls.RadioGroup\r\n            name=\"role\"\r\n            label=\"Tipo de rol\"\r\n            value={roleType}\r\n            onChange={(e) => { setRole(e.target.value); }}\r\n            items={roleItems}\r\n          />\r\n        </div>*/}\r\n        <br />\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Registrar Cuenta\r\n        </button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\Login.js",["290","291","292","293","294","295","296"],"import React, { useState, useEffect, } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport Grid from '@mui/material/Grid'\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport logo from '../../assets/img/logo.png'\r\n\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageContent: {\r\n    margin: '50px 0 0 0',\r\n    width: '90%',\r\n    padding: theme.spacing(3)\r\n  },\r\n  inputField: {\r\n    width: \"100%\",\r\n    marginBottom: \"20px\"\r\n  },\r\n  programholder: {\r\n    height: 40,\r\n    textAlign: 'center'\r\n  },\r\n}))\r\n\r\nconst Login = ({ history }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  const login = async () => {\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"http://localhost:5000/api/auth/login\", values, config\r\n      );\r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n      localStorage.setItem(\"uid\", data.id);\r\n      localStorage.setItem(\"image\", data.image);\r\n      localStorage.setItem(\"type\", data.type);\r\n      window.location.reload();\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setOpen(true);\r\n      console.log(error.response);\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n        setOpen(false);\r\n      }, 5000);\r\n    }\r\n  }\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    if (validate())\r\n      await login();\r\n    setLoading(false);\r\n  };\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('email' in fieldValues)\r\n      temp.email = fieldValues.email ? \"\" : \"Este campo es obligatorio.\"\r\n    if ('password' in fieldValues)\r\n      temp.password = fieldValues.password ? \"\" : \"Este campo es obligatorio.\"\r\n    setErrors({\r\n      ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  } = useForm(initialValues, true, validate);\r\n\r\n  return (\r\n    <div className=\"login-content\">\r\n      <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <img className=\"login-image\" src={logo}></img>\r\n        </Grid>\r\n\r\n      <div className=\"login-screen\">       \r\n\r\n        {/* <form onSubmit={loginHandler} className=\"login-screen__form\"> */}\r\n        <Form onSubmit={loginHandler} className=\"login-screen__form\">\r\n          <div className={classes.programholder} hidden={!loading}>\r\n            <Fade\r\n              in={loading}\r\n              style={{\r\n                transitionDelay: '0m',\r\n              }}\r\n              unmountOnExit\r\n            >\r\n              <CircularProgress />\r\n            </Fade>\r\n            <br />\r\n          </div>\r\n          <h3 className=\"login-screen__title\">Inicia Sesión</h3>\r\n          <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\r\n\r\n          <Grid item xs={12}>\r\n            <Controls.Input\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={values.email}\r\n              onChange={handleInputChange}\r\n              className={classes.inputField}\r\n              error={errors.email}\r\n            />\r\n            <Controls.Input\r\n              name=\"password\"\r\n              label=\"Contraseña\"\r\n              type=\"password\"\r\n              value={values.password}\r\n              onChange={handleInputChange}\r\n              className={classes.inputField}\r\n              error={errors.password}\r\n            />\r\n          </Grid>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Inicia Sesión\r\n          </button>\r\n        </Form>\r\n      </div>\r\n      <br/>\r\n      <a href=\"/about\">Acerca de Nosotros</a>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\AssignRole.js",["297","298","299","300","301","302"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Register.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst AssignRole = ({ }) => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const [projects, setProjects] = React.useState([{ name: \"\" }]);\r\n    const [users, setUsers] = React.useState([{ username: \" \" }]);\r\n    const [selectedUser, setSelectedUser] = React.useState(false);\r\n    const [selectedProject, setSelectedProject] = React.useState(false);\r\n    const [roleType, setRole] = useState(\"investigador\");\r\n    const [open, setOpen] = React.useState(false);\r\n    const [inputUser, setInputUser] = React.useState('');\r\n    const [inputProject, setInputProject] = React.useState('');\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n    function wrapUsers(users) {\r\n\r\n        setUsers(users);\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    function wrapProjects(projects) {\r\n        setProjects(projects);\r\n        setLoading(false);\r\n        setSelectedUser(true);\r\n\r\n    }\r\n\r\n    function cleanForm() {\r\n        setSelectedProject(false);\r\n        setRole(\"investigador\");\r\n        setInputProject(\"\");\r\n        \r\n    }\r\n\r\n    async function getBio(userValue) {\r\n        try {\r\n            setLoading(true);\r\n            setSelectedUser(false);\r\n            const projects = await axios.get(\r\n                `http://localhost:5000/api/private/filteredproject/${userValue.id}`,\r\n                config\r\n            );\r\n            wrapProjects(projects.data.projects);\r\n\r\n\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n            setLoading(false);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        async function getUsers() {\r\n            try {\r\n                const users = await axios.get(\r\n                    \"http://localhost:5000/api/private/users/\",\r\n                    config\r\n                );\r\n                wrapUsers(users.data.users);\r\n\r\n\r\n            } catch (error) {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 5000);\r\n                setLoading(false);\r\n                return setError(\"Authentication failed!\");\r\n            }\r\n        }\r\n\r\n\r\n        getUsers();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const [projectValue, setprojectValue] = React.useState(projects[0]);\r\n    const [userValue, setuserValue] = React.useState(users[0]);\r\n\r\n    const roleItems = [\r\n        { id: 'investigador', title: 'Investigador' },\r\n        { id: 'asistente', title: 'Asistente' },\r\n    ]\r\n\r\n\r\n    const registerHandler = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (selectedUser === false || selectedProject === false) {\r\n\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n            setLoading(false)\r\n            return setError(\"Seleccione un proyecto\");\r\n        }\r\n\r\n\r\n        try {\r\n            const role = {\r\n                projectId: projectValue.id,\r\n                projectName: projectValue.name,\r\n                role: roleType,\r\n                editFactor: true,\r\n                editData: true,\r\n                export: true\r\n            }\r\n            userValue.roles.push(role);\r\n            const { data } = await axios.patch(\r\n                `http://localhost:5000/api/private/users/${userValue.id}`,\r\n                {\r\n                    username: userValue.username,\r\n                    email: userValue.email,\r\n                    type: userValue.type,\r\n                    roles: userValue.roles\r\n                },\r\n                config\r\n            );\r\n            await getBio(userValue);\r\n            setLoading(false);\r\n            setOpen(true);\r\n            cleanForm();\r\n            setTimeout(function () {\r\n                setOpen(false);\r\n            }, 6000);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(error.response.data.error);\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        programholder: {\r\n            height: 40,\r\n            textAlign: 'center'\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div className=\"register-screen\">\r\n\r\n            <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n                <div className={classes.programholder} hidden={!loading}>\r\n                    <Fade\r\n                        in={loading}\r\n                        style={{\r\n                            transitionDelay: '0m',\r\n                        }}\r\n                        unmountOnExit\r\n                    >\r\n                        <CircularProgress />\r\n                    </Fade>\r\n                    <br />\r\n                </div>\r\n\r\n                <Collapse in={open}>\r\n                    <Alert\r\n                        severity={error ? \"error\" : \"success\"}\r\n                        action={\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                    setOpen(false);\r\n                                }}\r\n                            >\r\n                                <CloseIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                        }\r\n                    >\r\n                        {error ? error : 'Se ha asociado el rol!'}\r\n                    </Alert>\r\n                </Collapse>\r\n\r\n                <h3 className=\"register-screen__title\">Asignar rol a usuario existente</h3>\r\n                {error && <span className=\"error-message\">{error}</span>}\r\n                <br />\r\n                <div >\r\n                    <Autocomplete\r\n                        value={userValue}\r\n                        onChange={(event, newValue) => {\r\n                            setuserValue(newValue);\r\n                            setSelectedUser(true);\r\n                            setSelectedProject(false);\r\n                            console.log(newValue);\r\n                            getBio(newValue);\r\n                        }}\r\n                        id=\"combo-box-users\"\r\n                        options={users}\r\n                        getOptionLabel={(option) => option.username}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Usuarios\" variant=\"outlined\" />}\r\n                        disabled={loading}\r\n                        disableClearable\r\n                        inputValue={inputUser}\r\n                        onInputChange={(event, newInputValue) => {\r\n                            setInputUser(newInputValue);\r\n                        }}\r\n                    />\r\n                    <br />\r\n                    <Autocomplete\r\n                        value={projectValue}\r\n                        onChange={(event, newValue) => {\r\n                            setprojectValue(newValue);\r\n                            setSelectedProject(true);\r\n                        }}\r\n                        id=\"combo-box-assign\"\r\n                        options={projects}\r\n                        getOptionLabel={(option) => option.name}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Proyectos\" variant=\"outlined\" />}\r\n                        disabled={!selectedUser}\r\n                        disableClearable\r\n                        inputValue={inputProject}\r\n                        onInputChange={(event, newInputValue) => {\r\n                            setInputProject(newInputValue);\r\n                        }}\r\n                    />\r\n                    <br />\r\n                    <Controls.RadioGroup\r\n                        name=\"role\"\r\n                        label=\"Tipo de rol\"\r\n                        value={roleType}\r\n                        onChange={(e) => { setRole(e.target.value); }}\r\n                        items={roleItems}\r\n                    />\r\n                </div>\r\n                <br />\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Asignar rol\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignRole;\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\ViewUsers.js",["303","304","305","306","307"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteUser } from '../../services/userService';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport axios from \"axios\";\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport Modal from '@mui/material/Modal';\r\nimport AssignPermission from './AssignPermission';\r\nimport Test from './Test';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            fontSize: 20,\r\n            background: '#17c6f6',\r\n            color: '#FFFFFF'\r\n        }\r\n    },\r\n    head: {\r\n        fontSize: 20,\r\n        background: '#8ade8f',\r\n        color: '#FFFFFF'\r\n\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    buttonheader: {\r\n        display: 'flex'\r\n\r\n    },\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center'\r\n    },\r\n    programholderLoading: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        background: '#4287f5',\r\n        color: '#FFFFFF',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        padding: 8\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\nexport default function ViewUsers() {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    const uid = localStorage.getItem(\"uid\");\r\n    const [users, setUsers] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [userId, setUserId] = React.useState('');;\r\n    const [openUser, setOpenUser] = React.useState(false);\r\n    const handleOpenUser = () => setOpenUser(true);\r\n    const handleCloseUser = () => setOpenUser(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    function wrapValues(users) {\r\n        setUsers(users);\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const handleAccept = () => {\r\n        deleteUserData()\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    async function getAllUsers() {\r\n        try {\r\n            const users = await axios.get(\r\n                `http://localhost:5000/api/private/allUsers/${uid}`,\r\n                config\r\n            );\r\n            wrapValues(users.data.users);\r\n\r\n\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        getAllUsers();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const deleteUserData = async () => {\r\n        try {\r\n            let response = await deleteUser(userId);\r\n            getAllUsers();\r\n        } catch (error) {\r\n            setOpen(true);\r\n            setError(error.message);\r\n            setTimeout(function () {\r\n                setOpen(false);\r\n                setError(\"\");\r\n            }, 3000);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Dialog\r\n                open={openDialog}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este usuario?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Esta decisión no es reversible.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={handleAccept} color=\"secondary\">\r\n                        Eliminar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <PageHeader\r\n                title=\"Información sobre los usuarios\"\r\n                subTitle=\"Acá se muestran todos los usuarios en el sistema\"\r\n                icon={<InfoIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n\r\n            <AssignPermission userId = {userId} openM={openUser}\r\n            onClose={handleCloseUser}/>\r\n\r\n\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.table}\r\n            >\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Box sx={{ width: 'auto' }} padding>\r\n                        <Typography variant=\"h6\" align=\"center\">¿Se necesita un nuevo usuario?</Typography>\r\n\r\n                    </Box>\r\n                    <Box textAlign='center'>\r\n                        <Controls.Button color=\"primary\" variant=\"contained\" component={Link} to={`/register/`} text=\"Crear usuario\" />\r\n                    </Box>\r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n\r\n            <div className={classes.programholderLoading} hidden={!loading}>\r\n                <br />\r\n                <Fade\r\n                    in={loading}\r\n                    style={{\r\n                        transitionDelay: '0m',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <CircularProgress />\r\n                </Fade>\r\n\r\n            </div>\r\n\r\n            <Paper className={classes.table}>\r\n                <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\r\n                <TableContainer >\r\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\r\n                        <TableHead>\r\n                            <TableRow className={classes.thead}>\r\n                                <TableCell>Usuario</TableCell>\r\n                                <TableCell>Email</TableCell>\r\n                                <TableCell>Tipo</TableCell>\r\n                                <TableCell className={classes.programholder}>Acciones</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user) => (\r\n                                <TableRow hover className={classes.row} key={user.id}>\r\n                                    <TableCell>{user.username}</TableCell>\r\n                                    <TableCell>{user.email}</TableCell>\r\n                                    <TableCell>{user.type === 'user' ? 'Usuario' : 'Administrador'}</TableCell>\r\n                                    <TableCell>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justifyContent=\"center\"\r\n                                            alignItems=\"center\"\r\n                                        >\r\n                                            <div hidden = {user.type === 'admin' ? true : false}>\r\n                                                <Tooltip title=\"Asignar permiso\">\r\n                                                    <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }} onClick={() => {setUserId(user._id); handleOpenUser()}}><ModeEditIcon /></Button>\r\n                                                </Tooltip>\r\n                                            </div>\r\n                                            <Tooltip title=\"Información\">\r\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/profile/${user._id}`}><InfoIcon /></Button>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Eliminar\">\r\n                                                <Button color=\"secondary\" variant=\"contained\" onClick={() => {\r\n                                                    setOpenDialog(true); setUserId(user._id);\r\n                                                }}><DeleteIcon /></Button>\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={users.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\Profile.js",["308","309","310"],"import React from 'react'\r\nimport { Paper, makeStyles } from '@material-ui/core'\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport CircularStatic from '../../components/CircularStatic'\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport axios from 'axios';\r\nimport ImageComponent from '../../components/ImageComponent';\r\nimport { Grid } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\r\nimport Header from \"../../components/Header\";\r\nimport SideMenu from \"../../components/SideMenu\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center'\r\n    },\r\n    button: {\r\n        background: '#4287f5',\r\n        color: '#FFFFFF',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: 'auto',\r\n        backgroundColor: 'white',\r\n        paddingTop: \"25px\"\r\n    },\r\n    pageContent: {\r\n        margin: '50px 0 0 0',\r\n        width: '100%',\r\n        padding: theme.spacing(3)\r\n    },\r\n    pageContent2: {\r\n        margin: '50px 0 0 50px',\r\n        width: '30%',\r\n    },\r\n    right: {\r\n        display: \"inline-flex\",\r\n        flex: \"row\",\r\n        width: '90%'\r\n    },\r\n    gridContainer: {\r\n        marginBottom: '40px'\r\n    }\r\n}))\r\n\r\nconst initialValues = {\r\n    username: '',\r\n    email: '',\r\n    name: '',\r\n    lastname: '',\r\n    phone: '',\r\n    roles: [],\r\n    type: '',\r\n    image:'',\r\n    details: ''\r\n\r\n}\r\n\r\nexport default function Profile() {\r\n    const { id } = useParams();\r\n    const uid = localStorage.getItem(\"uid\");\r\n    const isUser = uid===id ? true:false;\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        }, onUploadProgress: (data) => {\r\n            //Set the progress value to show the progress bar\r\n            setProgress(Math.round((100 * data.loaded) / data.total));\r\n        },\r\n    };\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        var pattern = new RegExp(/^[0-9\\b]+$/);\r\n        if ('phone' in fieldValues){\r\n            //temp.phone = fieldValues.phone.length === 8 ? \"\": \"El número debe ser de 8 dígitos\"            \r\n            if(fieldValues.phone)\r\n                temp.phone = !pattern.test(fieldValues.phone) ? \"Por favor ingrese solo números\": \"\";\r\n        }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let unmounted = false;\r\n        await getUser();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n\r\n    const getUser = async () => {\r\n        setLoading(true);\r\n        try {\r\n            let response = await axios.get(`http://localhost:5000/api/private/users/${id}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n                },\r\n                onDownloadProgress: (data) => {\r\n                    //Set the progress value to show the progress bar                    \r\n                    setProgress(Math.round((100 * data.loaded) / data.total));\r\n                },\r\n            });\r\n            setValues(response.data.user);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setOpen(false);\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n\r\n            }, 5000);\r\n            setOpen(true);\r\n            setLoading(false);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialValues, true, validate);\r\n\r\n    const handleChange = (event) => {\r\n        setEdit(event.target.value);\r\n      };\r\n\r\n    const confirmPost = async () => {\r\n        localStorage.setItem(\"image\", values.image);\r\n        setOpen(true);\r\n        setLoading(false);\r\n        setTimeout(function () {\r\n            setOpen(false);\r\n        }, 4000);\r\n    }  \r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            setLoading(true);\r\n            try {\r\n                await axios\r\n                    .patch(`http://localhost:5000/api/private/users/${id}`, values, config)\r\n                    .then(confirmPost)\r\n\r\n            }\r\n\r\n            catch (error) {\r\n                setLoading(false);\r\n                setTimeout(() => {\r\n                    setTimeout(() => {\r\n                        setError(\"\");\r\n                    }, 2000);\r\n                }, 5000);\r\n                return setError(\"Authentication failed!\");\r\n            }\r\n\r\n        }        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header image = {values.image} />\r\n            <SideMenu />\r\n            <CircularStatic progress={progress} hidden={!loading} />\r\n            <PageHeader\r\n                title=\"Información detallada de un usuario\"\r\n                subTitle=\"Puedes ver y modificar algunos campos\"\r\n                icon={<InfoIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n            <Grid item className={classes.right}>\r\n                <Paper className={classes.pageContent}>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <AlertMessage errorMessage={error} successMessage={\"Se ha actualizado el usuario!\"} openMessage={open} />\r\n                        <div hidden={!isUser}>\r\n                            <Grid container\r\n                                direction=\"row\"\r\n                                justifyContent=\"center\"\r\n                                alignItems=\"center\"\r\n                                style={{ textAlign: 'center' }}>    \r\n                                <Controls.Checkbox\r\n                                        name=\"edit\"\r\n                                        label=\"Editar usuario\"\r\n                                        value={edit}\r\n                                        style={{alignItems: \"center\"}}\r\n                                        onChange={handleChange}                                    \r\n                                />\r\n                            </Grid>\r\n                        </div>\r\n                        <Grid container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ textAlign: 'center' }}>\r\n                            <Grid item xs={12} className={classes.gridContainer}>\r\n                                <Controls.Input\r\n                                    name=\"name\"\r\n                                    label=\"Nombre\"\r\n                                    value={values.name}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.name}\r\n                                    disabled={!edit}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} className={classes.gridContainer}>\r\n                                <Controls.Input\r\n                                    label=\"Apellido\"\r\n                                    name=\"lastname\"\r\n                                    value={values.lastname}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.lastname}\r\n                                    disabled={!edit}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} className={classes.gridContainer}>\r\n                                <Controls.Input\r\n                                    name=\"phone\"\r\n                                    label=\"Número\"\r\n                                    value={values.phone}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.phone}\r\n                                    disabled={!edit}\r\n\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}  className={classes.gridContainer}>\r\n                                <Controls.Input\r\n                                    name=\"details\"\r\n                                    label=\"Dirección\"\r\n                                    value={values.details}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.details}\r\n                                    disabled={!edit}\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justifyContent=\"center\"\r\n                                alignItems=\"center\"\r\n                                style={{ marginTop: '20px' }}\r\n                                \r\n                            >\r\n                                <div hidden={!edit}>\r\n                                    <Controls.Button\r\n                                        type=\"submit\"\r\n                                        text=\"Guardar\"\r\n                                    />\r\n\r\n                                    <Controls.Button\r\n                                        text=\"Limpiar\"\r\n                                        color=\"inherit\"\r\n                                        onClick={resetForm} />\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Form>\r\n                </Paper>\r\n                <div className={classes.pageContent2}>\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                        <ImageComponent initialValues={values} onChange={handleInputChange} profile={true} />\r\n                        <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar style={{ backgroundColor: \"green\" }}>\r\n                                        <WorkIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary=\"Id\" secondary={values ? values._id : \"\"} />\r\n\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar style={{ backgroundColor: \"green\" }}>\r\n                                        <MailOutlineIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary=\"Email\" secondary={values ? values.email : \"\"} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar style={{ backgroundColor: \"green\" }}>\r\n                                        <PeopleAltIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary=\"Usuario\" secondary={values ? values.username : \"\"} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                </div>\r\n            </Grid>\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\routing\\RequireAuth.js",["311"],"import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport default function RequireAuth({ component: Component, ...rest }) {\r\n    const history = useHistory();\r\n\r\n    function isTokenExpired(token) {\r\n        if(token){\r\n            const payloadBase64 = token.split('.')[1];\r\n            const decodedJson = Buffer.from(payloadBase64, 'base64').toString();\r\n            const decoded = JSON.parse(decodedJson);\r\n            const exp = decoded.exp;\r\n            const expired = (Date.now() >= exp * 1000)\r\n            return expired\r\n        }\r\n        \r\n    }\r\n\r\n    if(isTokenExpired(localStorage.getItem(\"authToken\"))){\r\n        localStorage.clear();\r\n    }\r\n    if (!localStorage.getItem(\"authToken\")){\r\n        history.push('/login');        \r\n    }\r\n    \r\n    return(\r\n        <Route\r\n      {...rest}\r\n      render={(props) =>\r\n          <Component {...props} />\r\n      }\r\n    />\r\n    );\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Factors\\CreateFactor.js",["312","313","314","315","316"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from \"../../components/useForm\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { Paper, makeStyles, Box } from \"@material-ui/core\";\r\nimport EcoIcon from \"@material-ui/icons/Eco\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { addFactor } from \"../../services/factorService\";\r\n\r\nconst typeItems = [\r\n  { id: \"value\", title: \"Valor\" },\r\n  { id: \"image\", title: \"Imagen\" },\r\n];\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  description: \"\",\r\n  isDependent: false,\r\n  type: \"value\",\r\n  projectID: \"\",\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    margin: '50px 0 0 0',\r\n    width: '90%',\r\n    padding: theme.spacing(3)\r\n  },\r\n  programholder: {\r\n    height: 40,\r\n    textAlign: \"center\",\r\n    width: '90%'\r\n  },\r\n}));\r\n\r\nexport default function CreateFactor() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { id } = useParams();\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    },\r\n  };\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if (\"name\" in fieldValues)\r\n      temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\";\r\n    if (\"description\" in fieldValues)\r\n      temp.description = fieldValues.description\r\n        ? \"\"\r\n        : \"Este campo es obligatorio.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(initialValues, true, validate);\r\n\r\n  const confirmPost = () => {\r\n    setOpen(true);\r\n    setLoading(false);\r\n    resetForm({});\r\n    setTimeout(function () {\r\n      setOpen(false);\r\n    }, 6000);\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setLoading(true);\r\n      try {\r\n        values.projectID = id;\r\n        await addFactor(values).then(confirmPost).catch(console.log);\r\n        \r\n        \r\n      } catch (error) {\r\n        setLoading(false);\r\n        setTimeout(() => {\r\n          setTimeout(() => {\r\n            setError(\"\");\r\n          }, 2000);\r\n        }, 5000);\r\n        return setError(\"Authentication failed!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        title=\"Añadir nuevo factor\"   \r\n        subTitle=\"El factor creado va a estar ligado a este proyecto\"     \r\n        icon={<EcoIcon fontSize=\"large\" color=\"primary\" />}\r\n      />\r\n      <div className={classes.programholder} hidden={!loading}>\r\n        <Fade\r\n          in={loading}\r\n          style={{\r\n            transitionDelay: \"0m\",\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress />\r\n        </Fade>\r\n        <br />\r\n      </div>\r\n      <Paper className={classes.pageContent} >\r\n        <Form onSubmit={handleSubmit}>\r\n          <Collapse in={open}>\r\n            <Alert\r\n              severity={error ? \"error\" : \"success\"}\r\n              action={\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    setOpen(false);\r\n                  }}\r\n                >\r\n                  <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n              }\r\n            >\r\n              {error ? error : \"Se ha agregado un nuevo factor!\"}\r\n            </Alert>\r\n          </Collapse>\r\n          <Grid container>\r\n            <Grid item xs={6}>\r\n              <Controls.Input\r\n                name=\"name\"\r\n                label=\"Nombre\"\r\n                value={values.name}\r\n                onChange={handleInputChange}\r\n                error={errors.name}\r\n              />\r\n              <Controls.Input\r\n                label=\"Descripción\"\r\n                name=\"description\"\r\n                value={values.description}\r\n                onChange={handleInputChange}\r\n                error={errors.description}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Controls.RadioGroup\r\n                name=\"type\"\r\n                label=\"Tipo\"\r\n                value={values.type}\r\n                onChange={handleInputChange}\r\n                items={typeItems}\r\n              />\r\n              <Controls.Checkbox\r\n                name=\"isDependent\"\r\n                label=\"Es dependiente\"\r\n                value={values.isDependent}\r\n                onChange={handleInputChange}\r\n              />\r\n\r\n              <div>\r\n                <Controls.Button type=\"submit\" text=\"Agregar\" />\r\n\r\n                <Controls.Button\r\n                  text=\"Limpiar\"\r\n                  color=\"default\"\r\n                  onClick={resetForm}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Factors\\UpdateFactor.js",["317","318","319","320"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from \"../../components/useForm\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { Paper, makeStyles, Box } from \"@material-ui/core\";\r\nimport EcoIcon from \"@material-ui/icons/Eco\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { editFactor } from \"../../services/factorService\";\r\n\r\nconst typeItems = [\r\n  { id: \"value\", title: \"Valor\" },\r\n  { id: \"image\", title: \"Imagen\" },\r\n];\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  description: \"\",\r\n  isDependent: false,\r\n  type: \"\",\r\n  projectID: \"\",\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    margin: '50px 0 0 0',\r\n    width: '90%',\r\n    padding: theme.spacing(3)\r\n  },\r\n  programholder: {\r\n    height: 40,\r\n    textAlign: \"center\",\r\n    width: '90%'\r\n  },\r\n}));\r\n\r\nexport default function Updatefactor() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    getFactor();\r\n    return () => { unmounted = true; };\r\n  }, []);\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    },\r\n  };\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if (\"name\" in fieldValues)\r\n      temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\";\r\n    if (\"description\" in fieldValues)\r\n      temp.description = fieldValues.description\r\n        ? \"\"\r\n        : \"Este campo es obligatorio.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(initialValues, true, validate);\r\n\r\n  const getFactor = async () => {\r\n    try {\r\n        let response = await axios.get(`http://localhost:5000/api/private/factor/${id}`, config);\r\n        setValues(response.data.factor);\r\n        setLoading(false);        \r\n    } catch (error) {\r\n        setTimeout(() => {\r\n        setOpen(false);\r\n        setTimeout(() => {\r\n            setError(\"\");\r\n        }, 2000);\r\n\r\n        }, 5000);\r\n        setOpen(true);\r\n        setLoading(false);\r\n        return setError(\"Authentication failed!\");\r\n    }\r\n  }\r\n\r\n  const confirmPost = () => {\r\n    setOpen(true);\r\n    resetForm({});\r\n    setTimeout(function () {\r\n      setOpen(false);\r\n    }, 6000);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setLoading(true);\r\n      try {\r\n        console.log(values);\r\n        editFactor(id,values).then(confirmPost).catch(console.log);\r\n        \r\n        setLoading(false);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setTimeout(() => {\r\n          setTimeout(() => {\r\n            setError(\"\");\r\n          }, 2000);\r\n        }, 5000);\r\n        return setError(\"Authentication failed!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        title=\"Editar Factor\"        \r\n        icon={<EcoIcon fontSize=\"large\" color=\"primary\" />}\r\n      />\r\n      <div className={classes.programholder} hidden={!loading}>\r\n        <Fade\r\n          in={loading}\r\n          style={{\r\n            transitionDelay: \"0m\",\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress />\r\n        </Fade>\r\n        <br />\r\n      </div>\r\n      <Paper className={classes.pageContent}>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Collapse in={open}>\r\n            <Alert\r\n              severity={error ? \"error\" : \"success\"}\r\n              action={\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    setOpen(false);\r\n                  }}\r\n                >\r\n                  <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n              }\r\n            >\r\n              {error ? error : \"Se ha editado el factor!\"}\r\n            </Alert>\r\n          </Collapse>\r\n          <Grid container>\r\n            <Grid item xs={6}>\r\n              <Controls.Input\r\n                name=\"name\"\r\n                label=\"Nombre\"\r\n                value={values.name}\r\n                onChange={handleInputChange}\r\n                error={errors.name}\r\n              />\r\n              <Controls.Input\r\n                label=\"Descripción\"\r\n                name=\"description\"\r\n                value={values.description}\r\n                onChange={handleInputChange}\r\n                error={errors.description}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Controls.Checkbox\r\n                name=\"isDependent\"\r\n                label=\"Es dependiente\"\r\n                value={values.isDependent}\r\n                onChange={handleInputChange}\r\n              />\r\n\r\n              <div>\r\n                <Controls.Button type=\"submit\" text=\"Editar\" />\r\n\r\n                <Controls.Button\r\n                  text=\"Limpiar\"\r\n                  color=\"default\"\r\n                  onClick={resetForm}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Data\\CreateData.js",["321","322","323"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { Link } from 'react-router-dom';\r\nimport UploadFile from '@mui/icons-material/UploadFile';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from \"axios\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { green, red, grey, blue } from '@material-ui/core/colors';\r\nimport { addData } from \"../../services/dataService\";\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { getBase64 } from '../../services/getFileService';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nimport FileManager from '../../components/FileManager';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: \"#2f2c33\"\r\n        }\r\n    },\r\n    color: {\r\n        background: green[\"100\"]\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    add: {\r\n        backgroundColor: green[600]\r\n    },\r\n    remove: {\r\n        backgroundColor: red[400]\r\n    },\r\n    buttonFixed: {\r\n        position: \"fixed\"\r\n    },\r\n    image: {\r\n        backgroundColor: grey.A100,\r\n        \"&:hover\": {\r\n            backgroundColor: blue[50]\r\n        }\r\n    },\r\n    showImg: {\r\n        backgroundColor: grey.A100,\r\n        \"&:hover\": {\r\n            backgroundColor: blue[50]\r\n        }\r\n    },\r\n    removeImg: {\r\n        backgroundColor: grey.A100,\r\n        \"&:hover\": {\r\n            backgroundColor: blue[50]\r\n        }\r\n    }\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction CreateData() {\r\n    const { pid, bid } = useParams();\r\n    const [factors, setFactors] = useState([]);\r\n    const [factorsObj, setFactorsObj] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = React.useState(true);\r\n    const classes = useStyles()\r\n    const [inputFields, setInputFields] = useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [count, setCount] = React.useState(0);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [showCard, setShowCard] = useState(true);\r\n    const [image, setImage] = useState(\"\");\r\n    const [cardPositionX, setCardPositionX] = useState(0);\r\n    const [cardPositionY, setCardPositionY] = useState(0);\r\n    const [CSVData, setCSVData] = useState(\"\");\r\n\r\n    const message = \"Se han registrado los datos!\"\r\n\r\n    let date_ob = new Date();\r\n\r\n    let date = (\"0\" + date_ob.getDate()).slice(-2);\r\n\r\n    // current month\r\n    let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\r\n\r\n    // current year\r\n    let year = date_ob.getFullYear();\r\n\r\n    let t_time = date_ob.getHours() + \":\" + date_ob.getMinutes();\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    function wrapValues(factors, facObj) {\r\n        setFactors(factors);\r\n        setFactorsObj(facObj);\r\n        cleanData(facObj);\r\n        setLoading(false);\r\n        setCount(1);\r\n        setPage(1);\r\n    }\r\n\r\n    async function getAllFactors() {\r\n        try {\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/private/factorproject/${bid}`,\r\n                config\r\n            );\r\n            let facObj = { \"fecha\": \"\", \"hora\": \"\" };\r\n            response.data.factors.forEach(factor => {\r\n                facObj[factor.name] = \"\";\r\n            });\r\n            wrapValues(response.data.factors, facObj);\r\n\r\n\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setOpen(false)\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            setOpen(true)\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        getAllFactors();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const cleanData = (facObj) => {\r\n        setOpenDialog(false)\r\n        let first = Object.assign({}, facObj);\r\n        first.fecha = year + \"-\" + month + \"-\" + date;\r\n        first.hora = \"00:00\"\r\n        first.id = uuidv4();\r\n        setInputFields([first])\r\n    };\r\n\r\n    const handleChangePage = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handleAddDataFromCSV = (e, value) => {\r\n        e.preventDefault();\r\n\r\n        let csvKeys = Object.keys(CSVData[0]);\r\n        let realKeys = [];\r\n\r\n        for (let i = 0; i < factors.length; i++) {\r\n            realKeys.push(factors[i].name);\r\n        }\r\n        let canProceed = true;\r\n\r\n        for (let i = 0; i < csvKeys.length; i++) {\r\n            if (!csvKeys.includes(realKeys[i])) {\r\n                canProceed = false;\r\n            }\r\n\r\n        }\r\n\r\n        if (canProceed) {\r\n            let data = {\r\n                \"projectID\": bid,\r\n                \"programID\": pid,\r\n                \"values\": []\r\n            };\r\n\r\n            for (let i = 0; i < CSVData.length; i++) {\r\n                let element = {};\r\n                element.timestamp = year + \"-\" + month + \"-\" + date + \"T\" + t_time;\r\n                element.values = CSVData[i];\r\n                data.values.push(element)\r\n            }\r\n\r\n            try {\r\n                addData(data).then(() => {\r\n                    setOpen(true)\r\n                    cleanData(factorsObj);\r\n                });\r\n            } catch (error) {\r\n                setTimeout(() => {\r\n                    setTimeout(() => {\r\n                        setOpen(false)\r\n                        setError(\"\");\r\n                    }, 2000);\r\n                }, 5000);\r\n                setOpen(true)\r\n                return setError(\"Authentication failed!\");\r\n            }\r\n        } else {\r\n            console.log(\"Cant upload\")\r\n        }\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n    const parseInput = async () => {\r\n\r\n        return new Promise(resolve => {\r\n            let data = {\r\n                \"projectID\": bid,\r\n                \"programID\": pid,\r\n                \"values\": []\r\n            };\r\n\r\n            const forEachLoop = async _ => {\r\n                for (let index = 0; index < inputFields.length; index++) {\r\n                    let element = {};\r\n                    element.timestamp = inputFields[index].fecha + \"T\" + inputFields[index].hora;\r\n                    element.values = {};\r\n\r\n\r\n                    for (let index_2 = 0; index_2 < factors.length; index_2++) {\r\n                        if (factors[index_2].type === \"value\" || inputFields[index][factors[index_2].name] === \"\") {\r\n                            element.values[factors[index_2].name] = inputFields[index][factors[index_2].name];\r\n                        } else {\r\n\r\n                            let file = inputFields[index][factors[index_2].name];\r\n\r\n                            element.values[factors[index_2].name] = await getBase64(file);\r\n                        }\r\n                    }\r\n\r\n                    data.values.push(element);\r\n                }\r\n            }\r\n            forEachLoop().then(() => {\r\n                resolve(data);\r\n            }\r\n            );\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let data = await parseInput();\r\n\r\n        try {\r\n            addData(data).then(() => {\r\n                setOpen(true)\r\n                cleanData(factorsObj);\r\n            });\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setOpen(false)\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            setOpen(true)\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n\r\n    };\r\n\r\n    const handleChangeInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n                i[event.target.name] = event.target.value\r\n            }\r\n            return i;\r\n        })\r\n        console.log(newInputFields);\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const handleChangeImageInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n\r\n                i[event.target.name] = event.target.files[0];\r\n            }\r\n            return i;\r\n        })\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const handleAddFields = () => {\r\n\r\n\r\n        let newColumn = Object.assign({}, factorsObj);\r\n        newColumn.fecha = year + \"-\" + month + \"-\" + date;\r\n        newColumn.hora = \"00:00\"\r\n        newColumn.id = uuidv4(); //for (x in a){b[x] = 1}\r\n\r\n        setInputFields([...inputFields, newColumn]);\r\n\r\n        let con = inputFields.length + 1;\r\n        let result = con % 3 === 0 ? parseInt(con / 3) : 1 + parseInt(con / 3);\r\n        if (result > count) {\r\n            setCount(result);\r\n        }\r\n        if (page < result) {\r\n            setPage(result);\r\n        }\r\n    }\r\n\r\n    const handleRemoveFields = id => {\r\n        const values = [...inputFields];\r\n        values.splice(values.findIndex(value => value.id === id), 1);\r\n        setInputFields(values);\r\n\r\n        let con = inputFields.length - 1;\r\n        let result = con % 3 === 0 ? parseInt(con / 3) : 1 + parseInt(con / 3);\r\n        if (result < count) {\r\n            setCount(result);\r\n            setPage(result);\r\n        }\r\n    }\r\n\r\n    const removeImage = (id, factorName) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n\r\n                i[factorName] = \"\";\r\n            }\r\n            return i;\r\n        })\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const displayCard = (isCard, id, factorName, event) => {\r\n        setCardPositionX(event.clientX - 250);\r\n        setCardPositionY(event.clientY - 750);\r\n        let srcImage = \"\"\r\n\r\n\r\n        if (isCard !== \"\") {\r\n\r\n            inputFields.every(input => {\r\n\r\n                if (input.id === id) {\r\n                    srcImage = URL.createObjectURL(input[factorName]);\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n\r\n        setShowCard(isCard);\r\n        setImage(srcImage);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <PageHeader\r\n                title=\"Añadir datos al programa\"\r\n                subTitle=\"Se guardarán los datos del proyecto\"\r\n                icon={<InfoIcon fontSize=\"Large\"\r\n                />}\r\n            />\r\n            <div className={classes.programholder} hidden={!loading}>\r\n                <Fade\r\n                    in={loading}\r\n                    style={{\r\n                        transitionDelay: '0m',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <CircularProgress />\r\n                </Fade>\r\n                <br />\r\n            </div>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                }}\r\n            >\r\n                <Pagination\r\n                    sx={{ mt: 1 }}\r\n                    size=\"large\"\r\n                    variant=\"outlined\"\r\n                    color=\"standard\"\r\n                    count={count}\r\n                    siblingCount={0}\r\n                    boundaryCount={2}\r\n                    page={page}\r\n                    onChange={handleChangePage}\r\n                />\r\n            </Box>\r\n            <Collapse in={open}>\r\n                <Alert\r\n                    severity={error ? \"error\" : \"success\"}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpen(false);\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {error ? error : message}\r\n                </Alert>\r\n            </Collapse>\r\n            <form className={classes.root} onSubmit={handleSubmit}>\r\n                <Dialog\r\n                    open={openDialog}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={() => setOpenDialog(false)}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">¿Seguro que desea guardar la información?</DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={() => setOpenDialog(false)} color=\"standard\">\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button type=\"submit\" onClick={handleSubmit} color=\"primary\">\r\n                            Enviar\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'flex-start',\r\n                        ml: \"5%\"\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <Box sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <Typography\r\n                                sx={{\r\n                                    m: \"8px\",\r\n                                    py: \"6px\",\r\n                                    px: \"20px\",\r\n                                    width: \"100%\",\r\n                                    borderRadius: 1\r\n                                }}\r\n                                align=\"center\"\r\n                                variant=\"subtitle1\"\r\n                                component=\"div\"\r\n                                hidden={factors.length === 0}\r\n                                className={classes.color}>\r\n                                Fecha\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <Typography\r\n                                sx={{\r\n                                    m: \"8px\",\r\n                                    py: \"6px\",\r\n                                    px: \"20px\",\r\n                                    width: \"100%\",\r\n                                    borderRadius: 1\r\n                                }}\r\n                                align=\"center\"\r\n                                variant=\"subtitle1\"\r\n                                component=\"div\"\r\n                                hidden={factors.length === 0}\r\n                                className={classes.color}>\r\n                                Hora\r\n                            </Typography>\r\n                        </Box>\r\n                        {factors.map(factor => (\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        m: \"8px\",\r\n                                        py: \"6px\",\r\n                                        px: \"20px\",\r\n                                        width: \"100%\",\r\n                                        borderRadius: 1\r\n                                    }}\r\n                                    align=\"center\"\r\n                                    variant=\"subtitle1\"\r\n                                    component=\"div\"\r\n                                    className={classes.color}>\r\n                                    {factor.name}\r\n                                </Typography>\r\n                            </Box>\r\n                        ))}\r\n                    </div>\r\n                    {inputFields.map((inputField, index) => (\r\n                        3 * page - index >= 1 && 3 * page - index <= 3 &&\r\n                        <div key={inputField.id}>\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <TextField\r\n                                    type='date'\r\n                                    name=\"fecha\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    defaultValue={year + \"-\" + month + \"-\" + date}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    value={inputField.fecha}\r\n                                    onChange={event => handleChangeInput(inputField.id, event)}\r\n                                />\r\n                            </Box>\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <TextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    type='time'\r\n                                    name=\"hora\"\r\n                                    defaultValue={\"00:00\"}\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    value={inputField.hora}\r\n                                    onChange={event => handleChangeInput(inputField.id, event)}\r\n                                />\r\n                            </Box>\r\n                            {factors.map(factor => (\r\n                                <Box sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center'\r\n                                }}>\r\n                                    {factor.type === \"value\"\r\n                                        ? <TextField\r\n                                            type='number'\r\n                                            name={factor.name}\r\n                                            label=\"\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            value={inputField[factor.name]}\r\n                                            onChange={event => handleChangeInput(inputField.id, event)}\r\n                                        />\r\n                                        : inputFields[index][factor.name] === \"\"\r\n                                            ? <Tooltip title=\"Subir imagen\">\r\n                                                <Button\r\n                                                    style={{\r\n                                                        margin: \"8px\",\r\n                                                        width: \"100%\",\r\n                                                        paddingTop: \"8px\",\r\n                                                        paddingBottom: \"8px\",\r\n                                                        paddingLeft: \"20px\",\r\n                                                        paddingRight: \"20px\",\r\n                                                    }}\r\n                                                    variant=\"contained\"\r\n                                                    component=\"label\"\r\n                                                    className={classes.image}\r\n                                                >\r\n                                                    <UploadFile />\r\n                                                    <input\r\n                                                        name={factor.name}\r\n                                                        accept=\"image/*\"\r\n                                                        id=\"raised-button-file\"\r\n                                                        type=\"file\"\r\n                                                        hidden\r\n                                                        onChange={event => handleChangeImageInput(inputField.id, event)}\r\n                                                    />\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                            : <>\r\n                                                <Tooltip title=\"Abrir imagen\">\r\n                                                    <Button\r\n                                                        style={{\r\n                                                            margin: \"8px\",\r\n                                                            width: \"75%\",\r\n                                                            paddingTop: \"8px\",\r\n                                                            paddingBottom: \"8px\",\r\n                                                            paddingLeft: \"20px\",\r\n                                                            paddingRight: \"20px\",\r\n                                                        }}\r\n                                                        variant=\"contained\"\r\n                                                        onMouseEnter={(event) => displayCard(false, inputField.id, factor.name, event)}\r\n                                                        onMouseLeave={(event) => displayCard(true, \"\", \"\", event)}\r\n                                                        onClick={() => window.open(image)}\r\n                                                        target=\"_blank\"\r\n                                                        className={classes.showImg}\r\n                                                    >\r\n                                                        <VisibilityIcon />\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n                                                <Tooltip title=\"Remover imagen\">\r\n                                                    <Button\r\n                                                        style={{\r\n                                                            margin: \"8px\",\r\n                                                            width: \"25%\",\r\n                                                            paddingTop: \"8px\",\r\n                                                            paddingBottom: \"8px\",\r\n                                                            paddingLeft: \"20px\",\r\n                                                            paddingRight: \"20px\",\r\n                                                        }}\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.removeImg}\r\n                                                        onClick={() => removeImage(inputField.id, factor.name)}\r\n                                                    >\r\n                                                        <ClearIcon />\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n                                            </>\r\n                                    }\r\n                                </Box>\r\n                            ))}\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n\r\n                                <Tooltip title=\"Quitar columna\">\r\n                                    <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\r\n                                        <Avatar className={classes.remove}>\r\n                                            <RemoveIcon />\r\n                                        </Avatar>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </Box>\r\n                        </div>\r\n                    ))}\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center'\r\n                    }}\r\n                    >\r\n                        <Tooltip title=\"Añadir nueva columna\">\r\n                            <IconButton style={{ position: \"fixed\" }} disabled={inputFields.length === 0} var\r\n                                onClick={handleAddFields}\r\n                            >\r\n                                <Avatar className={classes.add}>\r\n                                    <AddIcon />\r\n                                </Avatar>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Box>\r\n                    <Controls.Button style={{ marginLeft: \"4.5%\" }}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => setOpenDialog(true)}\r\n                        text=\"Guardar datos ingresados\"\r\n                    />\r\n                </Box>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <PageHeader\r\n                    title={\"Subir archivo CSV\"}\r\n                    subTitle={\"Ingresar información a la base de datos con un archivo CSV.\"}\r\n                    icon={<FileUploadIcon fontSize=\"large\" color='primary'\r\n                    />}\r\n                />\r\n                <Box style={{ width: \"90%\" }}>\r\n\r\n                    <FileManager setCSVData={setCSVData} />\r\n                    <Controls.Button\r\n                        text=\"Enviar datos\"\r\n                        color=\"primary\"\r\n                        onClick={handleAddDataFromCSV}\r\n                    />\r\n                </Box>\r\n            </form>\r\n            <Card\r\n                sx={{\r\n                    maxWidth: 300,\r\n                    maxHeight: 300,\r\n                    position: \"relative\",\r\n                    top: cardPositionY,\r\n                    left: cardPositionX,\r\n                }}\r\n                hidden={showCard}\r\n            >\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    height=\"194\"\r\n                    image={image}\r\n                    alt=\"\"\r\n                />\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CreateData;","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Data\\UploadCSV.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Data\\ViewData.js",["324","325","326","327","328","329"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport axios from \"axios\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { green, red, grey, blue } from '@material-ui/core/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport UploadFile from '@mui/icons-material/UploadFile';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport Check from '@mui/icons-material/Check';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Alert from '@mui/material/Alert';\r\nimport { getBase64 } from '../../services/getFileService';\r\nimport { CSVDownloader } from 'react-papaparse'\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { getPermissions } from '../../services/userService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: \"#2f2c33\"\r\n        }\r\n    },\r\n    color: {\r\n        background: green[\"100\"]\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    add: {\r\n        backgroundColor: green[600]\r\n    },\r\n    remove: {\r\n        backgroundColor: red[400]\r\n    },\r\n    edit: {\r\n        backgroundColor: green[700]\r\n    },\r\n    save: {\r\n        backgroundColor: blue[700]\r\n    },\r\n    buttonFixed: {\r\n        position: \"fixed\"\r\n    },\r\n    image: {\r\n        backgroundColor: grey.A100,\r\n        \"&:hover\": {\r\n            backgroundColor: blue[50]\r\n        }\r\n    },\r\n    showImg: {\r\n        backgroundColor: grey.A100,\r\n        \"&:hover\": {\r\n            backgroundColor: blue[50]\r\n        }\r\n    },\r\n    removeImg: {\r\n        backgroundColor: grey.A100,\r\n        \"&:hover\": {\r\n            backgroundColor: blue[50]\r\n        },\r\n        \"&:disabled\": {\r\n            backgroundColor: blue[50]\r\n        }\r\n    },\r\n    normal: {\r\n\r\n    },\r\n    inputEdit: {\r\n        '& label.Mui-focused': {\r\n            color: 'green',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'green',\r\n                border: \"2px solid\"\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'grey',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'green',\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction ViewData() {\r\n    const { pid, bid } = useParams();\r\n    const [factors, setFactors] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = React.useState(true);\r\n    const classes = useStyles()\r\n    const [inputFields, setInputFields] = useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [count, setCount] = React.useState(0);\r\n    const [showCard, setShowCard] = useState(true);\r\n    const [image, setImage] = useState(\"\");\r\n    const [cardPositionX, setCardPositionX] = useState(0);\r\n    const [cardPositionY, setCardPositionY] = useState(0);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [recordId, setRecordId] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [inputEdit, setInputEdit] = useState({});\r\n    const [toExport, setExport] = useState([]);\r\n    const userType = localStorage.getItem(\"type\");\r\n    const [role, setRole] = useState(undefined);\r\n    const editMessage = \"¿Desea actualizar este registro?\";\r\n    const deleteMessage = \"¿Desea eliminar este registro?\";\r\n    const editMessage_2 = \"\";\r\n    const deleteMessage_2 = \"Esta acción no es reversible\";\r\n    const editSuccess = \"Se han actualizado los datos!\"\r\n    const deleteSuccess = \"Se ha eliminado el registro!\"\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    function wrapValues(factors) {\r\n        setFactors(factors);\r\n        setLoading(false);\r\n        setCount(1);\r\n        setPage(1);\r\n    }\r\n\r\n    async function getAllFactors() {\r\n        try {\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/private/factorproject/${bid}`,\r\n                config\r\n            );\r\n\r\n            wrapValues(response.data.factors);\r\n\r\n\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setOpen(false)\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            setOpen(true)\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    async function getAllData() {\r\n        try {\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/private/record/${bid}/${pid}`,\r\n                config\r\n            );\r\n\r\n            let parse = parseData(response.data.records);\r\n            setInputFields(parse);\r\n\r\n            let con = parse.length;\r\n            setCount(con % 3 === 0 ? parseInt(con / 3) : 1 + parseInt(con / 3));\r\n\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setOpen(false)\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            setOpen(true)\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    const deleteRecord = async rid => {\r\n        try {\r\n            return await axios.delete(`http://localhost:5000/api/private/record/${rid}`, config);\r\n        } catch (error) {\r\n            throw Error(error?.response?.data?.error);\r\n        }\r\n    }\r\n\r\n    const getEditor = async _ => {\r\n        return new Promise(resolve => {\r\n            let element = {};\r\n            element.timestamp = inputEdit.fecha + \"T\" + inputEdit.hora;\r\n            element.values = {};\r\n\r\n            const forEachLoop = async _ => {\r\n                for (let index = 0; index < factors.length; index++) {\r\n                    element.values[factors[index].name] = inputEdit[factors[index].name];\r\n                }\r\n            }\r\n            forEachLoop().then(() => {\r\n                resolve(element);\r\n            }\r\n            );\r\n        })\r\n    };\r\n\r\n\r\n\r\n    const updateRecord = async _ => {\r\n        let data = await getEditor();\r\n        try {\r\n            return await axios.patch(`http://localhost:5000/api/private/record/${inputEdit.id}`, data, config);\r\n        } catch (error) {\r\n            throw Error(error?.response?.data?.error);\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let unmounted = false;\r\n        if(userType === \"user\"){\r\n            const response = await getPermissions(localStorage.getItem(\"uid\"), bid);\r\n            setRole(response?.data?.role);\r\n        }\r\n        getAllFactors().then(getAllData());\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const handleChangePage = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const parseData = (records) => {\r\n        let inputs = [];\r\n        records.forEach(element => {\r\n            let input = {};\r\n\r\n            input.id = element.id;\r\n            let date = element.timestamp.split(\"T\");\r\n            input.fecha = date[0];\r\n            input.hora = date[1];\r\n\r\n            for (let value in element.values[0]) {\r\n                input[value] = element.values[0][value];\r\n            }\r\n            input.edit = false;\r\n            inputs.push(input);\r\n        });\r\n\r\n        return inputs;\r\n    }\r\n\r\n    const openImage = () => {\r\n        const base64ImageData = image;\r\n        const contentType = image.match(\"data:(.+);\")[1];\r\n\r\n        const byteCharacters = atob(base64ImageData.substr(`data:${contentType};base64,`.length));\r\n        const byteArrays = [];\r\n\r\n        for (let offset = 0; offset < byteCharacters.length; offset += 1024) {\r\n            const slice = byteCharacters.slice(offset, offset + 1024);\r\n\r\n            const byteNumbers = new Array(slice.length);\r\n            for (let i = 0; i < slice.length; i++) {\r\n                byteNumbers[i] = slice.charCodeAt(i);\r\n            }\r\n\r\n            const byteArray = new Uint8Array(byteNumbers);\r\n\r\n            byteArrays.push(byteArray);\r\n        }\r\n        const blob = new Blob(byteArrays, { type: contentType });\r\n        const blobUrl = URL.createObjectURL(blob);\r\n\r\n        window.open(blobUrl, '_blank');\r\n    }\r\n\r\n    const prepareDelete = id => {\r\n        setRecordId(id);\r\n        setOpenDialog(true);\r\n        setIsEdit(false);\r\n    }\r\n\r\n    const prepareEdit = input => {\r\n        setInputEdit(input);\r\n        setOpenDialog(true);\r\n        setIsEdit(true);\r\n    }\r\n\r\n    const handleDelete = () => {\r\n\r\n        deleteRecord(recordId).then(() => {\r\n            setOpen(true);\r\n            setOpenDialog(false);\r\n            const values = [...inputFields];\r\n            values.splice(values.findIndex(value => value.id === recordId), 1);\r\n            setInputFields(values);\r\n\r\n            let con = inputFields.length - 1;\r\n            let result = con % 3 === 0 ? parseInt(con / 3) : 1 + parseInt(con / 3);\r\n            if (result < count) {\r\n                setCount(result);\r\n                setPage(result);\r\n            }\r\n        }).catch(error => {\r\n            setError(error)\r\n            setOpen(true)\r\n            setOpenDialog(false);\r\n        });\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n\r\n        updateRecord().then(() => {\r\n            setOpen(true);\r\n            setOpenDialog(false);\r\n            setInputEdit({});\r\n            isEditing(inputEdit.id, false);\r\n        }).catch(error => {\r\n            setError(error)\r\n            setOpen(true)\r\n            setOpenDialog(false);\r\n        });\r\n    }\r\n\r\n    const handleChangeInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n                i[event.target.name] = event.target.value\r\n            }\r\n            return i;\r\n        })\r\n\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const handleChangeImageInput = (id, event) => {\r\n        let inputs = []\r\n        const forEachLoop = async _ => {\r\n\r\n            for (let index = 0; index < inputFields.length; index++) {\r\n                if (id === inputFields[index].id) {\r\n\r\n                    inputFields[index][event.target.name] = await getBase64(event.target.files[0]);\r\n                }\r\n                inputs.push(inputFields[index]);\r\n            }\r\n        }\r\n\r\n        forEachLoop().then(() => {\r\n            setInputFields(inputs);\r\n        });\r\n    }\r\n\r\n    const isEditing = (id, edit) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n\r\n                i[\"edit\"] = edit;\r\n            }\r\n            return i;\r\n        })\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const removeImage = (id, factorName) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n\r\n                i[factorName] = \"\";\r\n            }\r\n            return i;\r\n        })\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const displayCard = (isCard, id, factorName, event) => {\r\n        setCardPositionX(event.clientX - 250);\r\n        setCardPositionY(event.clientY - 600);\r\n        let srcImage = \"\"\r\n\r\n\r\n        if (isCard !== \"\") {\r\n\r\n            inputFields.every(input => {\r\n\r\n                if (input.id === id) {\r\n                    srcImage = input[factorName];\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n\r\n        setShowCard(isCard);\r\n        setImage(srcImage);\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setOpenDialog(false);\r\n        if (isEdit) {\r\n            isEditing(inputEdit.id, false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <PageHeader\r\n                title=\"Datos incluidos en el programa\"\r\n                subTitle=\"Se muestran todos los datos asociados a este programa y proyecto\"\r\n                icon={<InfoIcon fontSize=\"Large\"\r\n                />}\r\n            />\r\n            <div hidden={role? !role.export : false}>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                >\r\n                    <Tooltip title=\"Exportar datos\">\r\n                        <div className={classes.iconContainer}>\r\n                            <CSVDownloader\r\n                                data={inputFields}\r\n                                filename={'data'}\r\n                                config={{}}\r\n                            >\r\n                                <DownloadIcon fontSize={'medium'} color={'success'} />\r\n                            </CSVDownloader>\r\n                        </div>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </div>\r\n            <div className={classes.programholder} hidden={!loading}>\r\n                <Fade\r\n                    in={loading}\r\n                    style={{\r\n                        transitionDelay: '0m',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <CircularProgress />\r\n                </Fade>\r\n                <br />\r\n            </div>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center'\r\n                }}\r\n            >\r\n                <Pagination\r\n                    sx={{ mt: 1 }}\r\n                    size=\"large\"\r\n                    variant=\"outlined\"\r\n                    color=\"standard\"\r\n                    count={count}\r\n                    siblingCount={0}\r\n                    boundaryCount={2}\r\n                    page={page}\r\n                    onChange={handleChangePage}\r\n                />\r\n            </Box>\r\n            <Collapse in={open}>\r\n                <Alert\r\n                    severity={error ? \"error\" : \"success\"}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpen(false);\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {error ? error : isEdit ? editSuccess : deleteSuccess}\r\n                </Alert>\r\n            </Collapse>\r\n            <form className={classes.root}>\r\n                <Dialog\r\n                    open={openDialog}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={() => setOpenDialog(false)}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">{isEdit ? editMessage : deleteMessage}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\">\r\n                            {isEdit ? editMessage_2 : deleteMessage_2}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => closeDialog()} color={!isEdit ? \"primary\" : \"secondary\"}>\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button onClick={isEdit ? handleUpdate : handleDelete} color={isEdit ? \"primary\" : \"secondary\"}>\r\n                            {isEdit ? \"Actualizar\" : \"Eliminar\"}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'flex-start',\r\n                        ml: \"5%\"\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <Box sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <Typography\r\n                                sx={{\r\n                                    m: \"8px\",\r\n                                    py: \"6px\",\r\n                                    px: \"20px\",\r\n                                    width: \"100%\",\r\n                                    borderRadius: 1\r\n                                }}\r\n                                hidden={factors.length === 0}\r\n                                align=\"center\"\r\n                                variant=\"subtitle1\"\r\n                                component=\"div\"\r\n                                className={classes.color}>\r\n                                Fecha\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <Typography\r\n                                sx={{\r\n                                    m: \"8px\",\r\n                                    py: \"6px\",\r\n                                    px: \"20px\",\r\n                                    width: \"100%\",\r\n                                    borderRadius: 1\r\n                                }}\r\n                                hidden={factors.length === 0}\r\n                                align=\"center\"\r\n                                variant=\"subtitle1\"\r\n                                component=\"div\"\r\n                                className={classes.color}>\r\n                                Hora\r\n                            </Typography>\r\n                        </Box>\r\n                        {factors.map(factor => (\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        m: \"8px\",\r\n                                        py: \"6px\",\r\n                                        px: \"20px\",\r\n                                        width: \"100%\",\r\n                                        borderRadius: 1\r\n                                    }}\r\n                                    align=\"center\"\r\n                                    variant=\"subtitle1\"\r\n                                    component=\"div\"\r\n                                    className={classes.color}>\r\n                                    {factor.name}\r\n                                </Typography>\r\n                            </Box>\r\n                        ))}\r\n                    </div>\r\n                    {inputFields.map((inputField, index) => (\r\n                        3 * page - index >= 1 && 3 * page - index <= 3 &&\r\n                        <div key={inputField.id}>\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <TextField\r\n                                    className={inputFields[index][\"edit\"] ? classes.inputEdit : classes.normal}\r\n                                    disabled={!inputFields[index][\"edit\"]}\r\n                                    style={{ width: \"100%\" }}\r\n                                    type='date'\r\n                                    name=\"fecha\"\r\n                                    value={inputField.fecha}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onChange={event => handleChangeInput(inputField.id, event)}\r\n                                />\r\n                            </Box>\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <TextField\r\n                                    className={inputFields[index][\"edit\"] ? classes.inputEdit : classes.normal}\r\n                                    disabled={!inputFields[index][\"edit\"]}\r\n                                    style={{ width: \"100%\" }}\r\n                                    type='time'\r\n                                    name=\"hora\"\r\n                                    value={inputField.hora}\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={event => handleChangeInput(inputField.id, event)}\r\n                                />\r\n                            </Box>\r\n                            {factors.map(factor => (\r\n                                <Box sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center'\r\n                                }}>\r\n                                    {factor.type === \"value\"\r\n                                        ? <TextField\r\n                                            className={inputFields[index][\"edit\"] ? classes.inputEdit : classes.normal}\r\n                                            disabled={!inputFields[index][\"edit\"]}\r\n                                            type='number'\r\n                                            name={factor.name}\r\n                                            value={inputField[factor.name]}\r\n                                            label=\"\"\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            onChange={event => handleChangeInput(inputField.id, event)}\r\n                                        />\r\n                                        : inputFields[index][factor.name] === \"\"\r\n                                            ? <Tooltip title=\"Subir imagen\">\r\n                                                <Button\r\n                                                    style={{\r\n                                                        margin: \"8px\",\r\n                                                        width: \"100%\",\r\n                                                        paddingTop: \"8px\",\r\n                                                        paddingBottom: \"8px\",\r\n                                                        paddingLeft: \"20px\",\r\n                                                        paddingRight: \"20px\",\r\n                                                    }}\r\n                                                    disabled={!inputFields[index][\"edit\"]}\r\n                                                    variant=\"contained\"\r\n                                                    component=\"label\"\r\n                                                    className={classes.image}\r\n                                                >\r\n                                                    <UploadFile />\r\n                                                    <input\r\n                                                        name={factor.name}\r\n                                                        accept=\"image/*\"\r\n                                                        id=\"raised-button-file\"\r\n                                                        type=\"file\"\r\n                                                        hidden\r\n                                                        onChange={event => handleChangeImageInput(inputField.id, event)}\r\n                                                    />\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                            : <>\r\n                                                <Tooltip title=\"Abrir imagen\">\r\n                                                    <Button\r\n                                                        style={{\r\n                                                            margin: \"8px\",\r\n                                                            width: inputFields[index][\"edit\"] ? \"100%\" : \"75%\",\r\n                                                            paddingTop: \"8px\",\r\n                                                            paddingBottom: \"8px\",\r\n                                                            paddingLeft: \"20px\",\r\n                                                            paddingRight: \"20px\",\r\n                                                        }}\r\n                                                        variant=\"contained\"\r\n                                                        onMouseEnter={(event) => displayCard(false, inputField.id, factor.name, event)}\r\n                                                        onMouseLeave={(event) => displayCard(true, \"\", \"\", event)}\r\n                                                        onClick={() => openImage()}\r\n                                                        className={classes.showImg}\r\n                                                    >\r\n                                                        <Box\r\n                                                            component=\"img\"\r\n                                                            sx={{\r\n                                                                height: 25,\r\n                                                                width: 25,\r\n                                                                maxHeight: { xs: 25, md: 25 },\r\n                                                                maxWidth: { xs: 25, md: 25 },\r\n                                                            }}\r\n                                                            alt=\"\"\r\n                                                            src={inputFields[index][factor.name]}\r\n                                                        />\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n                                                {\r\n                                                    inputFields[index][\"edit\"] &&\r\n                                                    <Tooltip title=\"Remover imagen\">\r\n                                                        <Button\r\n                                                            style={{\r\n                                                                margin: \"8px\",\r\n                                                                width: \"25%\",\r\n                                                                paddingTop: \"8px\",\r\n                                                                paddingBottom: \"8px\",\r\n                                                                paddingLeft: \"20px\",\r\n                                                                paddingRight: \"20px\",\r\n                                                            }}\r\n                                                            disabled={!inputFields[index][\"edit\"]}\r\n                                                            variant=\"contained\"\r\n                                                            className={classes.removeImg}\r\n                                                            onClick={() => removeImage(inputField.id, factor.name)}\r\n                                                        >\r\n                                                            <ClearIcon />\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n                                                }\r\n                                            </>\r\n                                    }\r\n                                </Box>\r\n                            ))}\r\n                            <div hidden={role?!role.editData:false}>\r\n                                <Box\r\n                                    sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center'\r\n                                }}>\r\n\r\n                                    {!inputFields[index][\"edit\"]\r\n                                        ? <Tooltip title=\"Editar registro\">\r\n                                            <IconButton onClick={() => isEditing(inputField.id, true)}>\r\n                                                <Avatar className={classes.edit}>\r\n                                                    <ModeEditIcon />\r\n                                                </Avatar>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        : <Tooltip title=\"Guardar datos\">\r\n                                            <IconButton onClick={() => prepareEdit(inputField)}>\r\n                                                <Avatar className={classes.save}>\r\n                                                    <Check />\r\n                                                </Avatar>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    }\r\n                                    <Tooltip title=\"Eliminar registro\">\r\n                                        <IconButton onClick={() => prepareDelete(inputField.id)}>\r\n                                            <Avatar className={classes.remove}>\r\n                                                <DeleteIcon />\r\n                                            </Avatar>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Box>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </Box>\r\n            </form>\r\n            <Card\r\n                sx={{\r\n                    maxWidth: 300,\r\n                    maxHeight: 300,\r\n                    position: \"relative\",\r\n                    top: cardPositionY,\r\n                    left: cardPositionX,\r\n                }}\r\n                hidden={showCard}\r\n            >\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    height=\"194\"\r\n                    image={image}\r\n                    alt=\"\"\r\n                />\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ViewData;","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Predictor\\Predictor.js",["330"],"import React, { useState, useEffect } from 'react';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport BiotechIcon from '@mui/icons-material/Biotech';\r\nimport { Paper, Grid, makeStyles } from '@material-ui/core'\r\nimport ProjectSelector from './ProjectSelector';\r\nimport ProgramSelector from './ProgramSelector';\r\nimport DateRangeSelector from './DateRangeSelector';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { Link } from 'react-router-dom';\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport { addPrediction } from '../../services/predictionService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            fontSize: 20,\r\n            background: '#8ade8f',\r\n            color: '#FFFFFF'\r\n        }\r\n    },\r\n    head: {\r\n        fontSize: 20,\r\n        background: '#8ade8f',\r\n        color: '#FFFFFF'\r\n\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    buttonheader: {\r\n        display: 'flex'\r\n\r\n    },\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center'\r\n    },\r\n    programholderLoading: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        background: '#4287f5',\r\n        color: '#FFFFFF',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        padding: 8\r\n    },\r\n\r\n}));\r\n\r\nexport default function Predictor() {\r\n    const classes = useStyles();\r\n    const [project, setProject] = useState(\"\");\r\n    const [program, setProgram] = useState(\"\");\r\n    const [initialDate, setInitialDate] = useState(\"\");\r\n    const [finalDate, setFinalDate] = useState(\"\");\r\n\r\n    const [projectName, setProjectName] = useState(\"\");\r\n    const [programName, setProgramName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setProgram(\"\");\r\n        setProgramName(\"\");\r\n    }, [project]);\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        if(initialDate !== \"\" && finalDate !== \"\" && project !== \"\" && program !== \"\"){\r\n            let values = {\r\n                projectID: project,\r\n                programID: program,\r\n                initialDate: initialDate,\r\n                finalDate: finalDate\r\n            }\r\n            console.log(values);\r\n            addPrediction(values);\r\n\r\n        }else{\r\n            console.log(\"Error: Falta al menos un dato\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title=\"Realizar Predicción\"\r\n                subTitle=\"Siga los pasos encontrados en esta página, al finalizar, dirijase al botón al final de la página.\"\r\n                icon={<BiotechIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n            <br />\r\n             <PageHeader\r\n                title=\"Elija un proyecto\"\r\n                subTitle=\"Elija el bióproceso al que le desea hacer una predicción.\"\r\n                icon={<EcoIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n            <ProjectSelector setProject={setProject} setProjectName={setProjectName}/>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.table}\r\n            >\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Box sx={{ width: 'auto' }} padding>\r\n                        <Typography variant=\"h5\" align=\"center\">proyecto Seleccionado:</Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">{projectName}</Typography>\r\n                    </Box>\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <br />\r\n            <PageHeader\r\n                title=\"Elija un programa\"\r\n                subTitle=\"Elija el programa realacionado al proyecto seleccionado al que le desea hacer una predicción.\"\r\n                icon={<LocationOnIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n            <ProgramSelector id={project} setProgram={setProgram} setProgramName={setProgramName}/>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.table}\r\n            >\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Box sx={{ width: 'auto' }} padding>\r\n                        <Typography variant=\"h5\" align=\"center\">Programa Seleccionado:</Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">{programName}</Typography>\r\n                    </Box>\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <br />\r\n            <PageHeader\r\n                title=\"Elija un rango de fechas\"\r\n                subTitle=\"Los datos encontrados en este rango de fecha serán utilizados para realizar la predicción.\"\r\n                icon={<CalendarTodayIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n            <br />\r\n            <DateRangeSelector setInitialDate={setInitialDate} setFinalDate={setFinalDate}/>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.table}\r\n            >\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Box sx={{ width: 'auto' }} padding>\r\n                        <Typography variant=\"h5\" align=\"center\">Datos a utilizar para la predicción:</Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">proyecto: {projectName}</Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">Programa: {programName}</Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">FechaInicial: {initialDate}</Typography>\r\n                        <Typography variant=\"h6\" align=\"center\">FechaFinal: {finalDate}</Typography>\r\n                    </Box>\r\n                    <Box textAlign='center'>\r\n                        <Controls.Button color=\"primary\" variant=\"contained\" onClick={handleSubmit} text=\"Realizar Predicción\"/>\r\n                    </Box>\r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <br />\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Graphics\\ShowGraphics.js",["331","332","333"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport Container from '@material-ui/core/Container';\r\nimport ShowBoxplot from './ShowBoxplot';\r\nimport ShowHistogram from './ShowHistogram';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport Grid from '@mui/material/Grid';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nfunction ShowGraphics() {\r\n    const { pid, bid } = useParams();\r\n    const [error, setError] = useState('');\r\n    const [data, setData] = useState({ \"_isFull\": 0 });\r\n    const [graphics, setGraphics] = React.useState('histogram');\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    async function getData() {\r\n        try {\r\n            const result = await axios.get(\r\n                `http://localhost:5000/api/private/record/num/${bid}/${pid}`,\r\n                config\r\n            );\r\n            setData(result.data);\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        getData();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const handleChange = (event, newGraphics) => {\r\n        setGraphics(newGraphics);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    value={graphics}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                >\r\n                    <ToggleButton value=\"histogram\">Histogramas</ToggleButton>\r\n                    <ToggleButton value=\"boxplot\">Boxplots</ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Grid>\r\n            <div>\r\n                {graphics === \"histogram\" ?\r\n                    <ShowHistogram data={data} />\r\n                    : !data.hasOwnProperty(\"_isFull\") && <div>\r\n                        <ShowBoxplot data={data} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShowGraphics;\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\FileManager.js",["334","335","336","337"],"import React, { Component } from \"react\";\r\n\r\nimport { CSVReader, jsonToCSV, readString } from \"react-papaparse\";\r\n\r\nimport Controls from \"./controls/Controls\";\r\nimport { addData } from \"../services/dataService\";\r\n\r\nconst buttonRef = React.createRef();\r\n\r\nexport default function FileManager({setCSVData}) {\r\n  const handleOpenDialog = (e) => {\r\n    // Note that the ref is set async, so it might be null at some point\r\n    if (buttonRef.current) {\r\n      buttonRef.current.open(e);\r\n    }\r\n  };\r\n\r\n  const handleOnFileLoad = (data) => {\r\n    // Note that the ref is set async, so it might be null at some point\r\n    if (buttonRef.current) {\r\n      console.log(\"---------------------------\");\r\n      console.log(data);\r\n      let info = [];\r\n      for (const a of data) {\r\n        delete a.data.__parsed_extra;\r\n        info.push(a.data);\r\n      }\r\n      if (!info[info.length]) {\r\n        info.pop();\r\n      }\r\n      console.log(\"maci\");\r\n      console.log(info);\r\n      setCSVData(info);\r\n      console.log(\"---------------------------\");\r\n    }\r\n  };\r\n\r\n  const handleOnError = (err, file, inputElem, reason) => {\r\n    console.log(err);\r\n  };\r\n\r\n  const handleOnRemoveFile = (data) => {\r\n    console.log(\"---------------------------\");\r\n    console.log(data);\r\n    console.log(\"---------------------------\");\r\n  };\r\n\r\n\r\n  const handleRemoveFile = (e) => {\r\n    // Note that the ref is set async, so it might be null at some point\r\n    if (buttonRef.current) {\r\n      buttonRef.current.removeFile(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CSVReader\r\n        ref={buttonRef}\r\n        onFileLoad={handleOnFileLoad}\r\n        onError={handleOnError}\r\n        noClick\r\n        noDrag\r\n        onRemoveFile={handleOnRemoveFile}\r\n        config={{ header: true, quoteChar: \"`\" }}\r\n      >\r\n        {({ file }) => (\r\n          <aside\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            <Controls.Button\r\n              variant=\"contained\"\r\n              onClick={handleOpenDialog}\r\n              style={{\r\n                borderRadius: 0,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                width: \"40%\",\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n              }}\r\n              text=\"Elegir archivo\"\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                borderWidth: 1,\r\n                borderStyle: \"solid\",\r\n                borderColor: \"#ccc\",\r\n                height: 45,\r\n                lineHeight: 2.5,\r\n                marginTop: 5,\r\n                marginBottom: 5,\r\n                paddingLeft: 13,\r\n                paddingTop: 3,\r\n                width: \"60%\",\r\n              }}\r\n            >\r\n              {file && file.name}\r\n            </div>\r\n            <Controls.Button\r\n              variant=\"contained\"\r\n              style={{\r\n                borderRadius: 0,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                paddingLeft: 20,\r\n                paddingRight: 20,\r\n              }}\r\n              onClick={handleRemoveFile}\r\n              text=\"Eliminar\"\r\n            />\r\n          </aside>\r\n        )}\r\n      </CSVReader>\r\n      \r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\AlertMessage.js",["338","339"],"import React, { useState, useEffect } from 'react'\r\nimport Alert from '@mui/material/Alert';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n\r\nexport default function AlertMessage(props) {\r\n    let {errorMessage, successMessage, openMessage } = props;\r\n    return (\r\n        <Collapse in={openMessage}>\r\n        <Alert\r\n            severity={errorMessage ? \"error\" : \"success\"}\r\n            action={\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                        openMessage = false;\r\n                    }}\r\n                >\r\n                    <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n            }\r\n        >\r\n            {errorMessage ? errorMessage : successMessage}\r\n        </Alert>\r\n    </Collapse>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\useForm.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Graphics\\ShowHistogram.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Graphics\\ShowBoxplot.js",["340","341","342","343"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport { BoxPlotChart } from '@sgratzl/chartjs-chart-boxplot';\r\n\r\n\r\nfunction ShowBoxplot(props) {\r\n    const { data } = props;\r\n    let configs = [];\r\n    let indexes = [];\r\n    let index = 0;\r\n    for (let key in data) {\r\n        indexes.push(index);\r\n        index++;\r\n        const config = {\r\n            // define label tree\r\n            labels: [\"\"],\r\n            datasets: [{\r\n                label: key,\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                borderColor: 'red',\r\n                borderWidth: 1,\r\n                outlierColor: '#ffffff',\r\n                padding: 5,\r\n                itemRadius: 0,\r\n                data: [data[key]]\r\n            }]\r\n        };\r\n        configs.push(config);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        indexes.forEach(i => {\r\n            const context = document.getElementById(\"canvas\" + i).getContext(\"2d\");\r\n            let boxplot = new BoxPlotChart(context, { data: configs[i] });\r\n        })\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {indexes.map((i) => (\r\n                <canvas id={\"canvas\" + i} />\r\n            ))}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ShowBoxplot;","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Predictor\\DateRangeSelector.js",["344","345","346","347","348","349","350"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport default function DateRangeSelector({ setInitialDate, setFinalDate }) {\r\n\r\n    const handleChangeInput = (id, event) => {\r\n        if (id == 0) {\r\n            setInitialDate(event.target.value);\r\n        } else if (id == 1) {\r\n            setFinalDate(event.target.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Box sx={{ display: 'flex', p: 1}}>\r\n\r\n                <Box\r\n                    sx={{\r\n                        width: \"45%\"\r\n                    }}\r\n                >\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" component=\"div\">\r\n                                Fecha Inicial\r\n                            </Typography>\r\n                            <TextField\r\n                                style={{ width: \"100%\" }}\r\n                                type='date'\r\n                                name=\"initialDate\"\r\n                                defaultValue={\"00:00\"}\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                onChange={event => handleChangeInput(0, event)}\r\n                            />\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n                </Box>\r\n                <Box\r\n                    sx={{\r\n                        width: \"45%\"\r\n                    }}\r\n                >\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" component=\"div\">\r\n                                Fecha Final\r\n                            </Typography>\r\n                            <TextField\r\n                                style={{ width: \"100%\" }}\r\n                                type='date'\r\n                                name=\"finalDate\"\r\n                                defaultValue={\"00:00\"}\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                onChange={event => handleChangeInput(1, event)}\r\n                            />\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\PageHeader.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\Controls.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\getFileService.js",["351","352"],"import React from 'react'\r\n\r\nexport const getBase64 = file => {\r\n  return new Promise(resolve => {\r\n    let fileInfo;\r\n    let baseURL = \"\";\r\n    // Make new FileReader\r\n    let reader = new FileReader();\r\n\r\n    // Convert the file to base64 text\r\n    reader.readAsDataURL(file);\r\n\r\n    // on reader load somthing...\r\n    reader.onload = () => {\r\n      // Make a fileInfo Object\r\n      baseURL = reader.result;\r\n      resolve(baseURL);\r\n    };\r\n\r\n  });\r\n};\r\n\r\nexport const checkFileValidations = info => {\r\n  if(info.size >= 15165578){\r\n    throw Error(\"LIMIT_FILE_SIZE\")\r\n  }\r\n}\r\n\r\nexport async function getLocalFile(url) {\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n      headers: {\r\n        'Content-Type': 'image/jpeg',\r\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n      }\r\n    })\r\n    const blob = await response.blob()\r\n    return [URL.createObjectURL(blob), null];\r\n  }\r\n  catch (error) {\r\n    console.error(`get: error occurred ${error}`);\r\n    return [null, error]\r\n  }\r\n}","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\userService.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\predictionService.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\dataService.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\InputButton.js",["353","354"],"import { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5),\r\n        textTransform: 'none'\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    },\r\n\r\n    test: {\r\n        textTransform: 'none',\r\n        margin: theme.spacing(0.5),\r\n    }\r\n}))\r\n\r\nexport default function Button2(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            style={{margin:'auto', textTransform:'none', margin: '4px'}}\r\n            >\r\n            {text}\r\n        </Button>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\DatePicker.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\Button.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\Select.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\Checkbox.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\RadioGroup.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\controls\\Input.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\ImageComponent.js",["355"],"import React from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport defaultImg from '../assets/img/defaultImg.jpeg'\r\nimport { Divider, Grid, } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    sizeAvatar: {\r\n        height: \"150px\",\r\n        width: \"150px\",\r\n        marginBottom: \"25px\",\r\n    },\r\n    margin: {\r\n        marginBottom: \"25px\"\r\n    },\r\n    right: {\r\n        display: \"inline-flex\",\r\n        flex: \"row\"\r\n    }\r\n}))\r\n\r\nexport default function ImageComponent(props) {\r\n    const { initialValues, onChange, profile, ...other } = props\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.margin}\r\n            >\r\n                <div className={classes.right}>\r\n                    <div>\r\n                        <Avatar\r\n                            src={initialValues.image ? initialValues.image : profile?\"\":defaultImg}\r\n                            alt=\"\"\r\n                            className={classes.sizeAvatar}\r\n                            style={{ margin: 'auto' }}>\r\n\r\n                        </Avatar>\r\n                    </div>\r\n\r\n                    <div className={classes.toolbarButtons}>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMenu}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <EditIcon fontSize=\"small\" color=\"success\" />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            getContentAnchorEl={null}\r\n                            anchorEl={anchorEl}\r\n                            anchorOrigin={{\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"center\",\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: \"top\",\r\n                                horizontal: \"center\",\r\n                            }}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <MenuItem>\r\n                                <input\r\n                                    name=\"image\"\r\n                                    accept=\"image/*\"\r\n                                    className={classes.input}\r\n                                    style={{ display: 'none' }}\r\n                                    id=\"raised-button-file\"\r\n                                    type=\"file\"\r\n                                    hidden\r\n                                    onChange={onChange}\r\n                                />                                \r\n                                <label htmlFor=\"raised-button-file\">\r\n                                    Cambiar\r\n                                </label>\r\n                            </MenuItem>\r\n                            <MenuItem id=\"clearImage\" onClick={onChange}>\r\n                                Quitar\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n            <Divider />\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\CircularStatic.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\components\\ScrollToTop.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Factors\\ViewFactors.js",["356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385"],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\factorService.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\Test.js",["386"],"import React from 'react'\r\nimport Modal from '@mui/material/Modal';\r\n\r\nexport default function Test(props) {\r\n    const {open, onClose, ...other} = props;\r\n    console.log(\"hola\")\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={onClose}\r\n            \r\n        >\r\n            <div></div>\r\n        </Modal>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\User\\AssignPermission.js",["387","388","389","390","391","392","393","394","395","396","397","398","399","400","401"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport { Paper, makeStyles, Box } from '@material-ui/core';\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport { getUsers } from '../../services/userService';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Modal from '@mui/material/Modal';\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: '50px 0 0 0',\r\n        width: '90%',\r\n        padding: theme.spacing(3)\r\n    },\r\n    divContent: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        minWidth: 400,\r\n    },\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    sizeAvatar: {\r\n        height: \"150px\",\r\n        width: \"150px\",\r\n        marginBottom: \"25px\",\r\n    },\r\n    imageButton: {\r\n        marginBottom: \"25px\"\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        textAlign: 'center'\r\n      },\r\n}))\r\n\r\nconst initialValues = {\r\n    roles: \"\",\r\n}\r\n\r\nexport default function AssignPermission(props) {\r\n    const inputRef = React.createRef();\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [isEmpty, setIsEmpty] = React.useState(true);\r\n    const { userId, openM, onClose, ...other } = props;\r\n    const validate = (fieldValues = values) => {\r\n    }\r\n    useEffect(async () => {\r\n        let unmounted = false;\r\n        if (userId && openM) {\r\n            let response = await getUsers(userId);\r\n            setValues(response.data.user.roles);\r\n        }else{\r\n            setIsEmpty(true);\r\n            setRoleValue(undefined);\r\n            setInputValue('');\r\n        }\r\n        return () => { unmounted = true; };\r\n    }, [userId, openM]);\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialValues, false, validate);\r\n\r\n    function fixRoles (role){\r\n        for (const roleIndex in values) {\r\n            if (values[roleIndex].projectId === role.projectId){\r\n                let temp = values;\r\n                temp[roleIndex] = role;   \r\n                return temp;             \r\n            }\r\n        }\r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n\r\n    const handleSubmit = async (e) => {\r\n        \r\n        try{\r\n            if(isEmpty){\r\n                throw new Error(\"Por favor seleccione un proyecto\");\r\n            }else{\r\n                setOpen(true);\r\n                const newRoles = fixRoles(roleValue);\r\n                const response = await axios.post(\r\n                    `http://localhost:5000/api/private/userRole/${userId}`, {roles: newRoles}, config\r\n                );\r\n                let responseGet = await getUsers(userId);\r\n                setValues(responseGet.data.user.roles);\r\n                setTimeout(() =>{\r\n                    setOpen(false);\r\n                }, 2000)\r\n            }\r\n        }catch(error){\r\n            setOpen(true);\r\n            setTimeout(() => {\r\n                setOpen(false);\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n\r\n            }, 5000);\r\n            setLoading(false);\r\n            return setError(error.message);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    const [roleValue, setRoleValue] = React.useState(values[0]);\r\n    const [inputValue, setInputValue] = React.useState('');\r\n\r\n    return (\r\n        <Modal\r\n        open={openM}\r\n        onClose={onClose}            \r\n        >\r\n            <div className={classes.divContent}>\r\n                <Paper className={classes.pageContent}>\r\n                <AlertMessage errorMessage={error} successMessage={\"Se ha asignado los permisos!\"} openMessage={open} />\r\n                    <Form >\r\n\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ marginTop: '20px' }}\r\n                        >\r\n                            \r\n                            <Autocomplete\r\n                                value={roleValue}\r\n                                onChange={(event, newValue) => {\r\n                                    if(newValue){\r\n                                        setRoleValue(newValue);\r\n                                    }\r\n                                }}\r\n                                className={classes.center}\r\n                                id=\"combo-box-programs\"\r\n                                options={values}\r\n                                getOptionLabel={(option) => option.projectName}\r\n                                style={{ width: 300, justifyContent: \"center\" }}\r\n                                renderInput={(params) => <TextField {...params} label=\"Proyectos\" variant=\"outlined\" />}\r\n                                inputValue={inputValue}\r\n                                onInputChange={(event, newInputValue) => {\r\n                                    setInputValue(newInputValue);\r\n                                    if (newInputValue === '') {\r\n                                        setIsEmpty(true);\r\n                                        setRoleValue(undefined);\r\n                                    }\r\n                                    else\r\n                                        setIsEmpty(false);\r\n                                }}\r\n                            />\r\n                            \r\n                        </Grid>\r\n                        \r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Controls.Checkbox\r\n                                    name=\"export\"\r\n                                    label=\"Exportar CSV\"\r\n                                    value={roleValue? roleValue.export:false}\r\n                                    onChange={() => {\r\n                                        if (roleValue) setRoleValue({...roleValue, [\"export\"]: !roleValue.export})}\r\n                                    }\r\n                                    \r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Controls.Checkbox\r\n                                    name=\"editFactor\"\r\n                                    label=\"Editar factores\"\r\n                                    value={roleValue? roleValue.editFactor:false}\r\n                                    onChange={() => {\r\n                                        if (roleValue) setRoleValue({...roleValue, [\"editFactor\"]: !roleValue.editFactor})}\r\n                                    }\r\n                                    \r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Controls.Checkbox\r\n                                    name=\"editData\"\r\n                                    label=\"Editar datos\"\r\n                                    value={roleValue? roleValue.editData:false}\r\n                                    onChange={() => {\r\n                                        if (roleValue) setRoleValue({...roleValue, [\"editData\"]: !roleValue.editData})}\r\n                                    }\r\n                                    \r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ marginTop: '20px' }}\r\n                        >\r\n                            <div>\r\n                                <Controls.Button\r\n                                    text=\"Guardar\"\r\n                                    onClick = {handleSubmit}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Form>\r\n                </Paper>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Predictor\\ProjectSelector.js",["402","403","404","405","406","407","408","409","410","411"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport axios from \"axios\";\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport Controls from \"../../components/controls/Controls\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            fontSize: 20,\r\n            background: '#8ade8f',\r\n            color: '#FFFFFF'\r\n        }\r\n    },\r\n    head: {\r\n        fontSize: 20,\r\n        background: '#8ade8f',\r\n        color: '#FFFFFF'\r\n\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center'\r\n    },\r\n    programholderLoading: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        background: '#4287f5',\r\n        color: '#FFFFFF',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        padding: 8\r\n    },\r\n\r\n}));\r\n\r\nexport default function ProjectSelector({setProject, setProjectName}) {\r\n\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleParentData = (bio, bioName) => {\r\n        setProject(bio);\r\n        setProjectName(bioName);\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    const [projects, setProjects] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [projectId, setProjectId] = React.useState('');\r\n\r\n    function wrapValues(projects) {\r\n        setProjects(projects);\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const handleAccept = () => {\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    async function getAllProjects() {\r\n        try {\r\n            setLoading(true);\r\n            const projects = await axios.get(\r\n                \"http://localhost:5000/api/private/project\",\r\n                config\r\n            );\r\n            wrapValues(projects.data.projects);\r\n\r\n\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            setLoading(false);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        getAllProjects();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.table}>\r\n                <AlertMessage errorMessage={error} successMessage={\"\"} openMessage={open} />\r\n                <TableContainer >\r\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\r\n                        <TableHead>\r\n                            <TableRow className={classes.thead}>\r\n                                <TableCell>Nombre</TableCell>\r\n                                <TableCell>¿Es serie temporal?</TableCell>\r\n                                <TableCell>Tipo</TableCell>\r\n                                <TableCell className={classes.programholder}>Acciones</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {projects.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((project) => (\r\n                                <TableRow hover className={classes.row} key={project.id}>\r\n                                    <TableCell>{project.name}</TableCell>\r\n                                    <TableCell>\r\n                                        <Controls.Checkbox\r\n                                            name=\"isTimeSeries\"\r\n                                            label=\"\"\r\n                                            value={project.isTimeSeries}\r\n                                            disabled={true}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{project.type === 'regresion' ? 'Regresión' : 'Clasificación'}</TableCell>\r\n                                    <TableCell>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justifyContent=\"center\"\r\n                                            alignItems=\"center\"\r\n                                        >\r\n                                            <Tooltip title=\"Seleccionar\">\r\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }}onClick={() => handleParentData(project._id, project.name)}><CheckIcon /></Button>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Información\">\r\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/project/show/${project._id}`}><InfoIcon /></Button>\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={projects.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Project\\ShowProject.js",["412","413","414","415","416","417","418","419"],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Project\\ViewProjects.js",["420","421","422","423","424","425","426"],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Project\\ProjectForm.js",["427","428","429","430"],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\projectService.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Predictor\\ProgramSelector.js",["431","432","433","434"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  Paper,\r\n  TableRow,\r\n  TableBody,\r\n  Button,\r\n  makeStyles,\r\n  CssBaseline,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardContainer: {\r\n    width: 800,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n  table: {\r\n    width: \"90%\",\r\n    margin: \"50px 0 0 0\",\r\n  },\r\n  thead: {\r\n    \"& > *\": {\r\n      fontSize: 20,\r\n      background: \"#8ade8f\",\r\n      color: \"#FFFFFF\",\r\n    },\r\n  },\r\n  row: {\r\n    \"& > *\": {\r\n      fontSize: 18,\r\n    },\r\n  },\r\n  buttonheader: {\r\n    display: \"flex\",\r\n  },\r\n  programholder: {\r\n    height: 40,\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    background: \"#4287f5\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  pageContent: {\r\n    width: \"90%\",\r\n    margin: \"50px 0 0 0\",\r\n    padding: theme.spacing(3),\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    textAlign: \"center\",\r\n  },\r\n  horizmenu: {\r\n    display: \"inline-block\",\r\n  },\r\n  textLeft: {\r\n    marginLeft: \"0\",\r\n    paddingLeft: \"0\",\r\n  },\r\n}));\r\n\r\nexport default function ProgramSelector({id, setProgram, setProgramName}) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [programsBio, setProgramsBio] = React.useState([]);\r\n  const [isProgramsBio, setIsProgramsBio] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleParentData = (pl, plName) => {\r\n    setProgram(pl);\r\n    setProgramName(plName);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    getProgramsBio();\r\n    return () => { unmounted = true; };\r\n  }, [id]);\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    },\r\n  };\r\n\r\n  const getProgramsBio = async () => {\r\n    try {\r\n      setLoading(true);\r\n      let response = await axios.get(\r\n        `http://localhost:5000/api/private/programproject/${id}`,\r\n        config\r\n      );\r\n      setProgramsBio(response.data.programs);\r\n      setLoading(false);\r\n      if (response.data.programs.length > 0) setIsProgramsBio(true);\r\n    } catch (error) {\r\n      setTimeout(() => {\r\n        setOpen(false);\r\n        setTimeout(() => {\r\n          setError(\"\");\r\n        }, 2000);\r\n      }, 5000);\r\n      setOpen(true);\r\n      setLoading(false);\r\n      return setError(\"Authentication failed!\");\r\n    }\r\n  };\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <div hidden={!isProgramsBio}>\r\n          <CssBaseline />\r\n          <div className={classes.programholder} hidden={!loading}>\r\n            <Fade\r\n              in={loading}\r\n              style={{\r\n                transitionDelay: \"0m\",\r\n              }}\r\n              unmountOnExit\r\n            >\r\n              <CircularProgress />\r\n            </Fade>\r\n            <br />\r\n          </div>\r\n          <Paper className={classes.table}>\r\n            <TableContainer>\r\n              <Table\r\n                stickyHeader\r\n                aria-label=\"sticky table\"\r\n                className={classes.container}\r\n              >\r\n                <TableHead>\r\n                  <TableRow className={classes.thead}>\r\n                    <TableCell>Nombre</TableCell>\r\n                    <TableCell>Objetivos</TableCell>\r\n                    <TableCell>Definición principal</TableCell>\r\n                    <TableCell className={classes.programholder}>\r\n                      Acciones\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {programsBio\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((program) => (\r\n                      <TableRow hover className={classes.row} key={program.id}>\r\n                        <TableCell>{program.name}</TableCell>\r\n                        <TableCell>{program.objetivesProgram}</TableCell>\r\n                        <TableCell>{program.definitionProgram}</TableCell>\r\n                        <TableCell>\r\n                          <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                          >\r\n                              <Tooltip title=\"Seleccionar\">\r\n                              <Button\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                style={{ marginRight: 10 }}\r\n                                onClick={() => handleParentData(program._id, program.name)}\r\n                              >\r\n                                <CheckIcon />\r\n                              </Button>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Información\">\r\n                              <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                style={{ marginRight: 10 }}\r\n                                component={Link}\r\n                                to={`/program/show/${program._id}`}\r\n                              >\r\n                                <InfoIcon />\r\n                              </Button>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Mostrar datos\">\r\n                              <Button\r\n                                color=\"inherit\"\r\n                                variant=\"contained\"\r\n                                style={{ marginRight: 10 }}\r\n                                component={Link}\r\n                                to={`/data/show/${id}/${program._id}`}\r\n                              >\r\n                                <VisibilityIcon />\r\n                              </Button>\r\n                            </Tooltip>\r\n                            \r\n                          </Grid>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={programsBio.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n        <div className={classes.programholder} hidden={isProgramsBio}>\r\n          <br />\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n            No hay nada qué mostrar en está sección\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Program\\ViewProgram.js",["435","436","437"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { Alert, AlertTitle } from '@material-ui/lab/';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport axios from \"axios\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport { deleteProgram } from '../../services/programService';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { CSVLink } from \"react-csv\"\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            fontSize: 20,\r\n            background: '#17c6f6',\r\n            color: '#FFFFFF'\r\n        }\r\n    },\r\n    head: {\r\n        fontSize: 20,\r\n        background: '#17c6f6',\r\n        color: '#FFFFFF'\r\n\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    buttonheader: {\r\n        display: 'flex'\r\n\r\n    },\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center'\r\n    },\r\n    programholderLoading: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        background: '#17c6f6',\r\n        color: '#FFFFFF',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        padding: 8\r\n    },\r\n    csvContainer: {\r\n        fontSize: 20,\r\n        background: '#108EB0',\r\n\r\n    },\r\n    iconContainer: {\r\n        color: 'white',\r\n        textDecoration: 'none',\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\nexport default function ViewProgram() {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    const [programs, setPrograms] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [programId, setProgramId] = React.useState('');;\r\n\r\n    const classes = useStyles();\r\n\r\n    function wrapValues(programs) {\r\n        setPrograms(programs);\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const handleAccept = () => {\r\n        deleteProgramData()\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const headers = [\r\n        { label: 'id', key: 'id' },\r\n        { label: 'Nombre', key: 'name' },\r\n        { label: 'Objetivos', key: 'objetivesProgram' },\r\n        { label: 'Definición principal', key: 'definitionProgram' },\r\n    ]\r\n\r\n    const csvReport = {\r\n        filename: 'Programs.csv',\r\n        headers: headers,\r\n        data: programs\r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    async function getAllPrograms() {\r\n        try {\r\n            const programs = await axios.get(\r\n                \"http://localhost:5000/api/private/program\",\r\n                config\r\n            );\r\n            wrapValues(programs.data.programs);\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n    useEffect(async () => {\r\n        let unmounted = false;\r\n        await getAllPrograms();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const deleteProgramData = async () => {\r\n        try {\r\n            await deleteProgram(programId);\r\n            getAllPrograms();\r\n        } catch (error) {\r\n            setOpen(true);\r\n            setError(error.message);\r\n            setTimeout(function () {\r\n                setOpen(false);\r\n                setError(\"\");\r\n            }, 3000);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Dialog\r\n                open={openDialog}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este proyecto?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Esta decisión no es reversible.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={handleAccept} color=\"secondary\">\r\n                        Eliminar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <PageHeader\r\n                title=\"Información sobre los programas\"\r\n                subTitle=\"Acá se mostrarán todos los programas del sistema\"\r\n                icon={<InfoIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n\r\n\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.table}\r\n            >\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Box sx={{ width: 'auto' }} padding>\r\n                        <Typography variant=\"h6\" align=\"center\">¿Se necesita un nuevo programa?</Typography>\r\n\r\n                    </Box>\r\n                    <Box textAlign='center'>\r\n                        <Controls.Button color=\"primary\" variant=\"contained\" component={Link} to={`/program/create/`} text=\"Crear programa\" />\r\n                    </Box>\r\n                </Paper>\r\n\r\n            </Grid>\r\n\r\n            <div className={classes.programholderLoading} hidden={!loading}>\r\n                <Fade\r\n                    in={loading}\r\n                    style={{\r\n                        transitionDelay: '0m',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <CircularProgress />\r\n                </Fade>\r\n\r\n            </div>\r\n            <Collapse in={open}>\r\n                <Alert\r\n\r\n                    severity={error ? \"error\" : \"success\"}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpen(false);\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    <AlertTitle>{error ? error : \"Success!\"}</AlertTitle>\r\n                    {error}\r\n                </Alert>\r\n            </Collapse>\r\n            <Paper className={classes.table}>\r\n                <TableContainer >\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        className={classes.csvContainer}\r\n                    >\r\n                        <Tooltip title=\"Exportar programas\">\r\n                            <div className={classes.iconContainer}>\r\n                                <CSVLink {...csvReport} style={{ color: 'white', marginLeft: '10px' }}>\r\n                                    <DownloadIcon fontSize={'large'} />\r\n                                </CSVLink>\r\n                            </div>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\r\n                        <TableHead>\r\n                            <TableRow className={classes.thead}>\r\n                                <TableCell>Nombre</TableCell>\r\n                                <TableCell>Objetivos</TableCell>\r\n                                <TableCell>Definición principal</TableCell>\r\n                                <TableCell className={classes.programholder}>Acciones</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {programs.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((program) => (\r\n                                <TableRow hover className={classes.row} key={program.id}>\r\n                                    <TableCell>{program.name}</TableCell>\r\n                                    <TableCell> {program.objetivesProgram}</TableCell>\r\n                                    <TableCell>{program.definitionProgram}</TableCell>\r\n                                    <TableCell>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justifyContent=\"center\"\r\n                                            alignItems=\"center\"\r\n                                        >\r\n                                            <Tooltip title=\"Editar\">\r\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/program/update/${program._id}`}><ModeEditIcon /></Button>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Información\">\r\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/program/show/${program._id}`}><InfoIcon /></Button>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Eliminar\">\r\n                                                <Button color=\"secondary\" variant=\"contained\" onClick={() => {\r\n                                                    setOpenDialog(true); setProgramId(program._id);\r\n                                                }}><DeleteIcon /></Button>\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={programs.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Program\\ShowProgram.js",["438","439","440","441","442","443","444","445","446"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport axios from \"axios\";\r\nimport defaultImg from '../../assets/img/defaultImg.jpeg'\r\nimport { CSVDownloader } from 'react-papaparse'\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    cardContainer: {\r\n        width: 800,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    media: {\r\n        height: 300,\r\n    },\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            fontSize: 20,\r\n            background: '#8ade8f',\r\n            color: '#FFFFFF'\r\n        }\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    buttonheader: {\r\n        display: 'flex'\r\n\r\n    },\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        background: '#4287f5',\r\n        color: '#FFFFFF'\r\n    },\r\n    pageContent: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0',\r\n        padding: theme.spacing(3),\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        textAlign: 'center'\r\n    },\r\n}));\r\n\r\nconst initialValue = {\r\n    name: '',\r\n    description: '',\r\n    objetivesProgram: '',\r\n    definitionProgram: '',\r\n    image: '',\r\n    projects: [],\r\n}\r\n\r\n\r\nexport default function ShowProjects() {\r\n    const [program, setProgram] = useState(initialValue);\r\n    const { name, description, objetivesProgram, definitionProgram, image } = program;\r\n    const [toExport, setExport] = useState([]);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = React.useState(true);\r\n\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    useEffect(async () => {\r\n        let unmounted = false;\r\n        await getProgram();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    const getProgram = async () => {\r\n        try {\r\n            setLoading(true);\r\n            let response = await axios.get(`http://localhost:5000/api/private/program/${id}`, config);\r\n            setProgram(response.data.program);\r\n            let data = response.data.program;\r\n            setExport([\r\n                {id: data.id,\r\n                name: data.name,\r\n                description: data.description,\r\n                objetivesProgram: data.objetivesProgram,\r\n                definitionProgram: data.definitionProgram,\r\n            }])\r\n            \r\n            setLoading(false);\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setOpen(false);\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n\r\n            }, 5000);\r\n            setOpen(true);\r\n            setLoading(false);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <div className={classes.programholder} hidden={!loading}>\r\n                <Fade\r\n                    in={loading}\r\n                    style={{\r\n                        transitionDelay: '0m',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <CircularProgress />\r\n                </Fade>\r\n                <br />\r\n            </div>\r\n\r\n            <PageHeader\r\n                title=\"Información detallada sobre un programa\"\r\n                icon={<InfoIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n            <br />\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                style={{ width: \"90%\" }}\r\n            >\r\n                <Card className={classes.cardContainer}>\r\n\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={image ? image : defaultImg}\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {name ? name : ''}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n                            {description ? description : ''}\r\n                        </Typography>\r\n                    </CardContent>\r\n\r\n                    <CardActions>\r\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\r\n                            <span>Objetivos:</span>\r\n                            {objetivesProgram ? objetivesProgram : ''}\r\n                        </Typography>\r\n                    </CardActions>\r\n                    <CardActions>\r\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\r\n                            <span>Definición principal:</span>\r\n                            {definitionProgram ? definitionProgram : ''}\r\n                        </Typography>\r\n                        {/* <Tooltip title=\"Exportar programa\">\r\n                            <div className={classes.iconContainer}>\r\n                                <CSVDownloader\r\n                                    data={toExport}\r\n                                    filename={'program'}\r\n                                    config={{}}\r\n                                >\r\n                                    <DownloadIcon fontSize={'medium'} color={'success'} />\r\n                                </CSVDownloader>\r\n                            </div>\r\n                        </Tooltip> */}\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n            <br />\r\n        </div>\r\n    );\r\n}","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Program\\ProgramForm.js",["447","448","449"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport { Paper, makeStyles, Box } from '@material-ui/core';\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport { useParams } from 'react-router-dom';\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport axios from 'axios';\r\nimport CircularStatic from '../../components/CircularStatic'\r\nimport ImageComponent from '../../components/ImageComponent';\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    objetivesProgram: '',\r\n    definitionProgram: '',\r\n    image: '',\r\n    projects: []\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: '50px 0 0 0',\r\n        width: '90%',\r\n        padding: theme.spacing(3)\r\n    },\r\n    programholder: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    sizeAvatar: {\r\n        height: \"150px\",\r\n        width: \"150px\",\r\n        marginBottom: \"25px\",\r\n    },\r\n    imageButton: {\r\n        marginBottom: \"25px\"\r\n    },\r\n}))\r\n\r\nexport default function ProgramForm() {\r\n    const { id } = useParams();\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const message = id ? \"Se ha actualizado el programa!\" : \"Se ha guardado el programa!\"\r\n    const title = id ? \"Actualizar Programa\" : \"Añadir nuevo Programa\";\r\n    const description = id ? \"Formulario para actualizar Programa\" : \"Formulario para añadir Programa\";\r\n    const [progress, setProgress] = useState(0);\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('name' in fieldValues)\r\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\r\n        if ('description' in fieldValues)\r\n            temp.description = fieldValues.description ? \"\" : \"Este campo es obligatorio.\"\r\n        if ('objetivesProgram' in fieldValues)\r\n            temp.objetivesProgram = fieldValues.objetivesProgram ? \"\" : \"Este campo es obligatorio.\"\r\n        if ('definitionProgram' in fieldValues)\r\n            temp.definitionProgram = fieldValues.definitionProgram ? \"\" : \"Este campo es obligatorio.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        if (id)\r\n            getProgram();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        }, onUploadProgress: (data) => {\r\n            //Set the progress value to show the progress bar\r\n            setProgress(Math.round((100 * data.loaded) / data.total));\r\n        },\r\n    };\r\n\r\n    const getProgram = async () => {\r\n        setLoading(true);\r\n        try {\r\n            let response = await axios.get(`http://localhost:5000/api/private/program/${id}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n                },\r\n                onDownloadProgress: (data) => {\r\n                    //Set the progress value to show the progress bar                    \r\n                    setProgress(Math.round((100 * data.loaded) / data.total));\r\n                },\r\n            });\r\n            setValues(response.data.program);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setOpen(false);\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n\r\n            }, 5000);\r\n            setOpen(true);\r\n            setLoading(false);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialValues, true, validate);\r\n\r\n    const confirmPost = () => {\r\n        setOpen(true);\r\n        setLoading(false);\r\n        if (!id) {\r\n            console.log(\"create\");\r\n            resetForm({});\r\n        }\r\n\r\n        setTimeout(function () {\r\n            setOpen(false);\r\n        }, 6000);\r\n    }\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            setLoading(true);\r\n            try {\r\n                if (id) {\r\n                    await axios\r\n                        .patch(`http://localhost:5000/api/private/program/${id}`, values, config)\r\n                        .then(confirmPost)\r\n                } else {\r\n                    await axios\r\n                        .post(\"http://localhost:5000/api/private/program/\", values, config)\r\n                        .then(confirmPost)\r\n                }\r\n\r\n            }\r\n\r\n            catch (error) {\r\n                setLoading(false);\r\n                setTimeout(() => {\r\n                    setTimeout(() => {\r\n                        setError(\"\");\r\n                    }, 2000);\r\n                }, 5000);\r\n                return setError(\"Authentication failed!\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title={title}\r\n                subTitle={description}\r\n                icon={<EcoIcon fontSize=\"large\" color='primary'\r\n                />}\r\n            />\r\n            <CircularStatic progress={progress} hidden={!loading} />\r\n            <Paper className={classes.pageContent}>\r\n            <ImageComponent initialValues={values} onChange={handleInputChange}/>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <AlertMessage errorMessage={error} successMessage={message} openMessage={open} />\r\n                    <Grid container\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        style={{ textAlign: 'center' }}>\r\n                        <Grid item xs={6}>\r\n                            <Controls.Input\r\n                                name=\"name\"\r\n                                label=\"Nombre\"\r\n                                value={values.name}\r\n                                onChange={handleInputChange}\r\n                                error={errors.name}\r\n                            />\r\n                            <Controls.Input\r\n                                label=\"Descripción\"\r\n                                name=\"description\"\r\n                                value={values.description}\r\n                                onChange={handleInputChange}\r\n                                error={errors.description}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Controls.Input\r\n                                name=\"objetivesProgram\"\r\n                                label=\"Objetivos\"\r\n                                value={values.objetivesProgram}\r\n                                onChange={handleInputChange}\r\n                                error={errors.objetivesProgram}\r\n                            />\r\n                            <Controls.Input\r\n                                label=\"Definición principal\"\r\n                                name=\"definitionProgram\"\r\n                                value={values.definitionProgram}\r\n                                onChange={handleInputChange}\r\n                                error={errors.definitionProgram}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ marginTop: '20px' }}\r\n                        >\r\n\r\n                            <Controls.Button\r\n                                type=\"submit\"\r\n                                text=\"Guardar\"\r\n                            />\r\n                            <Controls.Button\r\n                                text=\"Limpiar\"\r\n                                color=\"default\"\r\n                                onClick={resetForm} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\programService.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Blog\\ShowBlog.js",["450","451","452","453","454","455","456","457","458"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport axios from \"axios\";\r\nimport defaultImg from '../../assets/img/defaultImg.jpeg'\r\nimport { CSVDownloader } from 'react-papaparse'\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    cardContainer: {\r\n        width: 800,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    media: {\r\n        height: 300,\r\n    },\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            fontSize: 20,\r\n            background: '#8ade8f',\r\n            color: '#FFFFFF'\r\n        }\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    buttonheader: {\r\n        display: 'flex'\r\n\r\n    },\r\n    blogholder: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        background: '#4287f5',\r\n        color: '#FFFFFF'\r\n    },\r\n    pageContent: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0',\r\n        padding: theme.spacing(3),\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        textAlign: 'center'\r\n    },\r\n}));\r\n\r\nconst initialValue = {\r\n    name: '',\r\n    entrada: '',\r\n    image: '',\r\n    projects: [],\r\n}\r\n\r\n\r\nexport default function ShowProjects() {\r\n    const [blog, setBlog] = useState(initialValue);\r\n    const { name, entrada, image } = blog;\r\n    const [toExport, setExport] = useState([]);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = React.useState(true);\r\n\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    useEffect(async () => {\r\n        let unmounted = false;\r\n        await getBlog();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    const getBlog = async () => {\r\n        try {\r\n            setLoading(true);\r\n            let response = await axios.get(`http://localhost:5000/api/private/blog/${id}`, config);\r\n            setBlog(response.data.blog);\r\n            let data = response.data.blog;\r\n            setExport([\r\n                {id: data.id,\r\n                name: data.name,\r\n                entrada: data.entrada,\r\n            }])\r\n            \r\n            setLoading(false);\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setOpen(false);\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n\r\n            }, 5000);\r\n            setOpen(true);\r\n            setLoading(false);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <div className={classes.blogholder} hidden={!loading}>\r\n                <Fade\r\n                    in={loading}\r\n                    style={{\r\n                        transitionDelay: '0m',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <CircularProgress />\r\n                </Fade>\r\n                <br />\r\n            </div>\r\n\r\n            <PageHeader\r\n                title=\"Información detallada sobre un blog\"\r\n                icon={<InfoIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n            <br />\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                style={{ width: \"90%\" }}\r\n            >\r\n                <Card className={classes.cardContainer}>\r\n\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={image ? image : defaultImg}\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Nombre del blog: {name ? name : ''}\r\n                        </Typography>\r\n                    </CardContent>\r\n\r\n                    <CardActions>\r\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\r\n                            <span>Entrada: </span>\r\n                            {entrada ? entrada : ''}\r\n                        </Typography>\r\n                    </CardActions>\r\n                    <CardActions>\r\n                        {/* <Tooltip title=\"Exportar blog\">\r\n                            <div className={classes.iconContainer}>\r\n                                <CSVDownloader\r\n                                    data={toExport}\r\n                                    filename={'blog'}\r\n                                    config={{}}\r\n                                >\r\n                                    <DownloadIcon fontSize={'medium'} color={'success'} />\r\n                                </CSVDownloader>\r\n                            </div>\r\n                        </Tooltip> */}\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n            <br />\r\n        </div>\r\n    );\r\n}","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Blog\\ViewBlog.js",["459","460","461"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles, CssBaseline, Grid } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { Alert, AlertTitle } from '@material-ui/lab/';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport axios from \"axios\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport { deleteBlog } from '../../services/blogService';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { CSVLink } from \"react-csv\"\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 0'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            fontSize: 20,\r\n            background: '#17c6f6',\r\n            color: '#FFFFFF'\r\n        }\r\n    },\r\n    head: {\r\n        fontSize: 20,\r\n        background: '#17c6f6',\r\n        color: '#FFFFFF'\r\n\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    buttonheader: {\r\n        display: 'flex'\r\n\r\n    },\r\n    blogholder: {\r\n        height: 40,\r\n        textAlign: 'center'\r\n    },\r\n    blogholderLoading: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        background: '#17c6f6',\r\n        color: '#FFFFFF',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        padding: 8\r\n    },\r\n    csvContainer: {\r\n        fontSize: 20,\r\n        background: '#108EB0',\r\n\r\n    },\r\n    iconContainer: {\r\n        color: 'white',\r\n        textDecoration: 'none',\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\nexport default function ViewBlog() {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [blogId, setBlogId] = React.useState('');;\r\n\r\n    const classes = useStyles();\r\n\r\n    function wrapValues(blogs) {\r\n        setBlogs(blogs);\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const handleAccept = () => {\r\n        deleteBlogData()\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const headers = [\r\n        { label: 'id', key: 'id' },\r\n        { label: 'Nombre', key: 'name' },\r\n        { label: 'Objetivos', key: 'entrada' },\r\n    ]\r\n\r\n    const csvReport = {\r\n        filename: 'Blogs.csv',\r\n        headers: headers,\r\n        data: blogs\r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n    };\r\n\r\n    async function getAllBlogs() {\r\n        try {\r\n            const blogs = await axios.get(\r\n                \"http://localhost:5000/api/private/blog\",\r\n                config\r\n            );\r\n            wrapValues(blogs.data.blogs);\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n            }, 5000);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n    useEffect(async () => {\r\n        let unmounted = false;\r\n        await getAllBlogs();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const deleteBlogData = async () => {\r\n        try {\r\n            await deleteBlog(blogId);\r\n            getAllBlogs();\r\n        } catch (error) {\r\n            setOpen(true);\r\n            setError(error.message);\r\n            setTimeout(function () {\r\n                setOpen(false);\r\n                setError(\"\");\r\n            }, 3000);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Dialog\r\n                open={openDialog}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"¿Desea borrar este proyecto?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Esta decisión no es reversible.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={handleAccept} color=\"secondary\">\r\n                        Eliminar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <PageHeader\r\n                title=\"Información sobre los blogs\"\r\n                subTitle=\"Acá se mostrarán todos los blogs del sistema\"\r\n                icon={<InfoIcon fontSize=\"large\"\r\n                />}\r\n            />\r\n\r\n\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.table}\r\n            >\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Box sx={{ width: 'auto' }} padding>\r\n                        <Typography variant=\"h6\" align=\"center\">¿Se necesita un nuevo blog?</Typography>\r\n\r\n                    </Box>\r\n                    <Box textAlign='center'>\r\n                        <Controls.Button color=\"primary\" variant=\"contained\" component={Link} to={`/blog/create/`} text=\"Crear blog\" />\r\n                    </Box>\r\n                </Paper>\r\n\r\n            </Grid>\r\n\r\n            <div className={classes.blogholderLoading} hidden={!loading}>\r\n                <Fade\r\n                    in={loading}\r\n                    style={{\r\n                        transitionDelay: '0m',\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <CircularProgress />\r\n                </Fade>\r\n\r\n            </div>\r\n            <Collapse in={open}>\r\n                <Alert\r\n\r\n                    severity={error ? \"error\" : \"success\"}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpen(false);\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    <AlertTitle>{error ? error : \"Success!\"}</AlertTitle>\r\n                    {error}\r\n                </Alert>\r\n            </Collapse>\r\n            <Paper className={classes.table}>\r\n                <TableContainer >\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        className={classes.csvContainer}\r\n                    >\r\n                        <Tooltip title=\"Exportar blogs\">\r\n                            <div className={classes.iconContainer}>\r\n                                <CSVLink {...csvReport} style={{ color: 'white', marginLeft: '10px' }}>\r\n                                    <DownloadIcon fontSize={'large'} />\r\n                                </CSVLink>\r\n                            </div>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Table stickyHeader aria-label=\"sticky table\" className={classes.container}>\r\n                        <TableHead>\r\n                            <TableRow className={classes.thead}>\r\n                                <TableCell>Nombre del blog</TableCell>\r\n                                <TableCell className={classes.blogholder}>Acciones</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {blogs.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((blog) => (\r\n                                <TableRow hover className={classes.row} key={blog.id}>\r\n                                    <TableCell>{blog.name}</TableCell>\r\n                                    <TableCell>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justifyContent=\"center\"\r\n                                            alignItems=\"center\"\r\n                                        >\r\n                                            <Tooltip title=\"Editar\">\r\n                                                <Button color=\"primary\" variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/blog/update/${blog._id}`}><ModeEditIcon /></Button>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Información\">\r\n                                                <Button className={classes.button} variant=\"contained\" style={{ marginRight: 10 }} component={Link} to={`/blog/show/${blog._id}`}><InfoIcon /></Button>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Eliminar\">\r\n                                                <Button color=\"secondary\" variant=\"contained\" onClick={() => {\r\n                                                    setOpenDialog(true); setBlogId(blog._id);\r\n                                                }}><DeleteIcon /></Button>\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={blogs.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\services\\blogService.js",[],"C:\\Users\\Usuario WTK\\Desktop\\zzzzzzzzzzzzzzzzzzzzzzzzzz Proyecto 2\\frontend\\src\\pages\\Blog\\BlogForm.js",["462","463","464"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport { Paper, makeStyles, Box } from '@material-ui/core';\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport { useParams } from 'react-router-dom';\r\nimport AlertMessage from '../../components/AlertMessage';\r\nimport axios from 'axios';\r\nimport CircularStatic from '../../components/CircularStatic'\r\nimport ImageComponent from '../../components/ImageComponent';\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    entrada: '',\r\n    image: '',\r\n    projects: []\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: '50px 0 0 0',\r\n        width: '90%',\r\n        padding: theme.spacing(3)\r\n    },\r\n    blogholder: {\r\n        height: 40,\r\n        textAlign: 'center',\r\n        width: '90%'\r\n    },\r\n    sizeAvatar: {\r\n        height: \"150px\",\r\n        width: \"150px\",\r\n        marginBottom: \"25px\",\r\n    },\r\n    imageButton: {\r\n        marginBottom: \"25px\"\r\n    },\r\n}))\r\n\r\nexport default function BlogForm() {\r\n    const { id } = useParams();\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [error, setError] = useState('');\r\n    const message = id ? \"Se ha actualizado el blog!\" : \"Se ha guardado el blog!\"\r\n    const title = id ? \"Actualizar Blog\" : \"Añadir nuevo Blog\";\r\n    const description = id ? \"Formulario para actualizar Blog\" : \"Formulario para añadir Blog\";\r\n    const [progress, setProgress] = useState(0);\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('name' in fieldValues)\r\n            temp.name = fieldValues.name ? \"\" : \"Este campo es obligatorio.\"\r\n        if ('entrada' in fieldValues)\r\n            temp.entrada = fieldValues.entrada ? \"\" : \"Este campo es obligatorio.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        if (id)\r\n            getBlog();\r\n        return () => { unmounted = true; };\r\n    }, []);\r\n\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        }, onUploadProgress: (data) => {\r\n            //Set the progress value to show the progress bar\r\n            setProgress(Math.round((100 * data.loaded) / data.total));\r\n        },\r\n    };\r\n\r\n    const getBlog = async () => {\r\n        setLoading(true);\r\n        try {\r\n            let response = await axios.get(`http://localhost:5000/api/private/blog/${id}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n                },\r\n                onDownloadProgress: (data) => {\r\n                    //Set the progress value to show the progress bar                    \r\n                    setProgress(Math.round((100 * data.loaded) / data.total));\r\n                },\r\n            });\r\n            setValues(response.data.blog);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setTimeout(() => {\r\n                setOpen(false);\r\n                setTimeout(() => {\r\n                    setError(\"\");\r\n                }, 2000);\r\n\r\n            }, 5000);\r\n            setOpen(true);\r\n            setLoading(false);\r\n            return setError(\"Authentication failed!\");\r\n        }\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialValues, true, validate);\r\n\r\n    const confirmPost = () => {\r\n        setOpen(true);\r\n        setLoading(false);\r\n        if (!id) {\r\n            console.log(\"create\");\r\n            resetForm({});\r\n        }\r\n\r\n        setTimeout(function () {\r\n            setOpen(false);\r\n        }, 6000);\r\n    }\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            setLoading(true);\r\n            try {\r\n                if (id) {\r\n                    await axios\r\n                        .patch(`http://localhost:5000/api/private/blog/${id}`, values, config)\r\n                        .then(confirmPost)\r\n                } else {\r\n                    await axios\r\n                        .post(\"http://localhost:5000/api/private/blog/\", values, config)\r\n                        .then(confirmPost)\r\n                }\r\n\r\n            }\r\n\r\n            catch (error) {\r\n                setLoading(false);\r\n                setTimeout(() => {\r\n                    setTimeout(() => {\r\n                        setError(\"\");\r\n                    }, 2000);\r\n                }, 5000);\r\n                return setError(\"Authentication failed!\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title={title}\r\n                subTitle={description}\r\n                icon={<EcoIcon fontSize=\"large\" color='primary'\r\n                />}\r\n            />\r\n            <CircularStatic progress={progress} hidden={!loading} />\r\n            <Paper className={classes.pageContent}>\r\n            <ImageComponent initialValues={values} onChange={handleInputChange}/>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <AlertMessage errorMessage={error} successMessage={message} openMessage={open} />\r\n                    <Grid container\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        style={{ textAlign: 'center' }}>\r\n                        <Grid item xs={6}>\r\n                            <Controls.Input\r\n                                name=\"name\"\r\n                                label=\"Nombre del blog\"\r\n                                value={values.name}\r\n                                onChange={handleInputChange}\r\n                                error={errors.name}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Controls.Input\r\n                                name=\"entrada\"\r\n                                label=\"Entrada del blog\"\r\n                                value={values.entrada}\r\n                                onChange={handleInputChange}\r\n                                error={errors.entrada}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ marginTop: '20px' }}\r\n                        >\r\n\r\n                            <Controls.Button\r\n                                type=\"submit\"\r\n                                text=\"Guardar\"\r\n                            />\r\n                            <Controls.Button\r\n                                text=\"Limpiar\"\r\n                                color=\"default\"\r\n                                onClick={resetForm} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"465","replacedBy":"466"},{"ruleId":"467","replacedBy":"468"},{"ruleId":"469","severity":1,"message":"470","line":3,"column":8,"nodeType":"471","messageId":"472","endLine":3,"endColumn":16},{"ruleId":"469","severity":1,"message":"473","line":5,"column":8,"nodeType":"471","messageId":"472","endLine":5,"endColumn":12},{"ruleId":"469","severity":1,"message":"474","line":10,"column":8,"nodeType":"471","messageId":"472","endLine":10,"endColumn":21},{"ruleId":"469","severity":1,"message":"475","line":18,"column":8,"nodeType":"471","messageId":"472","endLine":18,"endColumn":22},{"ruleId":"469","severity":1,"message":"476","line":58,"column":17,"nodeType":"471","messageId":"472","endLine":58,"endColumn":25},{"ruleId":"469","severity":1,"message":"477","line":72,"column":12,"nodeType":"471","messageId":"472","endLine":72,"endColumn":16},{"ruleId":"469","severity":1,"message":"478","line":73,"column":11,"nodeType":"471","messageId":"472","endLine":73,"endColumn":15},{"ruleId":"469","severity":1,"message":"479","line":1,"column":8,"nodeType":"471","messageId":"472","endLine":1,"endColumn":19},{"ruleId":"480","severity":1,"message":"481","line":41,"column":17,"nodeType":"482","endLine":41,"endColumn":57},{"ruleId":"483","severity":1,"message":"484","line":35,"column":19,"nodeType":"485","messageId":"486","endLine":35,"endColumn":22},{"ruleId":"469","severity":1,"message":"487","line":57,"column":9,"nodeType":"471","messageId":"472","endLine":57,"endColumn":18},{"ruleId":"469","severity":1,"message":"488","line":119,"column":17,"nodeType":"471","messageId":"472","endLine":119,"endColumn":21},{"ruleId":"469","severity":1,"message":"489","line":36,"column":10,"nodeType":"471","messageId":"472","endLine":36,"endColumn":15},{"ruleId":"469","severity":1,"message":"490","line":36,"column":17,"nodeType":"471","messageId":"472","endLine":36,"endColumn":25},{"ruleId":"469","severity":1,"message":"491","line":37,"column":10,"nodeType":"471","messageId":"472","endLine":37,"endColumn":18},{"ruleId":"469","severity":1,"message":"492","line":37,"column":20,"nodeType":"471","messageId":"472","endLine":37,"endColumn":31},{"ruleId":"469","severity":1,"message":"493","line":101,"column":5,"nodeType":"471","messageId":"472","endLine":101,"endColumn":14},{"ruleId":"469","severity":1,"message":"494","line":105,"column":5,"nodeType":"471","messageId":"472","endLine":105,"endColumn":14},{"ruleId":"480","severity":1,"message":"481","line":116,"column":11,"nodeType":"482","endLine":116,"endColumn":51},{"ruleId":"469","severity":1,"message":"495","line":3,"column":10,"nodeType":"471","messageId":"472","endLine":3,"endColumn":14},{"ruleId":"483","severity":1,"message":"484","line":18,"column":21,"nodeType":"485","messageId":"486","endLine":18,"endColumn":24},{"ruleId":"469","severity":1,"message":"496","line":19,"column":11,"nodeType":"471","messageId":"472","endLine":19,"endColumn":18},{"ruleId":"469","severity":1,"message":"487","line":78,"column":13,"nodeType":"471","messageId":"472","endLine":78,"endColumn":22},{"ruleId":"497","severity":1,"message":"498","line":100,"column":8,"nodeType":"499","endLine":100,"endColumn":10,"suggestions":"500"},{"ruleId":"469","severity":1,"message":"488","line":134,"column":21,"nodeType":"471","messageId":"472","endLine":134,"endColumn":25},{"ruleId":"469","severity":1,"message":"501","line":25,"column":8,"nodeType":"471","messageId":"472","endLine":25,"endColumn":13},{"ruleId":"469","severity":1,"message":"502","line":27,"column":8,"nodeType":"471","messageId":"472","endLine":27,"endColumn":12},{"ruleId":"469","severity":1,"message":"487","line":151,"column":13,"nodeType":"471","messageId":"472","endLine":151,"endColumn":22},{"ruleId":"497","severity":1,"message":"503","line":154,"column":8,"nodeType":"499","endLine":154,"endColumn":10,"suggestions":"504"},{"ruleId":"469","severity":1,"message":"505","line":158,"column":17,"nodeType":"471","messageId":"472","endLine":158,"endColumn":25},{"ruleId":"497","severity":1,"message":"506","line":110,"column":15,"nodeType":"507","endLine":114,"endColumn":6},{"ruleId":"469","severity":1,"message":"487","line":111,"column":13,"nodeType":"471","messageId":"472","endLine":111,"endColumn":22},{"ruleId":"497","severity":1,"message":"508","line":114,"column":8,"nodeType":"499","endLine":114,"endColumn":10,"suggestions":"509"},{"ruleId":"469","severity":1,"message":"510","line":3,"column":10,"nodeType":"471","messageId":"472","endLine":3,"endColumn":18},{"ruleId":"469","severity":1,"message":"511","line":1,"column":27,"nodeType":"471","messageId":"472","endLine":1,"endColumn":36},{"ruleId":"469","severity":1,"message":"512","line":9,"column":29,"nodeType":"471","messageId":"472","endLine":9,"endColumn":32},{"ruleId":"469","severity":1,"message":"513","line":14,"column":8,"nodeType":"471","messageId":"472","endLine":14,"endColumn":13},{"ruleId":"469","severity":1,"message":"514","line":51,"column":9,"nodeType":"471","messageId":"472","endLine":51,"endColumn":15},{"ruleId":"469","severity":1,"message":"493","line":74,"column":19,"nodeType":"471","messageId":"472","endLine":74,"endColumn":28},{"ruleId":"469","severity":1,"message":"512","line":9,"column":29,"nodeType":"471","messageId":"472","endLine":9,"endColumn":32},{"ruleId":"469","severity":1,"message":"515","line":18,"column":7,"nodeType":"471","messageId":"472","endLine":18,"endColumn":16},{"ruleId":"469","severity":1,"message":"487","line":52,"column":9,"nodeType":"471","messageId":"472","endLine":52,"endColumn":18},{"ruleId":"497","severity":1,"message":"516","line":55,"column":6,"nodeType":"499","endLine":55,"endColumn":8,"suggestions":"517"},{"ruleId":"469","severity":1,"message":"495","line":11,"column":10,"nodeType":"471","messageId":"472","endLine":11,"endColumn":14},{"ruleId":"469","severity":1,"message":"487","line":164,"column":13,"nodeType":"471","messageId":"472","endLine":164,"endColumn":22},{"ruleId":"497","severity":1,"message":"518","line":167,"column":8,"nodeType":"499","endLine":167,"endColumn":10,"suggestions":"519"},{"ruleId":"469","severity":1,"message":"520","line":15,"column":8,"nodeType":"471","messageId":"472","endLine":15,"endColumn":22},{"ruleId":"469","severity":1,"message":"521","line":140,"column":12,"nodeType":"471","messageId":"472","endLine":140,"endColumn":20},{"ruleId":"469","severity":1,"message":"522","line":140,"column":22,"nodeType":"471","messageId":"472","endLine":140,"endColumn":31},{"ruleId":"497","severity":1,"message":"506","line":247,"column":15,"nodeType":"507","endLine":255,"endColumn":6},{"ruleId":"469","severity":1,"message":"487","line":248,"column":13,"nodeType":"471","messageId":"472","endLine":248,"endColumn":22},{"ruleId":"497","severity":1,"message":"523","line":255,"column":8,"nodeType":"499","endLine":255,"endColumn":10,"suggestions":"524"},{"ruleId":"469","severity":1,"message":"495","line":11,"column":10,"nodeType":"471","messageId":"472","endLine":11,"endColumn":14},{"ruleId":"469","severity":1,"message":"525","line":13,"column":12,"nodeType":"471","messageId":"472","endLine":13,"endColumn":17},{"ruleId":"469","severity":1,"message":"487","line":42,"column":13,"nodeType":"471","messageId":"472","endLine":42,"endColumn":22},{"ruleId":"497","severity":1,"message":"526","line":45,"column":8,"nodeType":"499","endLine":45,"endColumn":10,"suggestions":"527"},{"ruleId":"469","severity":1,"message":"528","line":1,"column":17,"nodeType":"471","messageId":"472","endLine":1,"endColumn":26},{"ruleId":"469","severity":1,"message":"529","line":3,"column":21,"nodeType":"471","messageId":"472","endLine":3,"endColumn":30},{"ruleId":"469","severity":1,"message":"530","line":3,"column":32,"nodeType":"471","messageId":"472","endLine":3,"endColumn":42},{"ruleId":"469","severity":1,"message":"531","line":6,"column":10,"nodeType":"471","messageId":"472","endLine":6,"endColumn":17},{"ruleId":"469","severity":1,"message":"532","line":1,"column":17,"nodeType":"471","messageId":"472","endLine":1,"endColumn":25},{"ruleId":"469","severity":1,"message":"511","line":1,"column":27,"nodeType":"471","messageId":"472","endLine":1,"endColumn":36},{"ruleId":"469","severity":1,"message":"533","line":1,"column":17,"nodeType":"471","messageId":"472","endLine":1,"endColumn":23},{"ruleId":"469","severity":1,"message":"532","line":1,"column":25,"nodeType":"471","messageId":"472","endLine":1,"endColumn":33},{"ruleId":"469","severity":1,"message":"534","line":34,"column":17,"nodeType":"471","messageId":"472","endLine":34,"endColumn":24},{"ruleId":"497","severity":1,"message":"535","line":37,"column":8,"nodeType":"499","endLine":37,"endColumn":10,"suggestions":"536"},{"ruleId":"469","severity":1,"message":"537","line":1,"column":17,"nodeType":"471","messageId":"472","endLine":1,"endColumn":25},{"ruleId":"469","severity":1,"message":"532","line":1,"column":27,"nodeType":"471","messageId":"472","endLine":1,"endColumn":35},{"ruleId":"469","severity":1,"message":"511","line":1,"column":37,"nodeType":"471","messageId":"472","endLine":1,"endColumn":46},{"ruleId":"469","severity":1,"message":"538","line":3,"column":8,"nodeType":"471","messageId":"472","endLine":3,"endColumn":13},{"ruleId":"469","severity":1,"message":"539","line":6,"column":8,"nodeType":"471","messageId":"472","endLine":6,"endColumn":19},{"ruleId":"540","severity":1,"message":"541","line":13,"column":16,"nodeType":"542","messageId":"486","endLine":13,"endColumn":18},{"ruleId":"540","severity":1,"message":"541","line":15,"column":23,"nodeType":"542","messageId":"486","endLine":15,"endColumn":25},{"ruleId":"469","severity":1,"message":"543","line":1,"column":8,"nodeType":"471","messageId":"472","endLine":1,"endColumn":13},{"ruleId":"469","severity":1,"message":"544","line":5,"column":9,"nodeType":"471","messageId":"472","endLine":5,"endColumn":17},{"ruleId":"469","severity":1,"message":"545","line":23,"column":11,"nodeType":"471","messageId":"472","endLine":23,"endColumn":18},{"ruleId":"546","severity":1,"message":"547","line":32,"column":58,"nodeType":"548","messageId":"486","endLine":32,"endColumn":64},{"ruleId":"469","severity":1,"message":"549","line":27,"column":50,"nodeType":"471","messageId":"472","endLine":27,"endColumn":55},{"ruleId":"469","severity":1,"message":"550","line":2,"column":10,"nodeType":"471","messageId":"472","endLine":2,"endColumn":15},{"ruleId":"469","severity":1,"message":"551","line":2,"column":17,"nodeType":"471","messageId":"472","endLine":2,"endColumn":26},{"ruleId":"469","severity":1,"message":"552","line":2,"column":28,"nodeType":"471","messageId":"472","endLine":2,"endColumn":37},{"ruleId":"469","severity":1,"message":"538","line":2,"column":39,"nodeType":"471","messageId":"472","endLine":2,"endColumn":44},{"ruleId":"469","severity":1,"message":"553","line":2,"column":46,"nodeType":"471","messageId":"472","endLine":2,"endColumn":54},{"ruleId":"469","severity":1,"message":"554","line":2,"column":56,"nodeType":"471","messageId":"472","endLine":2,"endColumn":65},{"ruleId":"469","severity":1,"message":"555","line":2,"column":100,"nodeType":"471","messageId":"472","endLine":2,"endColumn":104},{"ruleId":"469","severity":1,"message":"495","line":3,"column":10,"nodeType":"471","messageId":"472","endLine":3,"endColumn":14},{"ruleId":"469","severity":1,"message":"556","line":5,"column":8,"nodeType":"471","messageId":"472","endLine":5,"endColumn":16},{"ruleId":"469","severity":1,"message":"557","line":19,"column":8,"nodeType":"471","messageId":"472","endLine":19,"endColumn":15},{"ruleId":"469","severity":1,"message":"558","line":20,"column":8,"nodeType":"471","messageId":"472","endLine":20,"endColumn":18},{"ruleId":"469","severity":1,"message":"559","line":21,"column":8,"nodeType":"471","messageId":"472","endLine":21,"endColumn":20},{"ruleId":"469","severity":1,"message":"560","line":22,"column":8,"nodeType":"471","messageId":"472","endLine":22,"endColumn":16},{"ruleId":"469","severity":1,"message":"561","line":23,"column":8,"nodeType":"471","messageId":"472","endLine":23,"endColumn":18},{"ruleId":"469","severity":1,"message":"562","line":24,"column":8,"nodeType":"471","messageId":"472","endLine":24,"endColumn":22},{"ruleId":"469","severity":1,"message":"563","line":25,"column":8,"nodeType":"471","messageId":"472","endLine":25,"endColumn":23},{"ruleId":"469","severity":1,"message":"512","line":26,"column":8,"nodeType":"471","messageId":"472","endLine":26,"endColumn":11},{"ruleId":"469","severity":1,"message":"564","line":27,"column":8,"nodeType":"471","messageId":"472","endLine":27,"endColumn":18},{"ruleId":"469","severity":1,"message":"565","line":28,"column":8,"nodeType":"471","messageId":"472","endLine":28,"endColumn":18},{"ruleId":"469","severity":1,"message":"566","line":30,"column":10,"nodeType":"471","messageId":"472","endLine":30,"endColumn":17},{"ruleId":"469","severity":1,"message":"567","line":31,"column":8,"nodeType":"471","messageId":"472","endLine":31,"endColumn":20},{"ruleId":"469","severity":1,"message":"568","line":94,"column":12,"nodeType":"471","messageId":"472","endLine":94,"endColumn":16},{"ruleId":"469","severity":1,"message":"569","line":95,"column":12,"nodeType":"471","messageId":"472","endLine":95,"endColumn":23},{"ruleId":"469","severity":1,"message":"549","line":97,"column":21,"nodeType":"471","messageId":"472","endLine":97,"endColumn":26},{"ruleId":"469","severity":1,"message":"570","line":99,"column":11,"nodeType":"471","messageId":"472","endLine":99,"endColumn":27},{"ruleId":"469","severity":1,"message":"571","line":103,"column":11,"nodeType":"471","messageId":"472","endLine":103,"endColumn":34},{"ruleId":"469","severity":1,"message":"572","line":112,"column":22,"nodeType":"471","messageId":"472","endLine":112,"endColumn":33},{"ruleId":"469","severity":1,"message":"487","line":156,"column":13,"nodeType":"471","messageId":"472","endLine":156,"endColumn":22},{"ruleId":"497","severity":1,"message":"518","line":159,"column":8,"nodeType":"499","endLine":159,"endColumn":14,"suggestions":"573"},{"ruleId":"469","severity":1,"message":"574","line":173,"column":11,"nodeType":"471","messageId":"472","endLine":173,"endColumn":20},{"ruleId":"469","severity":1,"message":"549","line":5,"column":30,"nodeType":"471","messageId":"472","endLine":5,"endColumn":35},{"ruleId":"469","severity":1,"message":"512","line":5,"column":29,"nodeType":"471","messageId":"472","endLine":5,"endColumn":32},{"ruleId":"469","severity":1,"message":"575","line":50,"column":11,"nodeType":"471","messageId":"472","endLine":50,"endColumn":19},{"ruleId":"469","severity":1,"message":"576","line":52,"column":12,"nodeType":"471","messageId":"472","endLine":52,"endColumn":19},{"ruleId":"469","severity":1,"message":"549","line":56,"column":40,"nodeType":"471","messageId":"472","endLine":56,"endColumn":45},{"ruleId":"497","severity":1,"message":"506","line":59,"column":15,"nodeType":"507","endLine":70,"endColumn":6},{"ruleId":"469","severity":1,"message":"487","line":60,"column":13,"nodeType":"471","messageId":"472","endLine":60,"endColumn":22},{"ruleId":"497","severity":1,"message":"577","line":70,"column":8,"nodeType":"499","endLine":70,"endColumn":23,"suggestions":"578"},{"ruleId":"469","severity":1,"message":"579","line":75,"column":9,"nodeType":"471","messageId":"472","endLine":75,"endColumn":15},{"ruleId":"469","severity":1,"message":"580","line":76,"column":9,"nodeType":"471","messageId":"472","endLine":76,"endColumn":18},{"ruleId":"469","severity":1,"message":"581","line":77,"column":9,"nodeType":"471","messageId":"472","endLine":77,"endColumn":26},{"ruleId":"469","severity":1,"message":"494","line":78,"column":9,"nodeType":"471","messageId":"472","endLine":78,"endColumn":18},{"ruleId":"469","severity":1,"message":"505","line":106,"column":23,"nodeType":"471","messageId":"472","endLine":106,"endColumn":31},{"ruleId":"582","severity":1,"message":"583","line":193,"column":84,"nodeType":"584","messageId":"585","endLine":193,"endColumn":113,"fix":"586"},{"ruleId":"582","severity":1,"message":"587","line":210,"column":84,"nodeType":"584","messageId":"585","endLine":210,"endColumn":121,"fix":"588"},{"ruleId":"582","severity":1,"message":"589","line":227,"column":84,"nodeType":"584","messageId":"585","endLine":227,"endColumn":117,"fix":"590"},{"ruleId":"469","severity":1,"message":"591","line":2,"column":87,"nodeType":"471","messageId":"472","endLine":2,"endColumn":98},{"ruleId":"469","severity":1,"message":"592","line":79,"column":18,"nodeType":"471","messageId":"472","endLine":79,"endColumn":25},{"ruleId":"469","severity":1,"message":"593","line":80,"column":12,"nodeType":"471","messageId":"472","endLine":80,"endColumn":22},{"ruleId":"469","severity":1,"message":"576","line":82,"column":12,"nodeType":"471","messageId":"472","endLine":82,"endColumn":19},{"ruleId":"469","severity":1,"message":"594","line":83,"column":12,"nodeType":"471","messageId":"472","endLine":83,"endColumn":21},{"ruleId":"469","severity":1,"message":"595","line":83,"column":23,"nodeType":"471","messageId":"472","endLine":83,"endColumn":35},{"ruleId":"469","severity":1,"message":"596","line":90,"column":11,"nodeType":"471","messageId":"472","endLine":90,"endColumn":22},{"ruleId":"469","severity":1,"message":"597","line":94,"column":11,"nodeType":"471","messageId":"472","endLine":94,"endColumn":23},{"ruleId":"469","severity":1,"message":"487","line":127,"column":13,"nodeType":"471","messageId":"472","endLine":127,"endColumn":22},{"ruleId":"497","severity":1,"message":"598","line":130,"column":8,"nodeType":"499","endLine":130,"endColumn":10,"suggestions":"599"},{"ruleId":"469","severity":1,"message":"600","line":25,"column":19,"nodeType":"471","messageId":"472","endLine":25,"endColumn":23},{"ruleId":"469","severity":1,"message":"601","line":141,"column":116,"nodeType":"471","messageId":"472","endLine":141,"endColumn":124},{"ruleId":"469","severity":1,"message":"602","line":141,"column":126,"nodeType":"471","messageId":"472","endLine":141,"endColumn":133},{"ruleId":"497","severity":1,"message":"506","line":155,"column":14,"nodeType":"507","endLine":168,"endColumn":4},{"ruleId":"469","severity":1,"message":"487","line":157,"column":9,"nodeType":"471","messageId":"472","endLine":157,"endColumn":18},{"ruleId":"497","severity":1,"message":"603","line":168,"column":6,"nodeType":"499","endLine":168,"endColumn":8,"suggestions":"604"},{"ruleId":"469","severity":1,"message":"581","line":399,"column":5,"nodeType":"471","messageId":"472","endLine":399,"endColumn":22},{"ruleId":"469","severity":1,"message":"605","line":412,"column":9,"nodeType":"471","messageId":"472","endLine":412,"endColumn":21},{"ruleId":"469","severity":1,"message":"606","line":28,"column":8,"nodeType":"471","messageId":"472","endLine":28,"endColumn":16},{"ruleId":"469","severity":1,"message":"529","line":29,"column":10,"nodeType":"471","messageId":"472","endLine":29,"endColumn":19},{"ruleId":"469","severity":1,"message":"607","line":29,"column":21,"nodeType":"471","messageId":"472","endLine":29,"endColumn":34},{"ruleId":"469","severity":1,"message":"608","line":31,"column":10,"nodeType":"471","messageId":"472","endLine":31,"endColumn":17},{"ruleId":"469","severity":1,"message":"487","line":224,"column":13,"nodeType":"471","messageId":"472","endLine":224,"endColumn":22},{"ruleId":"497","severity":1,"message":"598","line":232,"column":8,"nodeType":"499","endLine":232,"endColumn":10,"suggestions":"609"},{"ruleId":"469","severity":1,"message":"505","line":236,"column":17,"nodeType":"471","messageId":"472","endLine":236,"endColumn":25},{"ruleId":"469","severity":1,"message":"512","line":5,"column":29,"nodeType":"471","messageId":"472","endLine":5,"endColumn":32},{"ruleId":"469","severity":1,"message":"610","line":15,"column":7,"nodeType":"471","messageId":"472","endLine":15,"endColumn":22},{"ruleId":"469","severity":1,"message":"487","line":94,"column":13,"nodeType":"471","messageId":"472","endLine":94,"endColumn":22},{"ruleId":"497","severity":1,"message":"611","line":98,"column":8,"nodeType":"499","endLine":98,"endColumn":10,"suggestions":"612"},{"ruleId":"469","severity":1,"message":"613","line":87,"column":10,"nodeType":"471","messageId":"472","endLine":87,"endColumn":14},{"ruleId":"469","severity":1,"message":"525","line":88,"column":10,"nodeType":"471","messageId":"472","endLine":88,"endColumn":15},{"ruleId":"469","severity":1,"message":"487","line":105,"column":9,"nodeType":"471","messageId":"472","endLine":105,"endColumn":18},{"ruleId":"497","severity":1,"message":"614","line":108,"column":6,"nodeType":"499","endLine":108,"endColumn":10,"suggestions":"615"},{"ruleId":"497","severity":1,"message":"506","line":168,"column":15,"nodeType":"507","endLine":172,"endColumn":6},{"ruleId":"469","severity":1,"message":"487","line":169,"column":13,"nodeType":"471","messageId":"472","endLine":169,"endColumn":22},{"ruleId":"497","severity":1,"message":"616","line":172,"column":8,"nodeType":"499","endLine":172,"endColumn":10,"suggestions":"617"},{"ruleId":"469","severity":1,"message":"607","line":17,"column":10,"nodeType":"471","messageId":"472","endLine":17,"endColumn":23},{"ruleId":"469","severity":1,"message":"567","line":18,"column":8,"nodeType":"471","messageId":"472","endLine":18,"endColumn":20},{"ruleId":"469","severity":1,"message":"557","line":19,"column":8,"nodeType":"471","messageId":"472","endLine":19,"endColumn":15},{"ruleId":"469","severity":1,"message":"521","line":83,"column":12,"nodeType":"471","messageId":"472","endLine":83,"endColumn":20},{"ruleId":"469","severity":1,"message":"613","line":85,"column":12,"nodeType":"471","messageId":"472","endLine":85,"endColumn":16},{"ruleId":"469","severity":1,"message":"525","line":86,"column":12,"nodeType":"471","messageId":"472","endLine":86,"endColumn":17},{"ruleId":"497","severity":1,"message":"506","line":91,"column":15,"nodeType":"507","endLine":95,"endColumn":6},{"ruleId":"469","severity":1,"message":"487","line":92,"column":13,"nodeType":"471","messageId":"472","endLine":92,"endColumn":22},{"ruleId":"497","severity":1,"message":"618","line":95,"column":8,"nodeType":"499","endLine":95,"endColumn":10,"suggestions":"619"},{"ruleId":"469","severity":1,"message":"512","line":5,"column":29,"nodeType":"471","messageId":"472","endLine":5,"endColumn":32},{"ruleId":"469","severity":1,"message":"487","line":73,"column":13,"nodeType":"471","messageId":"472","endLine":73,"endColumn":22},{"ruleId":"497","severity":1,"message":"620","line":77,"column":8,"nodeType":"499","endLine":77,"endColumn":10,"suggestions":"621"},{"ruleId":"469","severity":1,"message":"607","line":17,"column":10,"nodeType":"471","messageId":"472","endLine":17,"endColumn":23},{"ruleId":"469","severity":1,"message":"567","line":18,"column":8,"nodeType":"471","messageId":"472","endLine":18,"endColumn":20},{"ruleId":"469","severity":1,"message":"557","line":19,"column":8,"nodeType":"471","messageId":"472","endLine":19,"endColumn":15},{"ruleId":"469","severity":1,"message":"521","line":81,"column":12,"nodeType":"471","messageId":"472","endLine":81,"endColumn":20},{"ruleId":"469","severity":1,"message":"613","line":83,"column":12,"nodeType":"471","messageId":"472","endLine":83,"endColumn":16},{"ruleId":"469","severity":1,"message":"525","line":84,"column":12,"nodeType":"471","messageId":"472","endLine":84,"endColumn":17},{"ruleId":"497","severity":1,"message":"506","line":89,"column":15,"nodeType":"507","endLine":93,"endColumn":6},{"ruleId":"469","severity":1,"message":"487","line":90,"column":13,"nodeType":"471","messageId":"472","endLine":90,"endColumn":22},{"ruleId":"497","severity":1,"message":"622","line":93,"column":8,"nodeType":"499","endLine":93,"endColumn":10,"suggestions":"623"},{"ruleId":"497","severity":1,"message":"506","line":167,"column":15,"nodeType":"507","endLine":171,"endColumn":6},{"ruleId":"469","severity":1,"message":"487","line":168,"column":13,"nodeType":"471","messageId":"472","endLine":168,"endColumn":22},{"ruleId":"497","severity":1,"message":"624","line":171,"column":8,"nodeType":"499","endLine":171,"endColumn":10,"suggestions":"625"},{"ruleId":"469","severity":1,"message":"512","line":5,"column":29,"nodeType":"471","messageId":"472","endLine":5,"endColumn":32},{"ruleId":"469","severity":1,"message":"487","line":67,"column":13,"nodeType":"471","messageId":"472","endLine":67,"endColumn":22},{"ruleId":"497","severity":1,"message":"626","line":71,"column":8,"nodeType":"499","endLine":71,"endColumn":10,"suggestions":"627"},"no-native-reassign",["628"],"no-negated-in-lhs",["629"],"no-unused-vars","'MenuIcon' is defined but never used.","Identifier","unusedVar","'clsx' is defined but never used.","'AccountCircle' is defined but never used.","'LocationOnIcon' is defined but never used.","'setValue' is assigned a value but never used.","'test' is defined but never used.","'type' is assigned a value but never used.","'FileManager' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'unmounted' is assigned a value but never used.","'data' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setValues' is assigned a value but never used.","'resetForm' is assigned a value but never used.","'Link' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.","ArrayExpression",["630"],"'Modal' is defined but never used.","'Test' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllUsers'. Either include it or remove the dependency array.",["631"],"'response' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["632"],"'Redirect' is defined but never used.","'useEffect' is defined but never used.","'Box' is defined but never used.","'axios' is defined but never used.","'config' is assigned a value but never used.","'typeItems' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFactor'. Either include it or remove the dependency array.",["633"],"React Hook useEffect has a missing dependency: 'getAllFactors'. Either include it or remove the dependency array.",["634"],"'VisibilityIcon' is defined but never used.","'toExport' is assigned a value but never used.","'setExport' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bid', 'getAllData', 'getAllFactors', and 'userType'. Either include them or remove the dependency array.",["635"],"'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["636"],"'Component' is defined but never used.","'jsonToCSV' is defined but never used.","'readString' is defined but never used.","'addData' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'boxplot' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'configs' and 'indexes'. Either include them or remove the dependency array.",["637"],"'Fragment' is defined but never used.","'Paper' is defined but never used.","'CardActions' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'React' is defined but never used.","'fileInfo' is defined but never used.","'classes' is assigned a value but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'other' is assigned a value but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableCell' is defined but never used.","'TableRow' is defined but never used.","'TableBody' is defined but never used.","'Grid' is defined but never used.","'Controls' is defined but never used.","'Tooltip' is defined but never used.","'DeleteIcon' is defined but never used.","'ModeEditIcon' is defined but never used.","'InfoIcon' is defined but never used.","'PageHeader' is defined but never used.","'TableContainer' is defined but never used.","'TablePagination' is defined but never used.","'Typography' is defined but never used.","'ButtonBase' is defined but never used.","'CSVLink' is defined but never used.","'DownloadIcon' is defined but never used.","'page' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","'setFactorId' is assigned a value but never used.",["638"],"'csvReport' is assigned a value but never used.","'inputRef' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.",["639"],"'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"export\"] found.","Property","unnecessarilyComputedProperty",{"range":"640","text":"641"},"Unnecessarily computed property [\"editFactor\"] found.",{"range":"642","text":"643"},"Unnecessarily computed property [\"editData\"] found.",{"range":"644","text":"645"},"'CssBaseline' is defined but never used.","'setOpen' is assigned a value but never used.","'openDialog' is assigned a value but never used.","'projectId' is assigned a value but never used.","'setProjectId' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleAccept' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllProjects'. Either include it or remove the dependency array.",["646"],"'Form' is defined but never used.","'programs' is assigned a value but never used.","'factors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFilteredPrograms', 'getProgramsBio', 'getProject', 'id', and 'userType'. Either include them or remove the dependency array.",["647"],"'handleSubmit' is assigned a value but never used.","'Download' is defined but never used.","'CSVDownloader' is defined but never used.","'version' is defined but never used.",["648"],"'predictionItems' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProject' and 'id'. Either include them or remove the dependency array.",["649"],"'open' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProgramsBio'. Either include it or remove the dependency array.",["650"],"React Hook useEffect has a missing dependency: 'getAllPrograms'. Either include it or remove the dependency array.",["651"],"React Hook useEffect has a missing dependency: 'getProgram'. Either include it or remove the dependency array.",["652"],"React Hook useEffect has missing dependencies: 'getProgram' and 'id'. Either include them or remove the dependency array.",["653"],"React Hook useEffect has a missing dependency: 'getBlog'. Either include it or remove the dependency array.",["654"],"React Hook useEffect has a missing dependency: 'getAllBlogs'. Either include it or remove the dependency array.",["655"],"React Hook useEffect has missing dependencies: 'getBlog' and 'id'. Either include them or remove the dependency array.",["656"],"no-global-assign","no-unsafe-negation",{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"desc":"669","fix":"670"},{"desc":"671","fix":"672"},{"desc":"673","fix":"674"},{"desc":"675","fix":"676"},[6786,6796],"\"export\"",[7593,7607],"\"editFactor\"",[8401,8413],"\"editData\"",{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"677","fix":"681"},{"desc":"682","fix":"683"},{"desc":"684","fix":"685"},{"desc":"686","fix":"687"},{"desc":"688","fix":"689"},{"desc":"690","fix":"691"},{"desc":"692","fix":"693"},{"desc":"694","fix":"695"},{"desc":"696","fix":"697"},"Update the dependencies array to be: [config]",{"range":"698","text":"699"},"Update the dependencies array to be: [getAllUsers]",{"range":"700","text":"701"},"Update the dependencies array to be: [getUser]",{"range":"702","text":"703"},"Update the dependencies array to be: [getFactor]",{"range":"704","text":"705"},"Update the dependencies array to be: [getAllFactors]",{"range":"706","text":"707"},"Update the dependencies array to be: [bid, getAllData, getAllFactors, userType]",{"range":"708","text":"709"},"Update the dependencies array to be: [getData]",{"range":"710","text":"711"},"Update the dependencies array to be: [configs, indexes]",{"range":"712","text":"713"},"Update the dependencies array to be: [getAllFactors, role]",{"range":"714","text":"715"},"Update the dependencies array to be: [userId, openM, setValues]",{"range":"716","text":"717"},"Update the dependencies array to be: [getAllProjects]",{"range":"718","text":"719"},"Update the dependencies array to be: [getFilteredPrograms, getProgramsBio, getProject, id, userType]",{"range":"720","text":"721"},{"range":"722","text":"719"},"Update the dependencies array to be: [getProject, id]",{"range":"723","text":"724"},"Update the dependencies array to be: [getProgramsBio, id]",{"range":"725","text":"726"},"Update the dependencies array to be: [getAllPrograms]",{"range":"727","text":"728"},"Update the dependencies array to be: [getProgram]",{"range":"729","text":"730"},"Update the dependencies array to be: [getProgram, id]",{"range":"731","text":"732"},"Update the dependencies array to be: [getBlog]",{"range":"733","text":"734"},"Update the dependencies array to be: [getAllBlogs]",{"range":"735","text":"736"},"Update the dependencies array to be: [getBlog, id]",{"range":"737","text":"738"},[3243,3245],"[config]",[4613,4615],"[getAllUsers]",[3640,3642],"[getUser]",[1658,1660],"[getFactor]",[5551,5553],"[getAllFactors]",[8439,8441],"[bid, getAllData, getAllFactors, userType]",[1486,1488],"[getData]",[1043,1045],"[configs, indexes]",[4803,4809],"[getAllFactors, role]",[2135,2150],"[userId, openM, setValues]",[3607,3609],"[getAllProjects]",[5062,5064],"[getFilteredPrograms, getProgramsBio, getProject, id, userType]",[6862,6864],[3488,3490],"[getProject, id]",[2617,2621],"[getProgramsBio, id]",[5108,5110],"[getAllPrograms]",[2654,2656],"[getProgram]",[2762,2764],"[getProgram, id]",[2539,2541],"[getBlog]",[4966,4968],"[getAllBlogs]",[2355,2357],"[getBlog, id]"]